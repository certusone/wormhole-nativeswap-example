{"version":3,"sources":["route/generic.ts","route/uniswap-core.ts","route/uniswap-v2.ts","route/quickswap.ts","route/uniswap-v3.ts","route/terra-ust-transfer.ts","route/hurricaneswap.ts","route/pancakeswap.ts","route/cross-quote.ts","utils/math.ts","swapper/helpers.ts","route/evm.ts","utils/consts.ts","swapper/swapper.ts","addresses/goerli.ts","addresses/mumbai.ts","addresses/fuji.ts","addresses/bsc.ts","components/ButtonWithLoader.tsx","contexts/EthereumProviderContext.tsx","components/ToggleConnectedButton.tsx","components/EthereumSignerKey.tsx","icons/eth.svg","icons/polygon.svg","icons/terra.svg","icons/bsc.svg","icons/avax.svg","components/TokenSelect.tsx","muiTheme.js","utils/parseError.ts","components/Settings.tsx","utils/getIsTransferCompletedWithRetry.ts","components/CircleLoader.tsx","components/SwapProgress.tsx","icons/Discord.svg","icons/Docs.svg","icons/Github.svg","icons/Medium.svg","icons/Telegram.svg","icons/Twitter.svg","icons/wormhole_logo.svg","components/Footer.tsx","contexts/TerraWalletContext.tsx","components/TerraWalletKey.tsx","hooks/useIsWalletReady.ts","views/Home.tsx","App.tsx","components/ErrorBoundary.js","index.js"],"names":["UstLocation","RouterCore","GenericToken","UniEvmToken","chainId","erc20","uniToken","this","address","getAddress","decimals","getDecimals","Token","getContract","signer","a","getBalanceOf","amount","computeUnitAmount","unitAmount","formatAmount","CurrencyAmount","fromRawAmount","getUniToken","toString","left","right","addAmounts","subtractAmounts","makeUniEvmToken","provider","tokenAddress","EvmToken","create","stringToBigNumber","value","ethers","BigNumber","from","makeExactInParameters","router","amountIn","minAmountOut","protocol","getProtocol","tokenIn","tokenOut","poolFee","getPoolFee","deadline","getTradeDeadline","path","makeExactOutParameters","amountOut","maxAmountIn","UniswapRouterCore","network","tokenInfo","ustLocation","getNetwork","Out","Promise","all","ustPairedAddress","Math","floor","Date","now","add","PROTOCOL","UniswapV2Router","factoryAddress","pairContract","pair","undefined","Error","computePairAddress","tokenA","tokenB","pairAddress","computePoolAddress","poolContract","Contract","IUniswapV2PairABI","factory","token0","getReserves","reserves","reserve0","_reserve0","reserve1","_reserve1","toLowerCase","Pair","slippage","createPool","route","Route","currencyAmountIn","computeCurrencyAmount","quote","Trade","TradeType","EXACT_INPUT","FixedNumber","outputAmount","toSignificant","slippageMultiplier","subUnsafe","minAmountOutWithSlippage","mulUnsafe","round","currencyAmountOut","EXACT_OUTPUT","inputAmount","slippageDivisor","maxAmountInWithSlippage","divUnsafe","QuickswapRouter","MATIC_TOKEN_INFO","UniswapV3Router","pool","FeeAmount","MEDIUM","initializeTokens","ETH_TOKEN_INFO","fee","IUniswapV3PoolABI","poolAddress","liquidity","slot0","slot","sqrtPriceX96","tick","bigLiq","JSBI","BigInt","negBigLiq","multiply","tickConstructorArgs","index","nearestUsableTick","TickMath","MIN_TICK","TICK_SPACINGS","liquidityNet","liquidityGross","MAX_TICK","Pool","fromRoute","computeTradeExactIn","trade","computeTradeExactOut","UST_AMOUNT_MULTIPLIER","TerraUstTransfer","UST_TOKEN_INFO","resolve","Dec","div","formatAmountIn","unitified","mul","Int","computeUnitAmountIn","HurricaneswapRouter","AVAX_TOKEN_INFO","PancakeswapRouter","BNB_TOKEN_INFO","QuoteType","TERRA_UST","makeEvmProviderFromAddress","url","process","providers","StaticJsonRpcProvider","getChainIdFromAddress","CHAIN_ID_ETH","CHAIN_ID_POLYGON","CHAIN_ID_AVAX","CHAIN_ID_BSC","CHAIN_ID_TERRA","makeRouter","loc","EthRouter","initialize","MaticRouter","AvaxRouter","BnbRouter","UstRouter","splitSlippageInHalf","totalSlippage","divisor","UniswapToUniswapQuoter","tokenInAddress","tokenOutAddress","srcRouter","dstRouter","In","computeAndVerifyPoolAddress","isSrcUst","isDstUst","computeUnitAmountOut","getTokenOutAddress","relayerFeeUst","singleSlippage","computeSwapSlippage","fetchExactInQuote","srcMinAmountOut","dstAmountIn","Number","getTokenInDecimals","dstAmountInAfterFee","dstMinAmountOut","params","ustAmountIn","src","makeSrcExactInParameters","dst","makeDstExactInParameters","relayerFee","getRelayerFee","fetchExactOutQuote","dstMaxAmountIn","srcAmountOut","getTokenOutDecimals","srcAmountOutBeforeFee","addUnsafe","srcMaxAmountIn","makeSrcExactOutParameters","makeDstExactOutParameters","setDeadline","getProvider","CROSSCHAINSWAP_GAS_PARAMETERS_EIP1559","gasLimit","maxFeePerGas","maxPriorityFeePerGas","CROSSCHAINSWAP_GAS_PARAMETERS_EVM","gasPrice","EVM_EIP1559_CHAIN_IDS","EVM_ETH_NETWORK_CHAIN_ID","EVM_POLYGON_NETWORK_CHAIN_ID","EVM_AVAX_NETWORK_CHAIN_ID","getEvmGasParametersForContract","contract","getChainIdFromContract","indexOf","evmSwapExactInFromVaaNative","swapContractWithSigner","signedVaa","gasParams","recvAndSwapExactNativeIn","tx","wait","evmSwapExactInFromVaaToken","recvAndSwapExactIn","evmSwapExactOutFromVaaNative","recvAndSwapExactNativeOut","evmSwapExactOutFromVaaToken","recvAndSwapExactOut","token","makeErc20Contract","balanceOf","balanceBeforeDecimals","utils","formatUnits","parseUnits","o","Erc20Abi","name","evmChainId","maxAmount","TOKEN_INFOS","getSupportedSwaps","filter","x","getEvmChainId","getChainName","RELAYER_FEE_UST","WORMHOLE_RPC_HOSTS","CORE_BRIDGE_ADDRESS_ETHEREUM","CORE_BRIDGE_ADDRESS_POLYGON","CORE_BRIDGE_ADDRESS_AVALANCHE","CORE_BRIDGE_ADDRESS_BSC","CORE_BRIDGE_ADDRESS_TERRA","TOKEN_BRIDGE_ADDRESS_ETHEREUM","TOKEN_BRIDGE_ADDRESS_POLYGON","TOKEN_BRIDGE_ADDRESS_BSC","TOKEN_BRIDGE_ADDRESS_AVALANCHE","TOKEN_BRIDGE_ADDRESS_TERRA","APPROVAL_GAS_LIMIT","NULL_SWAP_PATH","nullAddress","Buffer","alloc","makeNullSwapPath","EXECUTION_PARAMETERS_ETHEREUM","crossChainSwap","CROSSCHAINSWAP_CONTRACT_ADDRESS_ETHEREUM","wormhole","coreBridgeAddress","tokenBridgeAddress","EXECUTION_PARAMETERS_POLYGON","CROSSCHAINSWAP_CONTRACT_ADDRESS_POLYGON","EXECUTION_PARAMETERS_AVALANCHE","CROSSCHAINSWAP_CONTRACT_ADDRESS_AVALANCHE","EXECUTION_PARAMETERS_BSC","CROSSCHAINSWAP_CONTRACT_ADDRESS_BSC","EXECUTION_PARAMETERS_TERRA","makeExecutionParameters","evmApproveContractTokenSpend","swapContractAddress","tokenContract","populateTransaction","approve","unsignedTx","gas_limit","getGasPrice","parsedGasPrice","hexlify","parseInt","console","log","getTransactionCount","nonce","sendTransaction","makeCrossChainSwapEvmContract","contractAddress","PROTOCOL_UNISWAP_V2","SWAP_CONTRACT_V2_ABI","makeCrossChainSwapV2Contract","SWAP_CONTRACT_V3_ABI","makeCrossChainSwapV3Contract","addressToBytes32","wormholeChainId","hexString","nativeToHexString","hexToUint8Array","evmMakeExactInSwapParameters","recipientAddress","dstWormholeChainId","quoteParams","makePathArray","concat","evmApproveAndSwapExactIn","srcProvider","srcWallet","srcExecutionParams","dstExecutionParams","isNative","swapContractParams","swapContract","contractWithSigner","connect","swapParams","pathArray","dstContractAddress","bridgeNonce","transactionParams","info","swapExactNativeInAndTransfer","swapExactInAndTransfer","evmApproveAndSwapExactOut","gasPlusValue","swapExactNativeOutAndTransfer","swapExactOutAndTransfer","swapExactInFromVaa","dstProvider","dstWallet","dstProtocol","swapExactOutFromVaa","UniswapToUniswapExecutor","quoter","cachedExactInParams","cachedExactOutParams","quoteType","relayerFeeAmount","transportFactory","vaaSearchParams","vaaBytes","srcEvmReceipt","dstEvmReceipt","srcTerraReceipt","dstTerraReceipt","getSrcChainId","getDstChainId","setDeadlines","computeAndVerifySrcPoolAddress","computeAndVerifyDstPoolAddress","areSwapParametersUndefined","computeExactInParameters","ExactIn","computeExactOutParameters","ExactOut","getSrcEvmProvider","getDstEvmProvider","getTokenInAddress","wallet","fetchAndSetEvmEmitterAndSequence","receipt","wormholeParams","sequence","parseSequenceFromLogEth","emitterAddress","getEmitterAddressEth","getSignedVAAWithRetry","transport","vaaResponse","fetchSignedVaaFromSwap","evmSwapExactInFromVaa","evmSwapExactOutFromVaa","SWAP_CONTRACT_ADDRESS","useStyles","makeStyles","theme","root","position","button","marginTop","spacing","textTransform","width","loader","bottom","marginLeft","marginBottom","error","textAlign","ButtonWithLoader","disabled","onClick","showLoader","children","className","classes","Button","color","variant","CircularProgress","size","Typography","EthereumProviderContext","React","createContext","disconnect","signerAddress","providerError","EthereumProviderProvider","useState","setProviderError","setProvider","setChainId","setSigner","setSignerAddress","useCallback","detectEthereumProvider","then","detectedProvider","Web3Provider","send","catch","getSigner","on","toNumber","e","accounts","contextValue","useMemo","Provider","useEthereumProvider","useContext","display","margin","maxWidth","ToggleConnectedButton","connected","pk","is0x","startsWith","Tooltip","title","substring","substr","length","EthereumSignerKey","select","alignItems","listItemIcon","minWidth","icon","height","getLogo","ethIcon","polygonIcon","terraIcon","avaxIcon","bscIcon","TokenSelect","tokens","onChange","TextField","fullWidth","map","MenuItem","ListItemIcon","alt","ListItemText","createTokenMenuItem","COLORS","responsiveFontSizes","createTheme","palette","type","background","default","paper","divider","text","primary","main","light","secondary","typography","fontFamily","h1","fontWeight","h2","h4","overrides","MuiCssBaseline","scrollbarWidth","scrollbarColor","backgroundColor","borderRadius","MuiAccordion","rounded","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","MuiAlert","border","MuiButton","MuiLink","MuiPaper","MuiStepper","padding","MuiStep","MuiStepConnector","lineVertical","borderLeftWidth","MuiStepContent","MuiStepLabel","label","fontSize","MuiTab","MM_ERR_WITH_INFO_START","parseError","data","message","replace","response","topScrollPaper","topPaperScrollBody","verticalAlign","float","clamp","min","max","isNaN","Settings","onSlippageChange","onDeadlineChange","dialogIsOpen","setDialogIsOpen","dialog","Dialog","open","onClose","scroll","DialogTitle","id","DialogContent","InputProps","endAdornment","InputAdornment","event","target","parseFloat","disableRipple","endIcon","getIsTransferCompletedEvmWithRetry","signedVAA","retryTimeoutMs","retryAttempts","result","attempts","getIsTransferCompletedEth","setTimeout","CircleLoader","TransactionProgress","txBlockNumber","hasSignedVAA","isTargetSwapComplete","currentBlock","setCurrentBlock","useEffect","isEVMChain","cancelled","getBlockNumber","newBlock","valueBuffer","blockDiff","expectedBlocks","LinearProgress","footer","socialIcon","builtWithContainer","justifyContent","opacity","wormholeIcon","transition","marginRight","Footer","IconButton","href","rel","Docs","Discord","Github","Medium","Telegram","Twitter","Wormhole","testnet","chainID","lcd","walletConnectChainIds","TerraWalletContext","TerraWalletWrapper","terraWallet","useWallet","setWallet","setConnected","availableConnectTypes","TerraWalletProvider","defaultNetwork","TerraWalletKey","wallets","terraAddress","createWalletStatus","isReady","statusMessage","forceNetworkSwitch","walletAddress","useIsWalletReady","enableNetworkAutoswitch","autoSwitch","useConnectedWallet","hasTerraWallet","hasEthInfo","correctEvmNetwork","hasCorrectEvmNetwork","hexStripZeros","bg","flexDirection","minHeight","centeredContainer","mainPaper","numberField","flexGrow","caretShape","webkitAppearance","gradientButton","backgroundImage","backgroundSize","boxShadow","backgroundPosition","spacer","titleBar","alignSelf","tokenSelectWrapper","loaderHolder","successIcon","swapPath","switchEvmProviderNetwork","ConnectedWalletAddress","prefix","SwapButton","source","isSourceWalletReady","isTargetWalletReady","Home","sourceTokenInfo","setSourceTokenInfo","targetTokenInfo","setTargetTokenInfo","setAmountIn","amountInUST","setAmountInUST","setAmountOut","setSlippage","executor","setExecutor","isSwapping","setIsSwapping","isComputingQuote","setIsComputingQuote","hasQuote","setHasQuote","enqueueSnackbar","useSnackbar","isSourceSwapComplete","setIsSourceSwapComplete","setIsTargetSwapComplete","sourceTxBlockNumber","setSourceTxBlockNumber","setHasSignedVAA","relayerTimeoutString","setRelayerTimeoutString","computeQuote","setRelayerFee","computeQuoteExactIn","toFixed","content","Alert","severity","debouncedComputeQuote","useDebouncedCallback","handleAmountChange","handleSlippageChange","handleDeadlineChange","handleSourceChange","find","supportedSwaps","handleTargetChange","reset","handleSwapClick","evmApproveAndSwap","sourceReceipt","transactionHash","blockNumber","fetchVaaAndSwap","targetReceipt","disableSelect","Container","Paper","Collapse","in","disableUnderline","placeholder","autoFocus","inputProps","readOnly","CheckCircleOutlineRounded","ArrowForward","style","Link","App","ErrorBoundary","props","state","hasError","errorInfo","Component","ReactDOM","render","ThemeProvider","CssBaseline","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.c27b6948.chunk.js","sourcesContent":["export enum UstLocation {\n  In = 1,\n  Out,\n}\n\nexport abstract class RouterCore {\n  abstract computeAndVerifyPoolAddress(): Promise<string>;\n\n  abstract computePoolAddress(): string;\n\n  //abstract computeUnitAmountIn(amount: string): string;\n\n  abstract computeUnitAmountOut(amount: string): string;\n\n  abstract fetchExactInQuote(\n    amountOut: string,\n    slippage: string\n  ): Promise<string>;\n\n  abstract fetchExactOutQuote(\n    amountOut: string,\n    slippage: string\n  ): Promise<string>;\n\n  abstract formatAmountIn(amount: string): string;\n\n  abstract formatAmountOut(amount: string): string;\n\n  abstract getProtocol(): string;\n\n  abstract getTokenInDecimals(): number;\n\n  abstract getTokenOutDecimals(): number;\n\n  abstract getTokenOutAddress(): string;\n}\n\nexport abstract class GenericToken {\n  abstract getAddress(): string;\n\n  abstract getDecimals(): number;\n}\n","//@ts-nocheck\nimport { ethers } from \"ethers\";\nimport { CurrencyAmount, Token } from \"@uniswap/sdk-core\";\n\nimport { EvmToken } from \"./evm\";\nimport { RouterCore, UstLocation } from \"./generic\";\nimport { TokenInfo } from \"../utils/consts\";\n\nexport function computeTradeDeadline(deadline: string): ethers.BigNumber {\n  return ethers.BigNumber.from(Math.floor(Date.now() / 1000)).add(deadline);\n}\n\nexport class UniEvmToken {\n  erc20: EvmToken;\n  uniToken: Token;\n\n  constructor(chainId: number, erc20: EvmToken) {\n    this.erc20 = erc20;\n\n    const address = this.getAddress();\n    const decimals = this.getDecimals();\n\n    this.uniToken = new Token(chainId, address, decimals);\n  }\n\n  getUniToken(): Token {\n    return this.uniToken;\n  }\n\n  getEvmToken(): EvmToken {\n    return this.erc20;\n  }\n\n  getDecimals(): number {\n    return this.erc20.getDecimals();\n  }\n\n  getContract(): ethers.Contract {\n    return this.erc20.getContract();\n  }\n\n  getAddress(): string {\n    return this.erc20.getAddress();\n  }\n\n  async getBalanceOf(signer: ethers.Wallet) {\n    return this.erc20.getBalanceOf(signer);\n  }\n\n  computeUnitAmount(amount: string): ethers.BigNumber {\n    return this.erc20.computeUnitAmount(amount);\n  }\n\n  formatAmount(unitAmount: ethers.BigNumber): string {\n    return this.erc20.formatAmount(unitAmount);\n  }\n\n  computeCurrencyAmount(amount: string): CurrencyAmount<Token> {\n    const unitAmount = this.computeUnitAmount(amount);\n    return CurrencyAmount.fromRawAmount(\n      this.getUniToken(),\n      unitAmount.toString()\n    );\n  }\n\n  addAmounts(left: string, right: string): string {\n    return this.erc20.addAmounts(left, right);\n  }\n\n  subtractAmounts(left: string, right: string): string {\n    return this.erc20.subtractAmounts(left, right);\n  }\n}\n\nexport async function makeUniEvmToken(\n  provider: ethers.providers.Provider,\n  chainId: number,\n  tokenAddress: string\n): Promise<UniEvmToken> {\n  const erc20 = await EvmToken.create(provider, tokenAddress);\n  return new UniEvmToken(chainId, erc20);\n}\n\nfunction stringToBigNumber(value: string): ethers.BigNumber {\n  return ethers.BigNumber.from(value);\n}\n\nexport interface ExactInParameters {\n  protocol: string;\n  amountIn: ethers.BigNumber;\n  minAmountOut: ethers.BigNumber;\n  deadline: ethers.BigNumber;\n  poolFee: string;\n  path: [string, string];\n}\n\nexport interface ExactOutParameters {\n  protocol: string;\n  amountOut: ethers.BigNumber;\n  maxAmountIn: ethers.BigNumber;\n  deadline: ethers.BigNumber;\n  poolFee: string;\n  path: [string, string];\n}\n\nexport function makeExactInParameters(\n  router: UniswapRouterCore,\n  amountIn: string,\n  minAmountOut: string\n): ExactInParameters {\n  const params: ExactInParameters = {\n    protocol: router.getProtocol(),\n    amountIn: router.tokenIn.computeUnitAmount(amountIn),\n    minAmountOut: router.tokenOut.computeUnitAmount(minAmountOut),\n    poolFee: router.getPoolFee(),\n    deadline: router.getTradeDeadline(),\n    path: [router.tokenIn.getAddress(), router.tokenOut.getAddress()],\n  };\n  return params;\n}\n\nexport function makeExactOutParameters(\n  router: UniswapRouterCore,\n  amountOut: string,\n  maxAmountIn: string\n): ExactOutParameters {\n  const params: ExactOutParameters = {\n    protocol: router.getProtocol(),\n    amountOut: router.tokenOut.computeUnitAmount(amountOut),\n    maxAmountIn: router.tokenIn.computeUnitAmount(maxAmountIn),\n    poolFee: router.getPoolFee(),\n    deadline: router.getTradeDeadline(),\n    path: [router.tokenIn.getAddress(), router.tokenOut.getAddress()],\n  };\n  return params;\n}\n\nexport abstract class UniswapRouterCore extends RouterCore {\n  provider: ethers.providers.Provider;\n  network: ethers.providers.Network;\n\n  // wormhole\n  chainId: number;\n\n  // tokens\n  tokenIn: UniEvmToken;\n  tokenOut: UniEvmToken;\n\n  // params\n  deadline: string = \"\";\n\n  constructor(provider: ethers.providers.Provider) {\n    super();\n    this.provider = provider;\n  }\n\n  public getProvider(): ethers.providers.Provider {\n    return this.provider;\n  }\n\n  public async initializeTokens(\n    tokenInfo: TokenInfo,\n    ustLocation: UstLocation\n  ): Promise<void> {\n    this.network = await this.provider.getNetwork();\n\n    const network = this.network;\n\n    if (ustLocation === UstLocation.Out) {\n      [this.tokenIn, this.tokenOut] = await Promise.all([\n        makeUniEvmToken(this.provider, network.chainId, tokenInfo.address),\n        makeUniEvmToken(\n          this.provider,\n          network.chainId,\n          tokenInfo.ustPairedAddress\n        ),\n      ]);\n    } else {\n      [this.tokenIn, this.tokenOut] = await Promise.all([\n        makeUniEvmToken(\n          this.provider,\n          network.chainId,\n          tokenInfo.ustPairedAddress\n        ),\n        makeUniEvmToken(this.provider, network.chainId, tokenInfo.address),\n      ]);\n    }\n    return;\n  }\n\n  public getPoolFee(): string {\n    return \"\";\n  }\n\n  public setDeadline(deadline: string): void {\n    this.deadline = deadline;\n  }\n\n  public getTradeDeadline(): ethers.BigNumber {\n    return computeTradeDeadline(this.deadline);\n  }\n\n  /*\n  public computeUnitAmountIn(amount: string): string {\n    return this.tokenIn.computeUnitAmount(amount).toString();\n  }\n  */\n\n  public computeUnitAmountOut(amount: string): string {\n    return this.tokenOut.computeUnitAmount(amount).toString();\n  }\n\n  public formatAmountIn(amount: string): string {\n    return this.tokenIn.formatAmount(stringToBigNumber(amount));\n  }\n\n  public formatAmountOut(amount: string): string {\n    return this.tokenOut.formatAmount(stringToBigNumber(amount));\n  }\n\n  public getTokenInDecimals(): number {\n    return this.tokenIn.getDecimals();\n  }\n\n  public getTokenOutDecimals(): number {\n    return this.tokenOut.getDecimals();\n  }\n\n  public getTokenOutAddress(): string {\n    return this.tokenOut.getAddress();\n  }\n\n  abstract getProtocol(): string;\n}\n","import { ethers } from \"ethers\";\nimport { CurrencyAmount, TradeType } from \"@uniswap/sdk-core\";\nimport { abi as IUniswapV2PairABI } from \"@uniswap/v2-core/build/UniswapV2Pair.json\";\nimport { computePairAddress, Pair, Route, Trade } from \"@uniswap/v2-sdk\";\n\nimport { UniswapRouterCore } from \"./uniswap-core\";\n\nexport const PROTOCOL = \"UniswapV2\";\n\n// uniswap v3 (ethereum)\n//export const UNISWAP_V3_FACTORY_ADDRESS = '0x1F98431c8aD98523631AE4a59f267346ea31F984';\n//export const UNISWAP_V3_ROUTER_ADDRESS = '0xE592427A0AEce92De3Edee1F18E0157C05861564';\n\n// quickswap (polygon)\nexport const QUICKSWAP_V2_ROUTER_ADDRESS =\n  \"0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff\";\n\nexport class UniswapV2Router extends UniswapRouterCore {\n  factoryAddress: string;\n  pairContract: ethers.Contract;\n  pair: Pair;\n\n  setFactoryAddress(factoryAddress: string) {\n    this.factoryAddress = factoryAddress;\n    return;\n  }\n\n  computePoolAddress(): string {\n    if (this.factoryAddress === undefined) {\n      throw Error(\"factoryAddress is undefined. use setFactoryAddress\");\n    }\n\n    return computePairAddress({\n      factoryAddress: this.factoryAddress,\n      tokenA: this.tokenIn.getUniToken(),\n      tokenB: this.tokenOut.getUniToken(),\n    });\n  }\n\n  async computeAndVerifyPoolAddress(): Promise<string> {\n    const pairAddress = this.computePoolAddress();\n\n    // verify by attempting to call factory()\n    const poolContract = new ethers.Contract(\n      pairAddress,\n      IUniswapV2PairABI,\n      this.provider\n    );\n    await poolContract.factory();\n\n    return pairAddress;\n  }\n\n  async createPool(): Promise<Pair> {\n    const pairAddress = this.computePoolAddress();\n\n    const pairContract = new ethers.Contract(\n      pairAddress,\n      IUniswapV2PairABI,\n      this.provider\n    );\n\n    const [token0, reserves] = await Promise.all([\n      pairContract.token0(),\n      pairContract.getReserves(),\n    ]);\n\n    const reserve0 = reserves._reserve0.toString();\n    const reserve1 = reserves._reserve1.toString();\n\n    const tokenIn = this.tokenIn;\n    const tokenOut = this.tokenOut;\n\n    if (token0.toLowerCase() === tokenIn.getAddress().toLowerCase()) {\n      return new Pair(\n        CurrencyAmount.fromRawAmount(tokenIn.getUniToken(), reserve0),\n        CurrencyAmount.fromRawAmount(tokenOut.getUniToken(), reserve1)\n      );\n    }\n\n    return new Pair(\n      CurrencyAmount.fromRawAmount(tokenOut.getUniToken(), reserve0),\n      CurrencyAmount.fromRawAmount(tokenIn.getUniToken(), reserve1)\n    );\n  }\n\n  async fetchExactInQuote(amountIn: string, slippage: string): Promise<string> {\n    // create pool\n    const pair = await this.createPool();\n\n    // let's get that quote\n    const tokenIn = this.tokenIn;\n    const tokenOut = this.tokenOut;\n\n    const route = new Route(\n      [pair],\n      tokenIn.getUniToken(),\n      tokenOut.getUniToken()\n    );\n    const currencyAmountIn = tokenIn.computeCurrencyAmount(amountIn);\n\n    const quote = new Trade(route, currencyAmountIn, TradeType.EXACT_INPUT);\n\n    const decimals = tokenOut.getDecimals();\n    const minAmountOut = ethers.FixedNumber.from(\n      quote.outputAmount.toSignificant(decimals)\n    );\n\n    // calculate output amount with slippage\n    const slippageMultiplier = ethers.FixedNumber.from(\"1\").subUnsafe(\n      ethers.FixedNumber.from(slippage)\n    );\n    const minAmountOutWithSlippage = minAmountOut\n      .mulUnsafe(slippageMultiplier)\n      .round(decimals);\n\n    /*\n    return tokenOut\n      .computeUnitAmount(minAmountOutWithSlippage.toString())\n      .toString();\n      */\n    return minAmountOutWithSlippage.toString();\n  }\n\n  async fetchExactOutQuote(\n    amountOut: string,\n    slippage: string\n  ): Promise<string> {\n    // create pool\n    const pair = await this.createPool();\n\n    // let's get that quote\n    const tokenIn = this.tokenIn;\n    const tokenOut = this.tokenOut;\n\n    const route = new Route(\n      [pair],\n      tokenIn.getUniToken(),\n      tokenOut.getUniToken()\n    );\n    const currencyAmountOut = tokenOut.computeCurrencyAmount(amountOut);\n\n    const quote = new Trade(route, currencyAmountOut, TradeType.EXACT_OUTPUT);\n\n    const decimals = tokenIn.getDecimals();\n    const maxAmountIn = ethers.FixedNumber.from(\n      quote.inputAmount.toSignificant(decimals)\n    );\n\n    const slippageDivisor = ethers.FixedNumber.from(\"1\").subUnsafe(\n      ethers.FixedNumber.from(slippage)\n    );\n    const maxAmountInWithSlippage = maxAmountIn\n      .divUnsafe(slippageDivisor)\n      .round(decimals);\n\n    /*\n    return tokenIn\n      .computeUnitAmount(maxAmountInWithSlippage.toString())\n      .toString();\n      */\n    return maxAmountInWithSlippage.toString();\n  }\n\n  getProtocol(): string {\n    return PROTOCOL;\n  }\n}\n","import { ethers } from \"ethers\";\n\nimport { MATIC_TOKEN_INFO } from \"../utils/consts\";\nimport { UstLocation } from \"./generic\";\nimport { UniswapV2Router } from \"./uniswap-v2\";\n\nexport { PROTOCOL } from \"./uniswap-v2\";\n\nconst QUICKSWAP_FACTORY_ADDRESS = \"0x5757371414417b8C6CAad45bAeF941aBc7d3Ab32\";\n\nexport class QuickswapRouter extends UniswapV2Router {\n  constructor(provider: ethers.providers.Provider) {\n    super(provider);\n    super.setFactoryAddress(QUICKSWAP_FACTORY_ADDRESS);\n  }\n\n  async initialize(ustLocation: UstLocation): Promise<void> {\n    await super.initializeTokens(MATIC_TOKEN_INFO, ustLocation);\n    return;\n  }\n}\n","import { ethers } from \"ethers\";\nimport JSBI from \"jsbi\";\nimport { CurrencyAmount, Token, TradeType } from \"@uniswap/sdk-core\";\nimport { abi as IUniswapV3PoolABI } from \"@uniswap/v3-core/artifacts/contracts/interfaces/IUniswapV3Pool.sol/IUniswapV3Pool.json\";\nimport {\n  computePoolAddress,\n  FeeAmount,\n  nearestUsableTick,\n  Pool,\n  Route,\n  TickMath,\n  TICK_SPACINGS,\n  Trade,\n} from \"@uniswap/v3-sdk\";\n\nimport { UniswapRouterCore } from \"./uniswap-core\";\nimport { ETH_TOKEN_INFO } from \"../utils/consts\";\nimport { UstLocation } from \"./generic\";\n\nexport const PROTOCOL = \"UniswapV3\";\n\nconst UNISWAP_V3_FACTORY_ADDRESS = \"0x1F98431c8aD98523631AE4a59f267346ea31F984\";\n\nexport class UniswapV3Router extends UniswapRouterCore {\n  poolContract: ethers.Contract;\n  pool: Pool;\n  poolFee: FeeAmount;\n\n  constructor(provider: ethers.providers.Provider) {\n    super(provider);\n\n    // set fee amount for our example\n    this.poolFee = FeeAmount.MEDIUM;\n  }\n\n  async initialize(ustLocation: UstLocation): Promise<void> {\n    await this.initializeTokens(ETH_TOKEN_INFO, ustLocation);\n    return;\n  }\n\n  getPoolFee(): string {\n    return this.poolFee.toString();\n  }\n\n  computePoolAddress(): string {\n    return computePoolAddress({\n      factoryAddress: UNISWAP_V3_FACTORY_ADDRESS,\n      fee: this.poolFee,\n      tokenA: this.tokenIn.getUniToken(),\n      tokenB: this.tokenOut.getUniToken(),\n    });\n  }\n\n  async computeAndVerifyPoolAddress(): Promise<string> {\n    const pairAddress = this.computePoolAddress();\n\n    // verify by attempting to call factory()\n    const poolContract = new ethers.Contract(\n      pairAddress,\n      IUniswapV3PoolABI,\n      this.provider\n    );\n    await poolContract.factory();\n\n    return pairAddress;\n  }\n\n  async createPool(): Promise<Pool> {\n    const poolAddress = this.computePoolAddress();\n\n    const poolContract = new ethers.Contract(\n      poolAddress,\n      IUniswapV3PoolABI,\n      this.provider\n    );\n    this.poolContract = poolContract;\n\n    const [liquidity, slot] = await Promise.all([\n      poolContract.liquidity(),\n      poolContract.slot0(),\n    ]);\n\n    // grab necessary data from slot\n    const sqrtPriceX96 = slot[0];\n    const tick = slot[1];\n\n    // create JSBI version of liquidity numbers\n    const bigLiq = JSBI.BigInt(liquidity);\n    const negBigLiq = JSBI.multiply(bigLiq, JSBI.BigInt(-1));\n\n    const tickConstructorArgs = [\n      {\n        index: nearestUsableTick(\n          TickMath.MIN_TICK,\n          TICK_SPACINGS[this.poolFee]\n        ),\n        liquidityNet: bigLiq,\n        liquidityGross: bigLiq,\n      },\n      {\n        index: nearestUsableTick(\n          TickMath.MAX_TICK,\n          TICK_SPACINGS[this.poolFee]\n        ),\n        liquidityNet: negBigLiq,\n        liquidityGross: bigLiq,\n      },\n    ];\n\n    return new Pool(\n      this.tokenIn.getUniToken(),\n      this.tokenOut.getUniToken(),\n      this.poolFee,\n      sqrtPriceX96.toString(), //note the description discrepancy - sqrtPriceX96 and sqrtRatioX96 are interchangable values\n      liquidity,\n      tick,\n      tickConstructorArgs\n    );\n  }\n\n  async computeTradeExactIn(\n    amount: string\n  ): Promise<Trade<Token, Token, TradeType.EXACT_INPUT>> {\n    // create pool\n    const pool = await this.createPool();\n\n    // let's get that quote\n    const tokenIn = this.tokenIn;\n    const tokenOut = this.tokenOut;\n\n    const amountIn = tokenIn.computeUnitAmount(amount);\n\n    const route = new Route(\n      [pool],\n      tokenIn.getUniToken(),\n      tokenOut.getUniToken()\n    );\n    return Trade.fromRoute(\n      route,\n      CurrencyAmount.fromRawAmount(tokenIn.getUniToken(), amountIn.toString()),\n      TradeType.EXACT_INPUT\n    );\n  }\n\n  async computeTradeExactOut(\n    amount: string\n  ): Promise<Trade<Token, Token, TradeType.EXACT_OUTPUT>> {\n    // create pool\n    const pool = await this.createPool();\n\n    // let's get that quote\n    const tokenIn = this.tokenIn;\n    const tokenOut = this.tokenOut;\n\n    const amountOut = tokenOut.computeUnitAmount(amount);\n\n    const route = new Route(\n      [pool],\n      tokenIn.getUniToken(),\n      tokenOut.getUniToken()\n    );\n    return Trade.fromRoute(\n      route,\n      CurrencyAmount.fromRawAmount(\n        tokenOut.getUniToken(),\n        amountOut.toString()\n      ),\n      TradeType.EXACT_OUTPUT\n    );\n  }\n\n  async fetchExactInQuote(amountIn: string, slippage: string): Promise<string> {\n    // get the quote\n    const trade = await this.computeTradeExactIn(amountIn);\n\n    const tokenOut = this.tokenOut;\n    const decimals = tokenOut.getDecimals();\n\n    // calculate output amount with slippage\n    const minAmountOut = ethers.FixedNumber.from(\n      trade.outputAmount.toSignificant(decimals)\n    );\n\n    const slippageMultiplier = ethers.FixedNumber.from(\"1\").subUnsafe(\n      ethers.FixedNumber.from(slippage)\n    );\n    const minAmountOutWithSlippage = minAmountOut\n      .mulUnsafe(slippageMultiplier)\n      .round(decimals);\n\n    /*\n    return tokenOut\n      .computeUnitAmount(minAmountOutWithSlippage.toString())\n      .toString();\n      */\n    return minAmountOutWithSlippage.toString();\n  }\n\n  async fetchExactOutQuote(\n    amountOut: string,\n    slippage: string\n  ): Promise<string> {\n    // get the quote\n    const trade = await this.computeTradeExactOut(amountOut);\n\n    const tokenIn = this.tokenIn;\n    const decimals = tokenIn.getDecimals();\n\n    // calculate output amount with slippage\n    const maxAmountIn = ethers.FixedNumber.from(\n      trade.inputAmount.toSignificant(decimals)\n    );\n\n    const slippageDivisor = ethers.FixedNumber.from(\"1\").subUnsafe(\n      ethers.FixedNumber.from(slippage)\n    );\n    const maxAmountInWithSlippage = maxAmountIn\n      .divUnsafe(slippageDivisor)\n      .round(decimals);\n\n    /*\n    return tokenIn\n      .computeUnitAmount(maxAmountInWithSlippage.toString())\n      .toString();\n      */\n    return maxAmountInWithSlippage.toString();\n  }\n\n  getProtocol(): string {\n    return PROTOCOL;\n  }\n}\n","import { Dec, Int } from \"@terra-money/terra.js\";\n\nimport { UST_TOKEN_INFO } from \"../utils/consts\";\nimport { RouterCore } from \"./generic\";\n\nexport const PROTOCOL = \"TerraUstTransfer\";\n\nconst UST_DECIMALS = 6;\n\nconst UST_AMOUNT_MULTIPLIER = \"1000000\";\n\nexport class TerraUstTransfer extends RouterCore {\n  computePoolAddress(): string {\n    return UST_TOKEN_INFO.address;\n  }\n\n  computeAndVerifyPoolAddress(): Promise<string> {\n    return new Promise<string>((resolve) => {\n      return resolve(this.computePoolAddress());\n    });\n  }\n\n  formatAmountIn(amount: string): string {\n    const formatted = new Dec(amount).div(UST_AMOUNT_MULTIPLIER);\n    return formatted.toString();\n  }\n\n  formatAmountOut(amount: string): string {\n    return this.formatAmountIn(amount);\n  }\n\n  computeUnitAmountIn(amount: string): string {\n    const unitified = new Dec(amount).mul(UST_AMOUNT_MULTIPLIER);\n    return new Int(unitified.toString()).toString();\n  }\n\n  computeUnitAmountOut(amount: string): string {\n    return this.computeUnitAmountIn(amount);\n  }\n\n  getProtocol(): string {\n    return PROTOCOL;\n  }\n\n  async fetchExactInQuote(amountIn: string, slippage: string): Promise<string> {\n    return amountIn;\n  }\n\n  async fetchExactOutQuote(\n    amountOut: string,\n    slippage: string\n  ): Promise<string> {\n    return amountOut;\n  }\n\n  getTokenInDecimals(): number {\n    return UST_DECIMALS;\n  }\n\n  getTokenOutDecimals(): number {\n    return UST_DECIMALS;\n  }\n\n  getTokenOutAddress(): string {\n    return this.computePoolAddress();\n  }\n}\n","import { ethers } from \"ethers\";\n\nimport { AVAX_TOKEN_INFO } from \"../utils/consts\";\nimport { UstLocation } from \"./generic\";\nimport { UniswapV2Router } from \"./uniswap-v2\";\n\nexport { PROTOCOL } from \"./uniswap-v2\";\n\nconst HURRICANESWAP_FACTORY_ADDRESS = \"\";\n\nexport class HurricaneswapRouter extends UniswapV2Router {\n  constructor(provider: ethers.providers.Provider) {\n    super(provider);\n    super.setFactoryAddress(HURRICANESWAP_FACTORY_ADDRESS);\n  }\n\n  async initialize(ustLocation: UstLocation): Promise<void> {\n    await super.initializeTokens(AVAX_TOKEN_INFO, ustLocation);\n    return;\n  }\n\n  computePoolAddress(): string {\n    // cannot find factory address on testnet\n    return \"0xD8087870E8869e45154189d434DF61C19e77ae30\";\n  }\n}\n","import { ethers } from \"ethers\";\n\nimport { BNB_TOKEN_INFO } from \"../utils/consts\";\nimport { UstLocation } from \"./generic\";\nimport { UniswapV2Router } from \"./uniswap-v2\";\n\nexport { PROTOCOL } from \"./uniswap-v2\";\n\nconst PANCAKESWAP_FACTORY_ADDRESS = \"\";\n\nexport class PancakeswapRouter extends UniswapV2Router {\n  constructor(provider: ethers.providers.Provider) {\n    super(provider);\n    super.setFactoryAddress(PANCAKESWAP_FACTORY_ADDRESS);\n  }\n\n  async initialize(ustLocation: UstLocation): Promise<void> {\n    await super.initializeTokens(BNB_TOKEN_INFO, ustLocation);\n    return;\n  }\n\n  computePoolAddress(): string {\n    // cannot find factory address on testnet\n    return \"0x8682096d4A2a2f3cd63147D05e4BAB47634e2AD1\";\n  }\n}\n","import { ethers } from \"ethers\";\n\nimport { QuickswapRouter as MaticRouter } from \"./quickswap\";\nimport { UniswapV3Router as EthRouter } from \"./uniswap-v3\";\nimport { TerraUstTransfer as UstRouter } from \"./terra-ust-transfer\";\nimport { HurricaneswapRouter as AvaxRouter } from \"./hurricaneswap\";\nimport { PancakeswapRouter as BnbRouter } from \"./pancakeswap\";\nimport {\n  ETH_TOKEN_INFO,\n  MATIC_TOKEN_INFO,\n  AVAX_TOKEN_INFO,\n  BNB_TOKEN_INFO,\n  UST_TOKEN_INFO,\n} from \"../utils/consts\";\nimport { addFixedAmounts, subtractFixedAmounts } from \"../utils/math\";\nimport { UstLocation } from \"./generic\";\nimport {\n  ExactInParameters,\n  ExactOutParameters,\n  makeExactInParameters,\n  makeExactOutParameters,\n} from \"./uniswap-core\";\nimport {\n  ChainId,\n  CHAIN_ID_ETH,\n  CHAIN_ID_POLYGON,\n  CHAIN_ID_AVAX,\n  CHAIN_ID_BSC,\n  CHAIN_ID_TERRA,\n} from \"@certusone/wormhole-sdk\";\n\nexport { PROTOCOL as PROTOCOL_UNISWAP_V2 } from \"./uniswap-v2\";\nexport { PROTOCOL as PROTOCOL_UNISWAP_V3 } from \"./uniswap-v3\";\nexport { PROTOCOL as PROTOCOL_TERRA_UST_TRANSFER } from \"./terra-ust-transfer\";\n\nexport const TERRA_UST = UST_TOKEN_INFO.address;\n\nexport enum QuoteType {\n  ExactIn = 1,\n  ExactOut,\n}\n\nexport function makeEvmProviderFromAddress(tokenAddress: string) {\n  switch (tokenAddress) {\n    case ETH_TOKEN_INFO.address: {\n      const url = process.env.REACT_APP_GOERLI_PROVIDER;\n      if (!url) {\n        throw new Error(\"Could not find REACT_APP_GOERLI_PROVIDER\");\n      }\n      return new ethers.providers.StaticJsonRpcProvider(url);\n    }\n    case MATIC_TOKEN_INFO.address: {\n      const url = process.env.REACT_APP_MUMBAI_PROVIDER;\n      if (!url) {\n        throw new Error(\"Could not find REACT_APP_MUMBAI_PROVIDER\");\n      }\n      return new ethers.providers.StaticJsonRpcProvider(url);\n    }\n    case AVAX_TOKEN_INFO.address: {\n      const url = process.env.REACT_APP_FUJI_PROVIDER;\n      if (!url) {\n        throw new Error(\"Could not find REACT_APP_FUJI_PROVIDER\");\n      }\n      return new ethers.providers.StaticJsonRpcProvider(url);\n    }\n    case BNB_TOKEN_INFO.address: {\n      const url = process.env.REACT_APP_BSC_PROVIDER;\n      if (!url) {\n        throw new Error(\"Could not find REACT_APP_BSC_PROVIDER\");\n      }\n      return new ethers.providers.StaticJsonRpcProvider(url);\n    }\n    default: {\n      throw Error(\"unrecognized evm token address\");\n    }\n  }\n}\n\nexport function getChainIdFromAddress(tokenAddress: string) {\n  switch (tokenAddress) {\n    case ETH_TOKEN_INFO.address: {\n      return CHAIN_ID_ETH;\n    }\n    case MATIC_TOKEN_INFO.address: {\n      return CHAIN_ID_POLYGON;\n    }\n    case AVAX_TOKEN_INFO.address: {\n      return CHAIN_ID_AVAX;\n    }\n    case BNB_TOKEN_INFO.address: {\n      return CHAIN_ID_BSC;\n    }\n    case UST_TOKEN_INFO.address: {\n      return CHAIN_ID_TERRA;\n    }\n    default: {\n      throw Error(\"unrecognized evm token address\");\n    }\n  }\n}\n\nasync function makeRouter(tokenAddress: string, loc: UstLocation) {\n  switch (tokenAddress) {\n    case ETH_TOKEN_INFO.address: {\n      const provider = makeEvmProviderFromAddress(tokenAddress);\n      const router = new EthRouter(provider);\n      await router.initialize(loc);\n      return router;\n    }\n    case MATIC_TOKEN_INFO.address: {\n      const provider = makeEvmProviderFromAddress(tokenAddress);\n      const router = new MaticRouter(provider);\n      await router.initialize(loc);\n      return router;\n    }\n    case AVAX_TOKEN_INFO.address: {\n      const provider = makeEvmProviderFromAddress(tokenAddress);\n      const router = new AvaxRouter(provider);\n      await router.initialize(loc);\n      return router;\n    }\n    case BNB_TOKEN_INFO.address: {\n      const provider = makeEvmProviderFromAddress(tokenAddress);\n      const router = new BnbRouter(provider);\n      await router.initialize(loc);\n      return router;\n    }\n    case UST_TOKEN_INFO.address: {\n      return new UstRouter();\n    }\n    default: {\n      throw Error(\"unrecognized chain id\");\n    }\n  }\n}\n\nfunction splitSlippageInHalf(totalSlippage: string): string {\n  const divisor = ethers.FixedNumber.from(\"2\");\n  return ethers.FixedNumber.from(totalSlippage)\n    .divUnsafe(divisor)\n    .round(4)\n    .toString();\n}\n\nexport interface RelayerFee {\n  amount: string;\n  tokenAddress: string;\n}\n\nexport interface ExactInCrossParameters {\n  amountIn: string;\n  ustAmountIn: string;\n  minAmountOut: string;\n  src: ExactInParameters | undefined;\n  dst: ExactInParameters | undefined;\n  relayerFee: RelayerFee;\n}\n\nexport interface ExactOutCrossParameters {\n  amountOut: string;\n  ustAmountIn: string;\n  maxAmountIn: string;\n  src: ExactOutParameters | undefined;\n  dst: ExactOutParameters | undefined;\n  relayerFee: RelayerFee;\n}\n\nexport class UniswapToUniswapQuoter {\n  // tokens\n  tokenInAddress: string;\n  tokenOutAddress: string;\n\n  // routers\n  srcRouter: UstRouter | EthRouter | MaticRouter | AvaxRouter | BnbRouter;\n  dstRouter: UstRouter | EthRouter | MaticRouter | AvaxRouter | BnbRouter;\n\n  async initialize(tokenInAddress: string, tokenOutAddress: string) {\n    if (tokenInAddress !== this.tokenInAddress) {\n      this.tokenInAddress = tokenInAddress;\n      this.srcRouter = await makeRouter(tokenInAddress, UstLocation.Out);\n    }\n\n    if (tokenOutAddress !== this.tokenOutAddress) {\n      this.tokenOutAddress = tokenOutAddress;\n      this.dstRouter = await makeRouter(tokenOutAddress, UstLocation.In);\n    }\n  }\n\n  async computeAndVerifySrcPoolAddress(): Promise<string> {\n    return this.srcRouter.computeAndVerifyPoolAddress();\n  }\n\n  async computeAndVerifyDstPoolAddress(): Promise<string> {\n    return this.dstRouter.computeAndVerifyPoolAddress();\n  }\n\n  computeSwapSlippage(slippage: string): string {\n    if (this.isSrcUst() || this.isDstUst()) {\n      return slippage;\n    }\n\n    return splitSlippageInHalf(slippage);\n  }\n\n  getRelayerFee(amount: string): RelayerFee {\n    if (this.isSrcUst()) {\n      return {\n        amount: this.srcRouter.computeUnitAmountOut(amount),\n        tokenAddress: TERRA_UST, // TODO: make sure this is the right address for bridge transfer?\n      };\n    }\n\n    const relayerFee: RelayerFee = {\n      amount: this.srcRouter.computeUnitAmountOut(amount),\n      tokenAddress: this.srcRouter.getTokenOutAddress(),\n    };\n    return relayerFee;\n  }\n\n  makeSrcExactInParameters(\n    amountIn: string,\n    minAmountOut: string\n  ): ExactInParameters | undefined {\n    if (this.isSrcUst()) {\n      return undefined;\n    }\n    // @ts-ignore\n    return makeExactInParameters(this.srcRouter, amountIn, minAmountOut);\n  }\n\n  makeDstExactInParameters(\n    amountIn: string,\n    minAmountOut: string\n  ): ExactInParameters | undefined {\n    if (this.isDstUst()) {\n      return undefined;\n    }\n    // @ts-ignore\n    return makeExactInParameters(this.dstRouter, amountIn, minAmountOut);\n  }\n\n  async computeExactInParameters(\n    amountIn: string,\n    slippage: string,\n    relayerFeeUst: string\n  ): Promise<ExactInCrossParameters> {\n    const singleSlippage = this.computeSwapSlippage(slippage);\n\n    // src quote\n    const srcRouter = this.srcRouter;\n    const srcMinAmountOut = await srcRouter.fetchExactInQuote(\n      amountIn,\n      singleSlippage\n    );\n\n    // dst quote\n    const dstRouter = this.dstRouter;\n    const dstAmountIn = srcMinAmountOut; //srcRouter.formatAmountOut(srcMinAmountOut);\n    if (Number(dstAmountIn) < Number(relayerFeeUst)) {\n      throw Error(\n        `srcAmountOut <= relayerFeeUst. ${dstAmountIn} vs ${relayerFeeUst}`\n      );\n    }\n\n    const dstAmountInAfterFee = subtractFixedAmounts(\n      dstAmountIn,\n      relayerFeeUst,\n      dstRouter.getTokenInDecimals()\n    );\n\n    const dstMinAmountOut = await dstRouter.fetchExactInQuote(\n      dstAmountInAfterFee,\n      singleSlippage\n    );\n\n    // organize parameters\n    const params: ExactInCrossParameters = {\n      amountIn: amountIn,\n      ustAmountIn: dstAmountInAfterFee,\n      minAmountOut: dstMinAmountOut,\n      src: this.makeSrcExactInParameters(amountIn, srcMinAmountOut),\n      dst: this.makeDstExactInParameters(dstAmountInAfterFee, dstMinAmountOut),\n      relayerFee: this.getRelayerFee(relayerFeeUst),\n    };\n    return params;\n  }\n\n  makeSrcExactOutParameters(\n    amountOut: string,\n    maxAmountIn: string\n  ): ExactOutParameters | undefined {\n    if (this.isSrcUst()) {\n      return undefined;\n    }\n    // @ts-ignore\n    return makeExactOutParameters(this.srcRouter, amountOut, maxAmountIn);\n  }\n\n  makeDstExactOutParameters(\n    amountOut: string,\n    maxAmountIn: string\n  ): ExactOutParameters | undefined {\n    if (this.isDstUst()) {\n      return undefined;\n    }\n    // @ts-ignore\n    return makeExactOutParameters(this.dstRouter, amountOut, maxAmountIn);\n  }\n\n  async computeExactOutParameters(\n    amountOut: string,\n    slippage: string,\n    relayerFeeUst: string\n  ): Promise<ExactOutCrossParameters> {\n    const singleSlippage = splitSlippageInHalf(slippage);\n\n    // dst quote first\n    const dstRouter = this.dstRouter;\n    const dstMaxAmountIn = await dstRouter.fetchExactOutQuote(\n      amountOut,\n      singleSlippage\n    );\n\n    // src quote\n    const srcRouter = this.srcRouter;\n    const srcAmountOut = dstMaxAmountIn;\n    if (Number(srcAmountOut) < Number(relayerFeeUst)) {\n      throw Error(\n        `dstAmountIn <= relayerFeeUst. ${srcAmountOut} vs ${relayerFeeUst}`\n      );\n    }\n\n    const srcAmountOutBeforeFee = addFixedAmounts(\n      srcAmountOut,\n      relayerFeeUst,\n      srcRouter.getTokenOutDecimals()\n    );\n\n    const srcMaxAmountIn = await srcRouter.fetchExactOutQuote(\n      srcAmountOutBeforeFee,\n      singleSlippage\n    );\n\n    // organize parameters\n    const params: ExactOutCrossParameters = {\n      amountOut: amountOut,\n      ustAmountIn: dstMaxAmountIn,\n      maxAmountIn: srcMaxAmountIn,\n      src: this.makeSrcExactOutParameters(\n        srcAmountOutBeforeFee,\n        srcMaxAmountIn\n      ),\n      dst: this.makeDstExactOutParameters(amountOut, dstMaxAmountIn),\n      relayerFee: this.getRelayerFee(relayerFeeUst),\n    };\n    return params;\n  }\n\n  setDeadlines(deadline: string): void {\n    if (!this.isSrcUst()) {\n      // @ts-ignore\n      this.srcRouter.setDeadline(deadline);\n    }\n    if (!this.isDstUst()) {\n      // @ts-ignore\n      this.dstRouter.setDeadline(deadline);\n    }\n  }\n\n  isSrcUst(): boolean {\n    return this.tokenInAddress === TERRA_UST;\n  }\n\n  isDstUst(): boolean {\n    return this.tokenOutAddress === TERRA_UST;\n  }\n\n  getSrcEvmProvider(): ethers.providers.Provider | undefined {\n    if (this.isSrcUst()) {\n      return undefined;\n    }\n    // @ts-ignore\n    return this.srcRouter.getProvider();\n  }\n\n  getDstEvmProvider(): ethers.providers.Provider | undefined {\n    if (this.isDstUst()) {\n      return undefined;\n    }\n    // @ts-ignore\n    return this.dstRouter.getProvider();\n  }\n\n  getSrcChainId(): ChainId {\n    return getChainIdFromAddress(this.tokenInAddress);\n  }\n\n  getDstChainId(): ChainId {\n    return getChainIdFromAddress(this.tokenOutAddress);\n  }\n}\n","import { FixedNumber } from \"ethers\";\n\nexport function addFixedAmounts(\n  left: string,\n  right: string,\n  decimals: number\n): string {\n  const sum = FixedNumber.from(left).addUnsafe(FixedNumber.from(right));\n  return sum.round(decimals).toString();\n}\n\nexport function subtractFixedAmounts(\n  left: string,\n  right: string,\n  decimals: number\n): string {\n  const diff = FixedNumber.from(left).subUnsafe(FixedNumber.from(right));\n  return diff.round(decimals).toString();\n}\n","import { ethers } from \"ethers\";\nimport { TransactionReceipt } from \"@ethersproject/abstract-provider\";\n\nimport {\n  EVM_ETH_NETWORK_CHAIN_ID,\n  EVM_POLYGON_NETWORK_CHAIN_ID,\n  EVM_AVAX_NETWORK_CHAIN_ID,\n  //EVM_BSC_NETWORK_CHAIN_ID,\n} from \"../utils/consts\";\n\nexport const CROSSCHAINSWAP_GAS_PARAMETERS_EIP1559 = {\n  gasLimit: \"694200\",\n  //maxFeePerGas: \"250000000000\",\n  maxFeePerGas: \"100420690000\",\n  maxPriorityFeePerGas: \"1690000000\",\n};\n\nexport const CROSSCHAINSWAP_GAS_PARAMETERS_EVM = {\n  gasLimit: \"694200\",\n  //gasPrice: \"250000000000\",\n  gasPrice: \"20420690000\",\n};\n\nexport const EVM_EIP1559_CHAIN_IDS = [\n  EVM_ETH_NETWORK_CHAIN_ID,\n  EVM_POLYGON_NETWORK_CHAIN_ID,\n  EVM_AVAX_NETWORK_CHAIN_ID,\n];\n\nexport async function getEvmGasParametersForContract(\n  contract: ethers.Contract\n): Promise<any> {\n  const chainId = await getChainIdFromContract(contract);\n\n  if (EVM_EIP1559_CHAIN_IDS.indexOf(chainId) >= 0) {\n    return CROSSCHAINSWAP_GAS_PARAMETERS_EIP1559;\n  }\n\n  return CROSSCHAINSWAP_GAS_PARAMETERS_EVM;\n}\n\nasync function getChainIdFromContract(\n  contract: ethers.Contract\n): Promise<number> {\n  const network = await contract.provider.getNetwork();\n  return network.chainId;\n}\n\n// exact in\n//\nexport async function evmSwapExactInFromVaaNative(\n  swapContractWithSigner: ethers.Contract,\n  signedVaa: Uint8Array\n): Promise<TransactionReceipt> {\n  const gasParams = await getEvmGasParametersForContract(\n    swapContractWithSigner\n  );\n\n  const tx = await swapContractWithSigner.recvAndSwapExactNativeIn(\n    signedVaa,\n    gasParams\n  );\n  return tx.wait();\n}\n\nexport async function evmSwapExactInFromVaaToken(\n  swapContractWithSigner: ethers.Contract,\n  signedVaa: Uint8Array\n): Promise<TransactionReceipt> {\n  const gasParams = await getEvmGasParametersForContract(\n    swapContractWithSigner\n  );\n\n  const tx = await swapContractWithSigner.recvAndSwapExactIn(\n    signedVaa,\n    gasParams\n  );\n  return tx.wait();\n}\n\n// exact out\n//\nexport async function evmSwapExactOutFromVaaNative(\n  swapContractWithSigner: ethers.Contract,\n  signedVaa: Uint8Array\n): Promise<TransactionReceipt> {\n  const gasParams = await getEvmGasParametersForContract(\n    swapContractWithSigner\n  );\n\n  const tx = await swapContractWithSigner.recvAndSwapExactNativeOut(\n    signedVaa,\n    gasParams\n  );\n  return tx.wait();\n}\n\nexport async function evmSwapExactOutFromVaaToken(\n  swapContractWithSigner: ethers.Contract,\n  signedVaa: Uint8Array\n): Promise<TransactionReceipt> {\n  const gasParams = await getEvmGasParametersForContract(\n    swapContractWithSigner\n  );\n\n  const tx = await swapContractWithSigner.recvAndSwapExactOut(\n    signedVaa,\n    gasParams\n  );\n  return tx.wait();\n}\n","import { ethers } from \"ethers\";\n\nimport { GenericToken } from \"./generic\";\n\n// erc20 spec\nimport { abi as Erc20Abi } from \"../abi/erc20.json\";\nimport {\n  TransactionReceipt,\n  TransactionRequest,\n  TransactionResponse,\n} from \"@ethersproject/abstract-provider\";\nimport { APPROVAL_GAS_LIMIT } from \"../utils/consts\";\n\nexport class EvmToken extends GenericToken {\n  token: ethers.Contract;\n  decimals: number;\n\n  async initialize(provider: ethers.providers.Provider, tokenAddress: string) {\n    this.token = await makeErc20Contract(provider, tokenAddress);\n    this.decimals = await this.token.decimals();\n  }\n\n  static async create(\n    provider: ethers.providers.Provider,\n    tokenAddress: string\n  ): Promise<EvmToken> {\n    const o = new EvmToken();\n    await o.initialize(provider, tokenAddress);\n    return o;\n  }\n\n  getAddress(): string {\n    return this.token.address;\n  }\n\n  getDecimals(): number {\n    return this.decimals;\n  }\n\n  getContract(): ethers.Contract {\n    return this.token;\n  }\n\n  async getBalanceOf(signer: ethers.Wallet) {\n    const decimals = this.getDecimals();\n    const balanceBeforeDecimals = await this.token.balanceOf(signer.address);\n    return ethers.utils.formatUnits(balanceBeforeDecimals.toString(), decimals);\n  }\n\n  computeUnitAmount(amount: string): ethers.BigNumber {\n    return ethers.utils.parseUnits(amount, this.getDecimals());\n  }\n\n  formatAmount(unitAmount: ethers.BigNumber): string {\n    return ethers.utils.formatUnits(unitAmount, this.getDecimals());\n  }\n\n  addAmounts(left: string, right: string): string {\n    const sum = ethers.FixedNumber.from(left).addUnsafe(\n      ethers.FixedNumber.from(right)\n    );\n    return sum.round(this.getDecimals()).toString();\n  }\n\n  subtractAmounts(left: string, right: string): string {\n    const sum = ethers.FixedNumber.from(left).subUnsafe(\n      ethers.FixedNumber.from(right)\n    );\n    return sum.round(this.getDecimals()).toString();\n  }\n}\n\nexport async function makeErc20Contract(\n  provider: ethers.providers.Provider,\n  tokenAddress: string\n): Promise<ethers.Contract> {\n  return new ethers.Contract(tokenAddress, Erc20Abi, provider);\n}\n\nexport async function approveContractTokenSpend(\n  provider: ethers.providers.Provider,\n  signer: ethers.Wallet,\n  tokenContract: ethers.Contract,\n  smartContractAddress: string,\n  swapAmount: ethers.BigNumber\n): Promise<TransactionReceipt> {\n  // build transaction for token spending\n  const unsignedTx: TransactionRequest =\n    await tokenContract.populateTransaction.approve(\n      smartContractAddress,\n      swapAmount\n    );\n  const nonce = await provider.getTransactionCount(signer.address, \"latest\");\n\n  const gasPrice = await signer.getGasPrice();\n  const parsedGasPrice = ethers.utils.hexlify(parseInt(gasPrice.toString()));\n\n  unsignedTx.nonce = nonce;\n  unsignedTx.gasLimit = ethers.BigNumber.from(APPROVAL_GAS_LIMIT);\n  unsignedTx.gasPrice = ethers.BigNumber.from(parsedGasPrice);\n\n  // sign and send transaction\n  const tx: TransactionResponse = await signer.sendTransaction(unsignedTx);\n  return tx.wait();\n}\n","import {\n  ChainId,\n  CHAIN_ID_ETH,\n  CHAIN_ID_POLYGON,\n  CHAIN_ID_TERRA,\n  CHAIN_ID_AVAX,\n  CHAIN_ID_BSC,\n} from \"@certusone/wormhole-sdk\";\n\nexport const EVM_POLYGON_NETWORK_CHAIN_ID = 80001;\nexport const EVM_ETH_NETWORK_CHAIN_ID = 5;\nexport const EVM_AVAX_NETWORK_CHAIN_ID = 43113;\nexport const EVM_BSC_NETWORK_CHAIN_ID = 97;\n\nexport interface TokenInfo {\n  name: string;\n  address: string;\n  chainId: ChainId;\n  evmChainId: number | undefined;\n  maxAmount: number;\n  ustPairedAddress: string | undefined;\n}\n\nexport const MATIC_TOKEN_INFO: TokenInfo = {\n  name: \"MATIC\",\n  address: \"0x9c3c9283d3e44854697cd22d3faa240cfb032889\",\n  chainId: CHAIN_ID_POLYGON,\n  evmChainId: EVM_POLYGON_NETWORK_CHAIN_ID,\n  //logo: polygonIcon,\n  maxAmount: 0.1,\n  ustPairedAddress: \"0xe3a1c77e952b57b5883f6c906fc706fcc7d4392c\",\n};\n\nexport const ETH_TOKEN_INFO: TokenInfo = {\n  name: \"ETH\",\n  address: \"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6\",\n  chainId: CHAIN_ID_ETH,\n  evmChainId: EVM_ETH_NETWORK_CHAIN_ID,\n  //logo: ethIcon,\n  maxAmount: 0.01,\n  ustPairedAddress: \"0x36Ed51Afc79619b299b238898E72ce482600568a\",\n};\n\nexport const AVAX_TOKEN_INFO: TokenInfo = {\n  name: \"AVAX\",\n  address: \"0x1d308089a2d1ced3f1ce36b1fcaf815b07217be3\",\n  chainId: CHAIN_ID_AVAX,\n  evmChainId: EVM_AVAX_NETWORK_CHAIN_ID,\n  //logo: avaxIcon,\n  maxAmount: 0.01,\n  ustPairedAddress: \"0xe09ed38e5cd1014444846f62376ac88c5232cde9\",\n};\n\nexport const BNB_TOKEN_INFO: TokenInfo = {\n  name: \"BNB\",\n  address: \"0xae13d989dac2f0debff460ac112a837c89baa7cd\",\n  chainId: CHAIN_ID_BSC,\n  evmChainId: EVM_BSC_NETWORK_CHAIN_ID,\n  //logo: bscIcon,\n  maxAmount: 0.01,\n  ustPairedAddress: \"0x7b8eae1e85c8b189ee653d3f78733f4f788bb2c1\",\n};\n\nexport const UST_TOKEN_INFO: TokenInfo = {\n  name: \"UST\",\n  address: \"uusd\",\n  chainId: CHAIN_ID_TERRA,\n  evmChainId: undefined,\n  //logo: terraIcon,\n  maxAmount: 10.0,\n  ustPairedAddress: undefined,\n};\n\nexport const TOKEN_INFOS = [\n  MATIC_TOKEN_INFO,\n  ETH_TOKEN_INFO,\n  AVAX_TOKEN_INFO,\n  BNB_TOKEN_INFO,\n  // TODO: support swaps from/to terra\n  // UST_TOKEN_INFO,\n];\n\nexport const getSupportedSwaps = (tokenInfo: TokenInfo) => {\n  return TOKEN_INFOS.filter((x) => x !== tokenInfo);\n};\n\nexport const getEvmChainId = (chainId: ChainId): number | undefined => {\n  switch (chainId) {\n    case CHAIN_ID_ETH:\n      return EVM_ETH_NETWORK_CHAIN_ID;\n    case CHAIN_ID_POLYGON:\n      return EVM_POLYGON_NETWORK_CHAIN_ID;\n    case CHAIN_ID_AVAX:\n      return EVM_AVAX_NETWORK_CHAIN_ID;\n    case CHAIN_ID_BSC:\n      return EVM_BSC_NETWORK_CHAIN_ID;\n    default:\n      return undefined;\n  }\n};\n\nexport const getChainName = (chainId: ChainId) => {\n  switch (chainId) {\n    case CHAIN_ID_ETH:\n      return \"Ethereum\";\n    case CHAIN_ID_POLYGON:\n      return \"Polygon\";\n    case CHAIN_ID_AVAX:\n      return \"Avalanche\";\n    case CHAIN_ID_BSC:\n      return \"BSC\";\n    default:\n      return \"\";\n  }\n};\n\nexport const RELAYER_FEE_UST = \"0.25\";\n\nexport const WORMHOLE_RPC_HOSTS = [\n  \"https://wormhole-v2-testnet-api.certus.one\",\n];\n\n// core bridge\nexport const CORE_BRIDGE_ADDRESS_ETHEREUM =\n  \"0x706abc4E45D419950511e474C7B9Ed348A4a716c\";\n\nexport const CORE_BRIDGE_ADDRESS_POLYGON =\n  \"0x0CBE91CF822c73C2315FB05100C2F714765d5c20\";\n\nexport const CORE_BRIDGE_ADDRESS_AVALANCHE =\n  \"0x7bbcE28e64B3F8b84d876Ab298393c38ad7aac4C\";\n\nexport const CORE_BRIDGE_ADDRESS_BSC =\n  \"0x68605AD7b15c732a30b1BbC62BE8F2A509D74b4D\";\n\nexport const CORE_BRIDGE_ADDRESS_TERRA =\n  \"terra1pd65m0q9tl3v8znnz5f5ltsfegyzah7g42cx5v\";\n\n// token bridge\nexport const TOKEN_BRIDGE_ADDRESS_ETHEREUM =\n  \"0xF890982f9310df57d00f659cf4fd87e65adEd8d7\";\n\nexport const TOKEN_BRIDGE_ADDRESS_POLYGON =\n  \"0x377D55a7928c046E18eEbb61977e714d2a76472a\";\n\nexport const TOKEN_BRIDGE_ADDRESS_BSC =\n  \"0x9dcF9D205C9De35334D646BeE44b2D2859712A09\";\n\nexport const TOKEN_BRIDGE_ADDRESS_AVALANCHE =\n  \"0x61E44E506Ca5659E6c0bba9b678586fA2d729756\";\n\nexport const TOKEN_BRIDGE_ADDRESS_TERRA =\n  \"terra1pseddrv0yfsn76u4zxrjmtf45kdlmalswdv39a\";\n\n// gas\nexport const APPROVAL_GAS_LIMIT = \"100000\";\n","//@ts-nocheck\nimport { ethers } from \"ethers\";\nimport { TransactionReceipt } from \"@ethersproject/abstract-provider\";\nimport {\n  ChainId,\n  CHAIN_ID_ETH,\n  CHAIN_ID_POLYGON,\n  CHAIN_ID_AVAX,\n  CHAIN_ID_BSC,\n  CHAIN_ID_TERRA,\n  getEmitterAddressEth,\n  hexToUint8Array,\n  nativeToHexString,\n  parseSequenceFromLogEth,\n  getSignedVAAWithRetry,\n} from \"@certusone/wormhole-sdk\";\nimport { grpc } from \"@improbable-eng/grpc-web\";\nimport {\n  PROTOCOL_UNISWAP_V2,\n  // PROTOCOL_UNISWAP_V3,\n  ExactInCrossParameters,\n  ExactOutCrossParameters,\n  QuoteType,\n  UniswapToUniswapQuoter,\n} from \"../route/cross-quote\";\nimport {\n  TOKEN_BRIDGE_ADDRESS_ETHEREUM,\n  TOKEN_BRIDGE_ADDRESS_POLYGON,\n  TOKEN_BRIDGE_ADDRESS_TERRA,\n  TOKEN_BRIDGE_ADDRESS_AVALANCHE,\n  TOKEN_BRIDGE_ADDRESS_BSC,\n  CORE_BRIDGE_ADDRESS_ETHEREUM,\n  CORE_BRIDGE_ADDRESS_POLYGON,\n  CORE_BRIDGE_ADDRESS_TERRA,\n  CORE_BRIDGE_ADDRESS_AVALANCHE,\n  CORE_BRIDGE_ADDRESS_BSC,\n  WORMHOLE_RPC_HOSTS,\n  //ETH_NETWORK_CHAIN_ID,\n  //POLYGON_NETWORK_CHAIN_ID,\n  //TERRA_NETWORK_CHAIN_ID,\n  UST_TOKEN_INFO,\n} from \"../utils/consts\";\nimport {\n  evmSwapExactInFromVaaNative,\n  evmSwapExactInFromVaaToken,\n  evmSwapExactOutFromVaaNative,\n  evmSwapExactOutFromVaaToken,\n  getEvmGasParametersForContract,\n} from \"./helpers\";\nimport { abi as SWAP_CONTRACT_V2_ABI } from \"../abi/contracts/CrossChainSwapV2.json\";\nimport { abi as SWAP_CONTRACT_V3_ABI } from \"../abi/contracts/CrossChainSwapV3.json\";\nimport { SWAP_CONTRACT_ADDRESS as CROSSCHAINSWAP_CONTRACT_ADDRESS_ETHEREUM } from \"../addresses/goerli\";\nimport { SWAP_CONTRACT_ADDRESS as CROSSCHAINSWAP_CONTRACT_ADDRESS_POLYGON } from \"../addresses/mumbai\";\nimport { SWAP_CONTRACT_ADDRESS as CROSSCHAINSWAP_CONTRACT_ADDRESS_AVALANCHE } from \"../addresses/fuji\";\nimport { SWAP_CONTRACT_ADDRESS as CROSSCHAINSWAP_CONTRACT_ADDRESS_BSC } from \"../addresses/bsc\";\nimport { makeErc20Contract } from \"../route/evm\";\n\n// placeholders\nconst CROSSCHAINSWAP_CONTRACT_ADDRESS_TERRA =\n  \"terra163shc8unyqrndgcldaj2q9kgnqs82v0kgkhynf\";\n\nfunction makeNullSwapPath(): any[] {\n  const zeroBuffer = Buffer.alloc(20);\n  const nullAddress = \"0x\" + zeroBuffer.toString(\"hex\");\n  return [nullAddress, nullAddress];\n}\n\nconst NULL_SWAP_PATH = makeNullSwapPath();\n\ninterface SwapContractParameters {\n  address: string;\n}\n\ninterface WormholeParameters {\n  chainId: ChainId;\n  coreBridgeAddress: string;\n  tokenBridgeAddress: string;\n}\n\ninterface ExecutionParameters {\n  crossChainSwap: SwapContractParameters;\n  wormhole: WormholeParameters;\n}\n\nconst EXECUTION_PARAMETERS_ETHEREUM: ExecutionParameters = {\n  crossChainSwap: {\n    address: CROSSCHAINSWAP_CONTRACT_ADDRESS_ETHEREUM,\n  },\n  wormhole: {\n    chainId: CHAIN_ID_ETH,\n    coreBridgeAddress: CORE_BRIDGE_ADDRESS_ETHEREUM,\n    tokenBridgeAddress: TOKEN_BRIDGE_ADDRESS_ETHEREUM,\n  },\n};\n\nconst EXECUTION_PARAMETERS_POLYGON: ExecutionParameters = {\n  crossChainSwap: {\n    address: CROSSCHAINSWAP_CONTRACT_ADDRESS_POLYGON,\n  },\n  wormhole: {\n    chainId: CHAIN_ID_POLYGON,\n    coreBridgeAddress: CORE_BRIDGE_ADDRESS_POLYGON,\n    tokenBridgeAddress: TOKEN_BRIDGE_ADDRESS_POLYGON,\n  },\n};\n\nconst EXECUTION_PARAMETERS_AVALANCHE: ExecutionParameters = {\n  crossChainSwap: {\n    address: CROSSCHAINSWAP_CONTRACT_ADDRESS_AVALANCHE,\n  },\n  wormhole: {\n    chainId: CHAIN_ID_AVAX,\n    coreBridgeAddress: CORE_BRIDGE_ADDRESS_AVALANCHE,\n    tokenBridgeAddress: TOKEN_BRIDGE_ADDRESS_AVALANCHE,\n  },\n};\n\nconst EXECUTION_PARAMETERS_BSC: ExecutionParameters = {\n  crossChainSwap: {\n    address: CROSSCHAINSWAP_CONTRACT_ADDRESS_BSC,\n  },\n  wormhole: {\n    chainId: CHAIN_ID_BSC,\n    coreBridgeAddress: CORE_BRIDGE_ADDRESS_BSC,\n    tokenBridgeAddress: TOKEN_BRIDGE_ADDRESS_BSC,\n  },\n};\n\nconst EXECUTION_PARAMETERS_TERRA: ExecutionParameters = {\n  crossChainSwap: {\n    address: CROSSCHAINSWAP_CONTRACT_ADDRESS_TERRA,\n  },\n  wormhole: {\n    chainId: CHAIN_ID_TERRA,\n    coreBridgeAddress: CORE_BRIDGE_ADDRESS_TERRA,\n    tokenBridgeAddress: TOKEN_BRIDGE_ADDRESS_TERRA,\n  },\n};\n\nfunction makeExecutionParameters(chainId: ChainId): ExecutionParameters {\n  switch (chainId) {\n    case CHAIN_ID_ETH: {\n      return EXECUTION_PARAMETERS_ETHEREUM;\n    }\n    case CHAIN_ID_POLYGON: {\n      return EXECUTION_PARAMETERS_POLYGON;\n    }\n    case CHAIN_ID_AVAX: {\n      return EXECUTION_PARAMETERS_AVALANCHE;\n    }\n    case CHAIN_ID_BSC: {\n      return EXECUTION_PARAMETERS_BSC;\n    }\n    case CHAIN_ID_TERRA: {\n      return EXECUTION_PARAMETERS_TERRA;\n    }\n    default: {\n      throw Error(\"unrecognized chain id\");\n    }\n  }\n}\n\nasync function evmApproveContractTokenSpend(\n  provider: ethers.providers.Provider,\n  signer: ethers.Signer,\n  tokenAddress: string, //ethers.Contract,\n  swapContractAddress: string,\n  amount: ethers.BigNumber\n): Promise<TransactionReceipt> {\n  // build transaction for token spending\n  const tokenContract = await makeErc20Contract(provider, tokenAddress);\n  const unsignedTx = await tokenContract.populateTransaction.approve(\n    swapContractAddress,\n    amount\n  );\n\n  const address = await signer.getAddress();\n\n  // gas calcs\n  const gas_limit = \"0x100000\";\n  const gasPrice = await signer.getGasPrice();\n  const parsedGasPrice = ethers.utils.hexlify(parseInt(gasPrice.toString()));\n\n  console.log(\"gettingTranscationCount\", provider);\n\n  unsignedTx.nonce = await provider.getTransactionCount(address, \"latest\");\n  unsignedTx.gasLimit = ethers.BigNumber.from(ethers.utils.hexlify(gas_limit));\n  unsignedTx.gasPrice = ethers.BigNumber.from(parsedGasPrice);\n  console.log(\"done gettingTranscationCount\");\n\n  // sign and send transaction\n  const tx = await signer.sendTransaction(unsignedTx);\n  return tx.wait();\n}\n\nfunction makeCrossChainSwapV3Contract(\n  contractAddress: string,\n  provider: ethers.providers.Provider\n): ethers.Contract {\n  return new ethers.Contract(contractAddress, SWAP_CONTRACT_V3_ABI, provider);\n}\n\nfunction makeCrossChainSwapV2Contract(\n  contractAddress: string,\n  provider: ethers.providers.Provider\n): ethers.Contract {\n  return new ethers.Contract(contractAddress, SWAP_CONTRACT_V2_ABI, provider);\n}\n\nfunction makeCrossChainSwapEvmContract(\n  provider: ethers.providers.Provider,\n  protocol: string,\n  contractAddress: string\n): ethers.Contract {\n  if (protocol === PROTOCOL_UNISWAP_V2) {\n    return makeCrossChainSwapV2Contract(contractAddress, provider);\n  } else {\n    return makeCrossChainSwapV3Contract(contractAddress, provider);\n  }\n}\n\nfunction addressToBytes32(\n  address: string,\n  wormholeChainId: ChainId\n): Uint8Array {\n  const hexString = nativeToHexString(address, wormholeChainId);\n  if (hexString === null) {\n    throw new Error(\"nativeToHexString returned null\");\n  }\n  return hexToUint8Array(hexString);\n}\n\nfunction evmMakeExactInSwapParameters(\n  amountIn: ethers.BigNumber,\n  recipientAddress: string,\n  dstWormholeChainId: ChainId,\n  quoteParams: ExactInCrossParameters\n): any[] {\n  const src = quoteParams.src;\n  const dst = quoteParams.dst;\n\n  if (dst === undefined) {\n    return [\n      amountIn,\n      src.minAmountOut,\n      0,\n      addressToBytes32(recipientAddress, dstWormholeChainId),\n      src.deadline,\n      src.poolFee || 0,\n    ];\n  }\n\n  return [\n    amountIn,\n    src.minAmountOut,\n    dst.minAmountOut,\n    addressToBytes32(recipientAddress, dstWormholeChainId),\n    src.deadline,\n    dst.poolFee || src.poolFee || 0,\n  ];\n}\n\nfunction makePathArray(\n  quoteParams: ExactInCrossParameters | ExactOutCrossParameters\n): any[] {\n  if (quoteParams.src === undefined) {\n    return NULL_SWAP_PATH.concat(quoteParams.dst.path);\n  } else if (quoteParams.dst === undefined) {\n    return quoteParams.src.path.concat(NULL_SWAP_PATH);\n  } else {\n    return quoteParams.src.path.concat(quoteParams.dst.path);\n  }\n}\n\nasync function evmApproveAndSwapExactIn(\n  srcProvider: ethers.providers.Provider,\n  srcWallet: ethers.Signer,\n  tokenInAddress: string,\n  quoteParams: ExactInCrossParameters,\n  srcExecutionParams: ExecutionParameters,\n  dstExecutionParams: ExecutionParameters,\n  isNative: boolean,\n  recipientAddress: string\n): Promise<TransactionReceipt> {\n  const swapContractParams = srcExecutionParams.crossChainSwap;\n\n  const protocol = quoteParams.src.protocol;\n  const swapContract = makeCrossChainSwapEvmContract(\n    srcProvider,\n    protocol,\n    swapContractParams.address\n  );\n  const contractWithSigner = swapContract.connect(srcWallet);\n\n  // approve and swap this amount\n  const amountIn = quoteParams.src.amountIn;\n  const dstWormholeChainId = dstExecutionParams.wormhole.chainId;\n\n  const swapParams = evmMakeExactInSwapParameters(\n    amountIn,\n    recipientAddress,\n    dstWormholeChainId,\n    quoteParams\n  );\n\n  const pathArray = makePathArray(quoteParams);\n\n  const dstContractAddress = addressToBytes32(\n    dstExecutionParams.crossChainSwap.address,\n    dstWormholeChainId\n  );\n  const bridgeNonce = 69;\n\n  const gasParams = getEvmGasParametersForContract(swapContract);\n  // do the swap\n  if (isNative) {\n    const transactionParams = { value: amountIn, ...gasParams };\n\n    console.info(\"swapExactNativeInAndTransfer\");\n    const tx = await contractWithSigner.swapExactNativeInAndTransfer(\n      swapParams,\n      pathArray,\n      quoteParams.relayerFee.amount,\n      dstWormholeChainId,\n      dstContractAddress,\n      bridgeNonce,\n      transactionParams\n    );\n    return tx.wait();\n  } else {\n    console.info(\"approving contract to spend token in\");\n    await evmApproveContractTokenSpend(\n      srcProvider,\n      srcWallet,\n      tokenInAddress,\n      swapContract.address,\n      amountIn\n    );\n\n    console.info(\"swapExactInAndTransfer\");\n    const tx = await contractWithSigner.swapExactInAndTransfer(\n      swapParams,\n      pathArray,\n      quoteParams.relayerFee.amount,\n      dstWormholeChainId,\n      dstContractAddress,\n      bridgeNonce,\n      gasParams\n    );\n    return tx.wait();\n  }\n}\n\n// TODO: fix to resemble ExactIn\nasync function evmApproveAndSwapExactOut(\n  srcProvider: ethers.providers.Provider,\n  srcWallet: ethers.Signer,\n  tokenInAddress: string,\n  quoteParams: ExactOutCrossParameters,\n  srcExecutionParams: ExecutionParameters,\n  dstExecutionParams: ExecutionParameters,\n  isNative: boolean,\n  recipientAddress: string\n): Promise<TransactionReceipt> {\n  const swapContractParams = srcExecutionParams.crossChainSwap;\n\n  const protocol = quoteParams.src?.protocol;\n  const swapContract = makeCrossChainSwapEvmContract(\n    srcProvider,\n    protocol,\n    swapContractParams.address\n  );\n  const contractWithSigner = swapContract.connect(srcWallet);\n\n  // approve and swap this amount\n  const amountOut = quoteParams.src?.amountOut;\n  const maxAmountIn = quoteParams.src?.maxAmountIn;\n  const dstWormholeChainId = dstExecutionParams.wormhole.chainId;\n\n  const swapParams = [\n    amountOut,\n    maxAmountIn,\n    quoteParams.dst.amountOut,\n    addressToBytes32(recipientAddress, dstWormholeChainId),\n    quoteParams.src.deadline,\n    quoteParams.dst.poolFee || quoteParams.src.poolFee || 0,\n  ];\n  const pathArray = makePathArray(quoteParams);\n\n  const dstContractAddress = addressToBytes32(\n    dstExecutionParams.crossChainSwap.address,\n    dstWormholeChainId\n  );\n  const bridgeNonce = 69;\n\n  const gasParams = getEvmGasParametersForContract(swapContract);\n  // do the swap\n  if (isNative) {\n    const gasPlusValue = { value: maxAmountIn, ...gasParams };\n\n    console.info(\"swapExactNativeOutAndTransfer\");\n    const tx = await contractWithSigner.swapExactNativeOutAndTransfer(\n      swapParams,\n      pathArray,\n      quoteParams.relayerFee.amount,\n      dstWormholeChainId,\n      dstContractAddress,\n      bridgeNonce,\n      gasPlusValue\n    );\n    return tx.wait();\n  } else {\n    console.info(\"approving contract to spend token in\");\n    await evmApproveContractTokenSpend(\n      srcProvider,\n      srcWallet,\n      tokenInAddress,\n      swapContract.address,\n      maxAmountIn\n    );\n\n    console.info(\"swapExactOutAndTransfer\");\n    const tx = await contractWithSigner.swapExactOutAndTransfer(\n      swapParams,\n      pathArray,\n      quoteParams.relayerFee.amount,\n      dstWormholeChainId,\n      dstContractAddress,\n      bridgeNonce,\n      gasParams\n    );\n    return tx.wait();\n  }\n}\n\nasync function swapExactInFromVaa(\n  dstProvider: ethers.providers.Provider,\n  dstWallet: ethers.Signer,\n  dstExecutionParams: ExecutionParameters,\n  dstProtocol: string,\n  signedVaa: Uint8Array,\n  isNative: boolean\n): Promise<TransactionReceipt> {\n  const swapContractParams = dstExecutionParams.crossChainSwap;\n\n  const swapContract = makeCrossChainSwapEvmContract(\n    dstProvider,\n    dstProtocol,\n    swapContractParams.address\n  );\n  const contractWithSigner = swapContract.connect(dstWallet);\n\n  if (isNative) {\n    console.info(\"evmSwapExactInFromVaaNative\");\n    return evmSwapExactInFromVaaNative(contractWithSigner, signedVaa);\n  } else {\n    console.info(\"evmSwapExactInFromVaaToken\");\n    return evmSwapExactInFromVaaToken(contractWithSigner, signedVaa);\n  }\n}\n\nasync function swapExactOutFromVaa(\n  dstProvider: ethers.providers.Provider,\n  dstWallet: ethers.Signer,\n  dstExecutionParams: ExecutionParameters,\n  dstProtocol: string,\n  signedVaa: Uint8Array,\n  isNative: boolean\n): Promise<TransactionReceipt> {\n  const swapContractParams = dstExecutionParams.crossChainSwap;\n\n  const swapContract = makeCrossChainSwapEvmContract(\n    dstProvider,\n    dstProtocol,\n    swapContractParams.address\n  );\n  const contractWithSigner = swapContract.connect(dstWallet);\n\n  if (isNative) {\n    console.info(\"evmSwapExactOutFromVaaNative\");\n    return evmSwapExactOutFromVaaNative(contractWithSigner, signedVaa);\n  } else {\n    console.info(\"evmSwapExactOutFromVaaToken\");\n    return evmSwapExactOutFromVaaToken(contractWithSigner, signedVaa);\n  }\n}\n\ninterface VaaSearchParams {\n  sequence: string;\n  emitterAddress: string;\n}\n\nexport function makeEvmProvider(tokenAddress: string) {\n  let url;\n  switch (tokenAddress) {\n    case ETH_TOKEN_INFO.address:\n      url = process.env.REACT_APP_GOERLI_PROVIDER;\n      if (!url) throw new Error(\"REACT_APP_GOERLI_PROVIDER not set\");\n      break;\n    case MATIC_TOKEN_INFO.address:\n      url = process.env.REACT_APP_MUMBAI_PROVIDER;\n      if (!url) throw new Error(\"REACT_APP_MUMBAI_PROVIDER not set\");\n      break;\n    case AVAX_TOKEN_INFO.address:\n      url = process.env.REACT_APP_FUJI_PROVIDER;\n      if (!url) throw new Error(\"REACT_APP_FUJI_PROVIDER not set\");\n      break;\n    case BSC_TOKEN_INFO.address:\n      url = process.env.REACT_APP_BSC_PROVIDER;\n      if (!url) throw new Error(\"REACT_APP_BSC_PROVIDER not set\");\n      break;\n    default:\n      throw Error(\"unrecognized token address\");\n  }\n  return new ethers.providers.StaticJsonRpcProvider(url);\n}\n\nexport class UniswapToUniswapExecutor {\n  // quoting\n  quoter: UniswapToUniswapQuoter;\n  cachedExactInParams: ExactInCrossParameters;\n  cachedExactOutParams: ExactOutCrossParameters;\n  quoteType: QuoteType;\n\n  // swapping\n  isNative: boolean;\n  slippage: string;\n  relayerFeeAmount: string;\n  srcExecutionParams: ExecutionParameters;\n  dstExecutionParams: ExecutionParameters;\n\n  // vaa handling\n  transportFactory: grpc.TransportFactory;\n  vaaSearchParams: VaaSearchParams;\n  vaaBytes: Uint8Array;\n\n  // receipts\n  srcEvmReceipt: TransactionReceipt;\n  dstEvmReceipt: TransactionReceipt;\n  srcTerraReceipt: any;\n  dstTerraReceipt: any;\n\n  constructor() {\n    this.quoter = new UniswapToUniswapQuoter();\n  }\n\n  async initialize(\n    tokenInAddress: string,\n    tokenOutAddress: string,\n    isNative: boolean\n  ): Promise<void> {\n    this.isNative = isNative;\n\n    await this.quoter.initialize(tokenInAddress, tokenOutAddress);\n\n    // now that we have a chain id for each network, get contract info for each chain\n    this.srcExecutionParams = makeExecutionParameters(\n      this.quoter.getSrcChainId()\n    );\n    this.dstExecutionParams = makeExecutionParameters(\n      this.quoter.getDstChainId()\n    );\n  }\n\n  setSlippage(slippage: string): void {\n    this.slippage = slippage;\n  }\n\n  setRelayerFee(amount: string): void {\n    this.relayerFeeAmount = amount;\n  }\n\n  areSwapParametersUndefined(): boolean {\n    return this.slippage === undefined || this.relayerFeeAmount === undefined;\n  }\n\n  setDeadlines(deadline: string): void {\n    this.quoter.setDeadlines(deadline);\n  }\n\n  /*\n  async makeTokens(\n    tokenInAddress: string,\n    tokenOutAddress: string\n  ): Promise<void> {\n    const quoter = this.quoter;\n\n    const [srcTokenIn, srcTokenOut] = await quoter.makeSrcTokens(\n      tokenInAddress\n    );\n    const [dstTokenIn, dstTokenOut] = await quoter.makeDstTokens(\n      tokenOutAddress\n    );\n\n    this.tokens = {\n      srcIn: srcTokenIn,\n      srcOut: srcTokenOut,\n      dstIn: dstTokenIn,\n      dstOut: dstTokenOut,\n    };\n  }\n\n  getTokens(): CrossChainSwapTokens {\n    return this.tokens;\n  }\n*/\n  async computeAndVerifySrcPoolAddress(): Promise<string> {\n    return this.quoter.computeAndVerifySrcPoolAddress();\n  }\n\n  async computeAndVerifyDstPoolAddress(): Promise<string> {\n    return this.quoter.computeAndVerifyDstPoolAddress();\n  }\n\n  async computeQuoteExactIn(amountIn: string): Promise<ExactInCrossParameters> {\n    if (this.areSwapParametersUndefined()) {\n      throw Error(\"undefined swap parameters\");\n    }\n\n    this.cachedExactInParams = await this.quoter.computeExactInParameters(\n      amountIn,\n      this.slippage,\n      this.relayerFeeAmount\n    );\n    this.quoteType = QuoteType.ExactIn;\n    return this.cachedExactInParams;\n  }\n\n  async computeQuoteExactOut(\n    amountOut: string\n  ): Promise<ExactOutCrossParameters> {\n    if (this.areSwapParametersUndefined()) {\n      throw Error(\"undefined swap parameters\");\n    }\n\n    this.cachedExactOutParams = await this.quoter.computeExactOutParameters(\n      amountOut,\n      this.slippage,\n      this.relayerFeeAmount\n    );\n    this.quoteType = QuoteType.ExactOut;\n    return this.cachedExactOutParams;\n  }\n\n  getSrcEvmProvider(): ethers.providers.Provider {\n    return this.quoter.getSrcEvmProvider();\n  }\n\n  getDstEvmProvider(): ethers.providers.Provider {\n    return this.quoter.getDstEvmProvider();\n  }\n\n  getTokenInAddress(): string {\n    return this.quoter.tokenInAddress;\n  }\n\n  getTokenOutAddress(): string {\n    return this.quoter.tokenOutAddress;\n  }\n\n  async evmApproveAndSwapExactIn(\n    srcWallet: ethers.Signer,\n    recipientAddress: string\n  ): Promise<TransactionReceipt> {\n    return evmApproveAndSwapExactIn(\n      this.getSrcEvmProvider(),\n      srcWallet,\n      this.getTokenInAddress(),\n      this.cachedExactInParams,\n      this.srcExecutionParams,\n      this.dstExecutionParams,\n      this.isNative,\n      recipientAddress\n    );\n  }\n\n  async evmApproveAndSwapExactOut(\n    srcWallet: ethers.Signer,\n    recipientAddress: string\n  ): Promise<TransactionReceipt> {\n    return evmApproveAndSwapExactOut(\n      this.getSrcEvmProvider(),\n      srcWallet,\n      this.getTokenInAddress(),\n      this.cachedExactOutParams,\n      this.srcExecutionParams,\n      this.dstExecutionParams,\n      this.isNative,\n      recipientAddress\n    );\n  }\n\n  srcIsUst(): boolean {\n    return (\n      this.quoter.tokenInAddress === UST_TOKEN_INFO.address &&\n      this.cachedExactInParams.src === undefined\n    );\n  }\n\n  async evmApproveAndSwap(\n    wallet: ethers.Signer,\n    recipientAddress: string\n  ): Promise<TransactionReceipt> {\n    const quoteType = this.quoteType;\n\n    if (quoteType === QuoteType.ExactIn) {\n      this.srcEvmReceipt = await this.evmApproveAndSwapExactIn(\n        wallet,\n        recipientAddress\n      );\n    } else if (quoteType === QuoteType.ExactOut) {\n      this.srcEvmReceipt = await this.evmApproveAndSwapExactOut(\n        wallet,\n        recipientAddress\n      );\n    } else {\n      throw Error(\"no quote found\");\n    }\n\n    this.fetchAndSetEvmEmitterAndSequence();\n    return this.srcEvmReceipt;\n  }\n\n  fetchAndSetEmitterAndSequence(): void {\n    // TODO\n    return;\n  }\n\n  fetchAndSetTerraEmitterAndSequence(): void {\n    // TODO\n    return;\n  }\n\n  fetchAndSetEvmEmitterAndSequence(): void {\n    const receipt = this.srcEvmReceipt;\n    if (receipt === undefined) {\n      throw Error(\"no swap receipt found\");\n    }\n\n    const wormholeParams = this.srcExecutionParams.wormhole;\n\n    this.vaaSearchParams = {\n      sequence: parseSequenceFromLogEth(\n        receipt,\n        wormholeParams.coreBridgeAddress\n      ),\n      emitterAddress: getEmitterAddressEth(wormholeParams.tokenBridgeAddress),\n    };\n  }\n\n  async fetchSignedVaaFromSwap(): Promise<void> {\n    const vaaSearchParams = this.vaaSearchParams;\n    if (vaaSearchParams === undefined) {\n      throw Error(\"no vaa search params found\");\n    }\n    const sequence = vaaSearchParams.sequence;\n    const emitterAddress = vaaSearchParams.emitterAddress;\n    console.info(`sequence: ${sequence}, emitterAddress: ${emitterAddress}`);\n    // wait for VAA to be signed\n\n    const vaaResponse = await getSignedVAAWithRetry(\n      WORMHOLE_RPC_HOSTS,\n      this.srcExecutionParams.wormhole.chainId,\n      vaaSearchParams.emitterAddress,\n      vaaSearchParams.sequence,\n      {\n        transport: this.transportFactory,\n      }\n    );\n    // grab vaaBytes\n    this.vaaBytes = vaaResponse.vaaBytes;\n  }\n\n  async fetchVaaAndSwap(wallet: ethers.Signer): Promise<TransactionReceipt> {\n    await this.fetchSignedVaaFromSwap();\n\n    // check if Terra transaction\n    // TODO: change return as something else (not evm TransactionReceipt)\n\n    const quoteType = this.quoteType;\n\n    if (quoteType === QuoteType.ExactIn) {\n      this.dstEvmReceipt = await this.evmSwapExactInFromVaa(wallet);\n    } else if (quoteType === QuoteType.ExactOut) {\n      this.dstEvmReceipt = await this.evmSwapExactOutFromVaa(wallet);\n    } else {\n      throw Error(\"no quote found\");\n    }\n\n    return this.dstEvmReceipt;\n  }\n\n  async evmSwapExactInFromVaa(\n    wallet: ethers.Signer\n  ): Promise<TransactionReceipt> {\n    return swapExactInFromVaa(\n      this.getDstEvmProvider(),\n      wallet,\n      this.dstExecutionParams,\n      this.cachedExactInParams.dst.protocol,\n      this.vaaBytes,\n      this.isNative\n    );\n  }\n\n  async evmSwapExactOutFromVaa(\n    wallet: ethers.Signer\n  ): Promise<TransactionReceipt> {\n    return swapExactOutFromVaa(\n      this.getDstEvmProvider(),\n      wallet,\n      this.dstExecutionParams,\n      this.cachedExactOutParams.dst.protocol,\n      this.vaaBytes,\n      this.isNative\n    );\n  }\n\n  setTransport(transportFactory: grpc.TransportFactory) {\n    this.transportFactory = transportFactory;\n  }\n\n  //getSwapResult(\n  //  walletAddress: string,\n  //  onSwapResult: (result: boolean) => void\n  //) {\n  //  console.log(this.cachedExactInParams.dst.protocol);\n  //  console.log(this.dstExecutionParams.crossChainSwap.address);\n  //  const contract = makeCrossChainSwapContract(\n  //    this.getDstEvmProvider(),\n  //    this.quoteType === QuoteType.ExactIn\n  //      ? this.cachedExactInParams.dst.protocol\n  //      : this.cachedExactOutParams.dst.protocol,\n  //    this.dstExecutionParams.crossChainSwap.address\n  //  );\n  //  const filter = contract.filters.SwapResult(walletAddress);\n  //  contract.once(\n  //    filter,\n  //    (recipient, tokenAddress, caller, amount, success) => {\n  //      onSwapResult(success);\n  //    }\n  //  );\n  //}\n}\n","export const SWAP_CONTRACT_ADDRESS =\n  \"0x9e7Cae3a46ED297b0a05FCEeb41160fC5218E14f\";\n","export const SWAP_CONTRACT_ADDRESS =\n  \"0x72F2F646dC979a9fA8aA685B8a47b7afe2fE0516\";\n","export const SWAP_CONTRACT_ADDRESS =\n  \"0x52D8A50AF35b0760335F29a4D6aaF0604B7D7484\";\n","export const SWAP_CONTRACT_ADDRESS =\n  \"0x0DC183c2eFAA5e1749B85f13621F5cC6aCcDa786\";\n","import {\n  Button,\n  CircularProgress,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { ReactChild } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n  },\n  button: {\n    marginTop: theme.spacing(2),\n    textTransform: \"none\",\n    width: \"100%\",\n  },\n  loader: {\n    position: \"absolute\",\n    bottom: 0,\n    left: \"50%\",\n    marginLeft: -12,\n    marginBottom: 6,\n  },\n  error: {\n    marginTop: theme.spacing(1),\n    textAlign: \"center\",\n  },\n}));\n\nexport default function ButtonWithLoader({\n  disabled,\n  onClick,\n  showLoader,\n  error,\n  children,\n  className,\n}: {\n  disabled?: boolean;\n  onClick: () => void;\n  showLoader?: boolean;\n  error?: string;\n  children: ReactChild;\n  className?: string;\n}) {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.root}>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          className={className || classes.button}\n          disabled={disabled}\n          onClick={onClick}\n        >\n          {children}\n        </Button>\n        {showLoader ? (\n          <CircularProgress\n            size={24}\n            color=\"inherit\"\n            className={className || classes.loader}\n          />\n        ) : null}\n      </div>\n      {error ? (\n        <Typography color=\"error\" className={classes.error}>\n          {error}\n        </Typography>\n      ) : null}\n    </>\n  );\n}\n","import detectEthereumProvider from \"@metamask/detect-provider\";\nimport { BigNumber, ethers } from \"ethers\";\nimport React, {\n  ReactChildren,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from \"react\";\n\nexport type Provider = ethers.providers.Web3Provider | undefined;\nexport type Signer = ethers.Signer | undefined;\n\ninterface IEthereumProviderContext {\n  connect(): void;\n  disconnect(): void;\n  provider: Provider;\n  chainId: number | undefined;\n  signer: Signer;\n  signerAddress: string | undefined;\n  providerError: string | null;\n}\n\nconst EthereumProviderContext = React.createContext<IEthereumProviderContext>({\n  connect: () => {},\n  disconnect: () => {},\n  provider: undefined,\n  chainId: undefined,\n  signer: undefined,\n  signerAddress: undefined,\n  providerError: null,\n});\nexport const EthereumProviderProvider = ({\n  children,\n}: {\n  children: ReactChildren;\n}) => {\n  const [providerError, setProviderError] = useState<string | null>(null);\n  const [provider, setProvider] = useState<Provider>(undefined);\n  const [chainId, setChainId] = useState<number | undefined>(undefined);\n  const [signer, setSigner] = useState<Signer>(undefined);\n  const [signerAddress, setSignerAddress] = useState<string | undefined>(\n    undefined\n  );\n  const connect = useCallback(() => {\n    setProviderError(null);\n    detectEthereumProvider()\n      .then((detectedProvider) => {\n        if (detectedProvider) {\n          const provider = new ethers.providers.Web3Provider(\n            // @ts-ignore\n            detectedProvider,\n            \"any\"\n          );\n          provider\n            .send(\"eth_requestAccounts\", [])\n            .then(() => {\n              setProviderError(null);\n              setProvider(provider);\n              provider\n                .getNetwork()\n                .then((network) => {\n                  setChainId(network.chainId);\n                })\n                .catch(() => {\n                  setProviderError(\n                    \"An error occurred while getting the network\"\n                  );\n                });\n              const signer = provider.getSigner();\n              setSigner(signer);\n              signer\n                .getAddress()\n                .then((address) => {\n                  setSignerAddress(address);\n                })\n                .catch(() => {\n                  setProviderError(\n                    \"An error occurred while getting the signer address\"\n                  );\n                });\n              // TODO: try using ethers directly\n              // @ts-ignore\n              if (detectedProvider && detectedProvider.on) {\n                // @ts-ignore\n                detectedProvider.on(\"chainChanged\", (chainId) => {\n                  try {\n                    setChainId(BigNumber.from(chainId).toNumber());\n                  } catch (e) {}\n                });\n                // @ts-ignore\n                detectedProvider.on(\"accountsChanged\", (accounts) => {\n                  try {\n                    const signer = provider.getSigner();\n                    setSigner(signer);\n                    signer\n                      .getAddress()\n                      .then((address) => {\n                        setSignerAddress(address);\n                      })\n                      .catch(() => {\n                        setProviderError(\n                          \"An error occurred while getting the signer address\"\n                        );\n                      });\n                  } catch (e) {}\n                });\n              }\n            })\n            .catch(() => {\n              setProviderError(\n                \"An error occurred while requesting eth accounts\"\n              );\n            });\n        } else {\n          setProviderError(\"Please install MetaMask\");\n        }\n      })\n      .catch(() => {\n        setProviderError(\"Please install MetaMask\");\n      });\n  }, []);\n  const disconnect = useCallback(() => {\n    setProviderError(null);\n    setProvider(undefined);\n    setChainId(undefined);\n    setSigner(undefined);\n    setSignerAddress(undefined);\n  }, []);\n  const contextValue = useMemo(\n    () => ({\n      connect,\n      disconnect,\n      provider,\n      chainId,\n      signer,\n      signerAddress,\n      providerError,\n    }),\n    [\n      connect,\n      disconnect,\n      provider,\n      chainId,\n      signer,\n      signerAddress,\n      providerError,\n    ]\n  );\n  return (\n    <EthereumProviderContext.Provider value={contextValue}>\n      {children}\n    </EthereumProviderContext.Provider>\n  );\n};\nexport const useEthereumProvider = () => {\n  return useContext(EthereumProviderContext);\n};\n","import { Button, makeStyles, Tooltip } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    display: \"block\",\n    margin: `${theme.spacing(1)}px auto`,\n    width: \"100%\",\n    maxWidth: 400,\n  },\n}));\n\nconst ToggleConnectedButton = ({\n  connect,\n  disconnect,\n  connected,\n  pk,\n}: {\n  connect(): any;\n  disconnect(): any;\n  connected: boolean;\n  pk: string;\n}) => {\n  const classes = useStyles();\n  const is0x = pk.startsWith(\"0x\");\n  return connected ? (\n    <Tooltip title={pk}>\n      <Button\n        color=\"secondary\"\n        variant=\"contained\"\n        size=\"small\"\n        onClick={disconnect}\n        className={classes.button}\n      >\n        Disconnect {pk.substring(0, is0x ? 6 : 3)}...\n        {pk.substr(pk.length - (is0x ? 4 : 3))}\n      </Button>\n    </Tooltip>\n  ) : (\n    <Button\n      color=\"primary\"\n      variant=\"contained\"\n      size=\"small\"\n      onClick={connect}\n      className={classes.button}\n    >\n      Connect Wallet\n    </Button>\n  );\n};\n\nexport default ToggleConnectedButton;\n","import { Typography } from \"@material-ui/core\";\nimport { useEthereumProvider } from \"../contexts/EthereumProviderContext\";\nimport ToggleConnectedButton from \"./ToggleConnectedButton\";\n\nconst EthereumSignerKey = () => {\n  const { connect, disconnect, signerAddress, providerError } =\n    useEthereumProvider();\n  return (\n    <>\n      <ToggleConnectedButton\n        connect={connect}\n        disconnect={disconnect}\n        connected={!!signerAddress}\n        pk={signerAddress || \"\"}\n      />\n      {providerError ? (\n        <Typography variant=\"body2\" color=\"error\">\n          {providerError}\n        </Typography>\n      ) : null}\n    </>\n  );\n};\n\nexport default EthereumSignerKey;\n","export default __webpack_public_path__ + \"static/media/eth.364436c5.svg\";","export default __webpack_public_path__ + \"static/media/polygon.97ff139c.svg\";","export default __webpack_public_path__ + \"static/media/terra.4c802748.svg\";","export default __webpack_public_path__ + \"static/media/bsc.2e866e3f.svg\";","export default __webpack_public_path__ + \"static/media/avax.234db155.svg\";","import {\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  MenuItem,\n  TextField,\n} from \"@material-ui/core\";\nimport {\n  AVAX_TOKEN_INFO,\n  BNB_TOKEN_INFO,\n  ETH_TOKEN_INFO,\n  MATIC_TOKEN_INFO,\n  TokenInfo,\n  UST_TOKEN_INFO,\n} from \"../utils/consts\";\n\nimport ethIcon from \"../icons/eth.svg\";\nimport polygonIcon from \"../icons/polygon.svg\";\nimport terraIcon from \"../icons/terra.svg\";\nimport bscIcon from \"../icons/bsc.svg\";\nimport avaxIcon from \"../icons/avax.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    \"& .MuiSelect-root\": {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  },\n  listItemIcon: {\n    minWidth: 40,\n  },\n  icon: {\n    height: 24,\n    maxWidth: 24,\n  },\n}));\n\nconst getLogo = (name: string) => {\n  switch (name) {\n    case ETH_TOKEN_INFO.name:\n      return ethIcon;\n    case MATIC_TOKEN_INFO.name:\n      return polygonIcon;\n    case UST_TOKEN_INFO.name:\n      return terraIcon;\n    case AVAX_TOKEN_INFO.name:\n      return avaxIcon;\n    case BNB_TOKEN_INFO.name:\n      return bscIcon;\n    default:\n      return \"\";\n  }\n};\n\nconst createTokenMenuItem = ({ name }: TokenInfo, classes: any) => (\n  <MenuItem key={name} value={name}>\n    <ListItemIcon className={classes.listItemIcon}>\n      <img src={getLogo(name)} alt={name} className={classes.icon} />\n    </ListItemIcon>\n    <ListItemText>{name}</ListItemText>\n  </MenuItem>\n);\n\ninterface TokenSelectProps {\n  tokens: TokenInfo[];\n  value: string;\n  onChange: (event: any) => void;\n  disabled: boolean;\n}\n\nexport default function TokenSelect({\n  tokens,\n  value,\n  onChange,\n  disabled,\n}: TokenSelectProps) {\n  const classes = useStyles();\n\n  return (\n    <TextField\n      value={value}\n      onChange={onChange}\n      select\n      variant=\"outlined\"\n      fullWidth\n      className={classes.select}\n      disabled={disabled}\n    >\n      {tokens.map((token) => createTokenMenuItem(token, classes))}\n    </TextField>\n  );\n}\n","import { createTheme, responsiveFontSizes } from \"@material-ui/core\";\n\nexport const COLORS = {\n  blue: \"#1975e6\",\n  blueWithTransparency: \"rgba(25, 117, 230, 0.8)\",\n  gray: \"#4e4e54\",\n  green: \"#0ac2af\",\n  greenWithTransparency: \"rgba(10, 194, 175, 0.8)\",\n  lightGreen: \"rgba(51, 242, 223, 1)\",\n  lightBlue: \"#83b9fc\",\n  nearBlack: \"#000008\",\n  nearBlackWithMinorTransparency: \"rgba(0,0,0,.25)\",\n  red: \"#aa0818\",\n  darkRed: \"#810612\",\n};\n\nexport const theme = responsiveFontSizes(\n  createTheme({\n    palette: {\n      type: \"dark\",\n      background: {\n        default: COLORS.nearBlack,\n        paper: COLORS.nearBlack,\n      },\n      divider: COLORS.gray,\n      text: {\n        primary: \"rgba(255,255,255,0.98)\",\n      },\n      primary: {\n        main: COLORS.blueWithTransparency,\n        light: COLORS.lightBlue,\n      },\n      secondary: {\n        main: COLORS.greenWithTransparency,\n        light: COLORS.lightGreen,\n      },\n      error: {\n        main: COLORS.red,\n      },\n    },\n    typography: {\n      fontFamily: \"'Sora', sans-serif\",\n      h1: {\n        fontWeight: \"200\",\n      },\n      h2: {\n        fontWeight: \"200\",\n      },\n      h4: {\n        fontWeight: \"500\",\n      },\n    },\n    overrides: {\n      MuiCssBaseline: {\n        \"@global\": {\n          \"*\": {\n            scrollbarWidth: \"thin\",\n            scrollbarColor: `${COLORS.gray} ${COLORS.nearBlackWithMinorTransparency}`,\n          },\n          \"*::-webkit-scrollbar\": {\n            width: \"8px\",\n            height: \"8px\",\n            backgroundColor: COLORS.nearBlackWithMinorTransparency,\n          },\n          \"*::-webkit-scrollbar-thumb\": {\n            backgroundColor: COLORS.gray,\n            borderRadius: \"4px\",\n          },\n          \"*::-webkit-scrollbar-corner\": {\n            // this hides an annoying white box which appears when both scrollbars are present\n            backgroundColor: \"transparent\",\n          },\n        },\n      },\n      MuiAccordion: {\n        root: {\n          backgroundColor: COLORS.nearBlackWithMinorTransparency,\n          \"&:before\": {\n            display: \"none\",\n          },\n        },\n        rounded: {\n          \"&:first-child\": {\n            borderTopLeftRadius: \"16px\",\n            borderTopRightRadius: \"16px\",\n          },\n          \"&:last-child\": {\n            borderBottomLeftRadius: \"16px\",\n            borderBottomRightRadius: \"16px\",\n          },\n        },\n      },\n      MuiAlert: {\n        root: {\n          borderRadius: \"8px\",\n          border: \"1px solid\",\n        },\n      },\n      MuiButton: {\n        root: {\n          borderRadius: \"5px\",\n          textTransform: \"none\",\n        },\n      },\n      MuiLink: {\n        root: {\n          color: COLORS.lightBlue,\n        },\n      },\n      MuiPaper: {\n        rounded: {\n          borderRadius: \"16px\",\n        },\n      },\n      MuiStepper: {\n        root: {\n          backgroundColor: \"transparent\",\n          padding: 0,\n        },\n      },\n      MuiStep: {\n        root: {\n          backgroundColor: COLORS.nearBlackWithMinorTransparency,\n          borderRadius: \"16px\",\n          padding: 16,\n        },\n      },\n      MuiStepConnector: {\n        lineVertical: {\n          borderLeftWidth: 0,\n        },\n      },\n      MuiStepContent: {\n        root: {\n          borderLeftWidth: 0,\n        },\n      },\n      MuiStepLabel: {\n        label: {\n          fontSize: 16,\n          fontWeight: \"300\",\n          \"&.MuiStepLabel-active\": {\n            fontWeight: \"300\",\n          },\n          \"&.MuiStepLabel-completed\": {\n            fontWeight: \"300\",\n          },\n        },\n      },\n      MuiTab: {\n        root: {\n          fontSize: 18,\n          fontWeight: \"300\",\n          padding: 12,\n          textTransform: \"none\",\n        },\n      },\n    },\n  })\n);\n","const MM_ERR_WITH_INFO_START =\n  \"VM Exception while processing transaction: revert \";\nconst parseError = (e: any) =>\n  e?.data?.message?.startsWith(MM_ERR_WITH_INFO_START)\n    ? e.data.message.replace(MM_ERR_WITH_INFO_START, \"\")\n    : e?.response?.data?.error // terra error\n    ? e.response.data.error\n    : e?.message\n    ? e.message\n    : \"An unknown error occurred\";\nexport default parseError;\n","import {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  InputAdornment,\n  TextField,\n} from \"@material-ui/core\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useState } from \"react\";\n\nconst useStyles = makeStyles({\n  topScrollPaper: {\n    alignItems: \"flex-start\",\n  },\n  topPaperScrollBody: {\n    verticalAlign: \"top\",\n  },\n  button: {\n    float: \"right\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n});\n\nconst clamp = (value: number, min: number, max: number) => {\n  if (isNaN(value)) {\n    return value;\n  }\n  return Math.min(Math.max(min, value), max);\n};\n\nexport default function Settings({\n  disabled,\n  slippage,\n  deadline,\n  onSlippageChange,\n  onDeadlineChange,\n}: {\n  disabled: boolean;\n  slippage: string;\n  deadline: string;\n  onSlippageChange: (slippage: string) => void;\n  onDeadlineChange: (deadline: string) => void;\n}) {\n  const classes = useStyles();\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\n\n  const dialog = (\n    <Dialog\n      open={dialogIsOpen}\n      aria-labelledby=\"simple-dialog-title\"\n      onClose={() => setDialogIsOpen(false)}\n      maxWidth=\"xs\"\n      scroll=\"paper\"\n    >\n      <DialogTitle id=\"simple-dialog-title\">Transaction Settings</DialogTitle>\n      <DialogContent>\n        <TextField\n          variant=\"outlined\"\n          label=\"Slippage tolerance\"\n          value={slippage}\n          fullWidth\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n          }}\n          margin=\"normal\"\n          type=\"number\"\n          onChange={(event) => {\n            onSlippageChange(\n              event.target.value === \"\"\n                ? \"\"\n                : clamp(parseFloat(event.target.value), 0, 100).toString()\n            );\n          }}\n        ></TextField>\n        <TextField\n          variant=\"outlined\"\n          label=\"Transaction deadline\"\n          value={deadline}\n          fullWidth\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">minutes</InputAdornment>\n            ),\n          }}\n          margin=\"normal\"\n          type=\"number\"\n          onChange={(event) => {\n            onDeadlineChange(\n              event.target.value === \"\"\n                ? \"\"\n                : clamp(parseFloat(event.target.value), 1, 100).toString()\n            );\n          }}\n        ></TextField>\n      </DialogContent>\n    </Dialog>\n  );\n\n  return (\n    <div>\n      <Button\n        className={classes.button}\n        onClick={() => {\n          setDialogIsOpen(true);\n        }}\n        disabled={disabled}\n        disableRipple\n        endIcon={<SettingsIcon />}\n      />\n      {dialog}\n    </div>\n  );\n}\n","import { getIsTransferCompletedEth } from \"@certusone/wormhole-sdk\";\nimport { ethers } from \"ethers\";\n\nexport default async function getIsTransferCompletedEvmWithRetry(\n  tokenBridgeAddress: string,\n  provider: ethers.providers.Provider,\n  signedVAA: Uint8Array,\n  retryTimeoutMs: number,\n  retryAttempts: number\n) {\n  let result = false;\n  let attempts = 0;\n  while (attempts < retryAttempts) {\n    try {\n      result = await getIsTransferCompletedEth(\n        tokenBridgeAddress,\n        provider,\n        signedVAA\n      );\n    } catch (e) {\n      console.error(e);\n    }\n    if (result) {\n      break;\n    }\n    await new Promise((resolve) => setTimeout(resolve, retryTimeoutMs));\n    attempts++;\n  }\n  return result;\n}\n","import \"../css/CircleLoader.css\";\n\nexport default function CircleLoader() {\n  return (\n    <div id={\"loaderContainer\"}>\n      <div id={\"circle\"}>\n        <div id={\"inner\"}></div>\n      </div>\n    </div>\n  );\n}\n","import { ChainId, CHAIN_ID_POLYGON, isEVMChain } from \"@certusone/wormhole-sdk\";\nimport { LinearProgress, makeStyles, Typography } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useEthereumProvider } from \"../contexts/EthereumProviderContext\";\nimport { getChainName } from \"../utils/consts\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    textAlign: \"center\",\n  },\n  message: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\nexport default function TransactionProgress({\n  chainId,\n  txBlockNumber,\n  hasSignedVAA,\n  isTargetSwapComplete,\n}: {\n  chainId: ChainId;\n  txBlockNumber: number | undefined;\n  hasSignedVAA: boolean;\n  isTargetSwapComplete: boolean;\n}) {\n  const classes = useStyles();\n  const { provider } = useEthereumProvider();\n  const [currentBlock, setCurrentBlock] = useState(0);\n  useEffect(() => {\n    if (hasSignedVAA || !txBlockNumber) return;\n    if (isEVMChain(chainId) && provider) {\n      let cancelled = false;\n      (async () => {\n        while (!cancelled) {\n          await new Promise((resolve) => setTimeout(resolve, 500));\n          try {\n            const newBlock = await provider.getBlockNumber();\n            if (!cancelled) {\n              setCurrentBlock(newBlock);\n            }\n          } catch (e) {\n            console.error(e);\n          }\n        }\n      })();\n      return () => {\n        cancelled = true;\n      };\n    }\n  }, [hasSignedVAA, chainId, provider, txBlockNumber]);\n  let blockDiff =\n    txBlockNumber !== undefined && txBlockNumber && currentBlock\n      ? currentBlock - txBlockNumber\n      : 0;\n  const expectedBlocks = chainId === CHAIN_ID_POLYGON ? 512 : 15;\n  blockDiff = Math.min(Math.max(blockDiff, 0), expectedBlocks);\n  let value;\n  let valueBuffer;\n  let message;\n  if (!hasSignedVAA) {\n    value = (blockDiff / expectedBlocks) * 50;\n    valueBuffer = 50;\n    message = `Waiting for ${blockDiff} / ${expectedBlocks} confirmations on ${getChainName(\n      chainId\n    )}...`;\n  } else if (!isTargetSwapComplete) {\n    value = 50;\n    valueBuffer = 100;\n    message = \"Waiting for relayer to complete swap...\";\n  } else {\n    value = 100;\n    valueBuffer = 100;\n    message = \"Success!\";\n  }\n  return (\n    <div className={classes.root}>\n      <LinearProgress\n        variant=\"buffer\"\n        value={value}\n        valueBuffer={valueBuffer}\n      />\n      <Typography variant=\"body2\" className={classes.message}>\n        {message}\n      </Typography>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Discord.3cc30da6.svg\";","export default __webpack_public_path__ + \"static/media/Docs.5306a132.svg\";","export default __webpack_public_path__ + \"static/media/Github.cf553f61.svg\";","export default __webpack_public_path__ + \"static/media/Medium.a9e68aca.svg\";","export default __webpack_public_path__ + \"static/media/Telegram.86d97a48.svg\";","export default __webpack_public_path__ + \"static/media/Twitter.06e4f08c.svg\";","export default __webpack_public_path__ + \"static/media/wormhole_logo.9f999ea4.svg\";","import { IconButton, makeStyles, Typography } from \"@material-ui/core\";\nimport Discord from \"../icons/Discord.svg\";\nimport Docs from \"../icons/Docs.svg\";\nimport Github from \"../icons/Github.svg\";\nimport Medium from \"../icons/Medium.svg\";\nimport Telegram from \"../icons/Telegram.svg\";\nimport Twitter from \"../icons/Twitter.svg\";\nimport Wormhole from \"../icons/wormhole_logo.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    margin: theme.spacing(2, 0, 2),\n    textAlign: \"center\",\n  },\n  socialIcon: {\n    \"& img\": {\n      height: 24,\n      width: 24,\n    },\n  },\n  builtWithContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    opacity: 0.5,\n    marginTop: theme.spacing(1),\n  },\n  wormholeIcon: {\n    height: 48,\n    width: 192,\n    filter: \"contrast(0)\",\n    transition: \"filter 0.5s\",\n    \"&:hover\": {\n      filter: \"contrast(1)\",\n    },\n    verticalAlign: \"middle\",\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default function Footer() {\n  const classes = useStyles();\n  return (\n    <footer className={classes.footer}>\n      <div>\n        <IconButton\n          href=\"https://docs.wormholenetwork.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={classes.socialIcon}\n        >\n          <img src={Docs} alt=\"Docs\" />\n        </IconButton>\n        <IconButton\n          href=\"https://discord.gg/wormholecrypto\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={classes.socialIcon}\n        >\n          <img src={Discord} alt=\"Discord\" />\n        </IconButton>\n        <IconButton\n          href=\"https://github.com/certusone/wormhole\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={classes.socialIcon}\n        >\n          <img src={Github} alt=\"Github\" />\n        </IconButton>\n        <IconButton\n          href=\"http://wormholecrypto.medium.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={classes.socialIcon}\n        >\n          <img src={Medium} alt=\"Medium\" />\n        </IconButton>\n        <IconButton\n          href=\"https://t.me/wormholecrypto\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={classes.socialIcon}\n        >\n          <img src={Telegram} alt=\"Telegram\" />\n        </IconButton>\n        <IconButton\n          href=\"https://twitter.com/wormholecrypto\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={classes.socialIcon}\n        >\n          <img src={Twitter} alt=\"Twitter\" />\n        </IconButton>\n      </div>\n      <div>\n        <a\n          href=\"https://wormholenetwork.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img src={Wormhole} alt=\"Wormhole\" className={classes.wormholeIcon} />\n        </a>\n      </div>\n      <div className={classes.builtWithContainer}>\n        <Typography variant=\"body2\">Open Source</Typography>\n        <Typography variant=\"body2\">Built with &#10084;</Typography>\n      </div>\n    </footer>\n  );\n}\n","import {\n  NetworkInfo,\n  Wallet,\n  WalletProvider,\n  useWallet,\n} from \"@terra-money/wallet-provider\";\nimport React, {\n  ReactChildren,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from \"react\";\n\nconst testnet: NetworkInfo = {\n  name: \"testnet\",\n  chainID: \"bombay-12\",\n  lcd: \"https://bombay-lcd.terra.dev\",\n};\n\nconst walletConnectChainIds: Record<number, NetworkInfo> = {\n  0: testnet,\n};\n\ninterface ITerraWalletContext {\n  connect(): void;\n  disconnect(): void;\n  connected: boolean;\n  wallet: any;\n}\n\nconst TerraWalletContext = React.createContext<ITerraWalletContext>({\n  connect: () => {},\n  disconnect: () => {},\n  connected: false,\n  wallet: null,\n});\n\nexport const TerraWalletWrapper = ({\n  children,\n}: {\n  children: ReactChildren;\n}) => {\n  // TODO: Use wallet instead of useConnectedWallet.\n  const terraWallet = useWallet();\n  const [, setWallet] = useState<Wallet | undefined>(undefined);\n  const [connected, setConnected] = useState(false);\n\n  const connect = useCallback(() => {\n    const CHROME_EXTENSION = 1;\n    if (terraWallet) {\n      terraWallet.connect(terraWallet.availableConnectTypes[CHROME_EXTENSION]);\n      setWallet(terraWallet);\n      setConnected(true);\n    }\n  }, [terraWallet]);\n\n  const disconnect = useCallback(() => {\n    setConnected(false);\n    setWallet(undefined);\n  }, []);\n\n  const contextValue = useMemo(\n    () => ({\n      connect,\n      disconnect,\n      connected,\n      wallet: terraWallet,\n    }),\n    [connect, disconnect, connected, terraWallet]\n  );\n\n  return (\n    <TerraWalletContext.Provider value={contextValue}>\n      {children}\n    </TerraWalletContext.Provider>\n  );\n};\n\nexport const TerraWalletProvider = ({\n  children,\n}: {\n  children: ReactChildren;\n}) => {\n  return (\n    <WalletProvider\n      defaultNetwork={testnet}\n      walletConnectChainIds={walletConnectChainIds}\n    >\n      <TerraWalletWrapper>{children}</TerraWalletWrapper>\n    </WalletProvider>\n  );\n};\n\nexport const useTerraWallet = () => {\n  return useContext(TerraWalletContext);\n};\n","import { useTerraWallet } from \"../contexts/TerraWalletContext\";\nimport ToggleConnectedButton from \"./ToggleConnectedButton\";\n\nconst TerraWalletKey = () => {\n  const { connect, disconnect, connected, wallet } = useTerraWallet();\n  const pk =\n    (wallet &&\n      wallet.wallets &&\n      wallet.wallets.length > 0 &&\n      wallet.wallets[0].terraAddress) ||\n    \"\";\n  return (\n    <ToggleConnectedButton\n      connect={connect}\n      disconnect={disconnect}\n      connected={connected}\n      pk={pk}\n    />\n  );\n};\n\nexport default TerraWalletKey;\n","import { ChainId, CHAIN_ID_TERRA, isEVMChain } from \"@certusone/wormhole-sdk\";\nimport { hexlify, hexStripZeros } from \"@ethersproject/bytes\";\nimport { useConnectedWallet } from \"@terra-money/wallet-provider\";\nimport { useCallback, useMemo } from \"react\";\nimport { useEthereumProvider } from \"../contexts/EthereumProviderContext\";\nimport { getEvmChainId } from \"../utils/consts\";\n\nconst createWalletStatus = (\n  isReady: boolean,\n  statusMessage: string = \"\",\n  forceNetworkSwitch: () => void,\n  walletAddress?: string\n) => ({\n  isReady,\n  statusMessage,\n  forceNetworkSwitch,\n  walletAddress,\n});\n\nfunction useIsWalletReady(\n  chainId: ChainId,\n  enableNetworkAutoswitch: boolean = true\n): {\n  isReady: boolean;\n  statusMessage: string;\n  walletAddress?: string;\n  forceNetworkSwitch: () => void;\n} {\n  const autoSwitch = enableNetworkAutoswitch;\n  const terraWallet = useConnectedWallet();\n  const hasTerraWallet = !!terraWallet;\n  const {\n    provider,\n    signerAddress,\n    chainId: evmChainId,\n  } = useEthereumProvider();\n  const hasEthInfo = !!provider && !!signerAddress;\n  const correctEvmNetwork = getEvmChainId(chainId);\n  const hasCorrectEvmNetwork = evmChainId === correctEvmNetwork;\n\n  const forceNetworkSwitch = useCallback(() => {\n    if (provider && correctEvmNetwork) {\n      if (!isEVMChain(chainId)) {\n        return;\n      }\n      try {\n        provider.send(\"wallet_switchEthereumChain\", [\n          { chainId: hexStripZeros(hexlify(correctEvmNetwork)) },\n        ]);\n      } catch (e) {}\n    }\n  }, [provider, correctEvmNetwork, chainId]);\n\n  return useMemo(() => {\n    if (\n      chainId === CHAIN_ID_TERRA &&\n      hasTerraWallet &&\n      terraWallet?.walletAddress\n    ) {\n      // TODO: terraWallet does not update on wallet changes\n      return createWalletStatus(\n        true,\n        undefined,\n        forceNetworkSwitch,\n        terraWallet.walletAddress\n      );\n    }\n    if (isEVMChain(chainId) && hasEthInfo && signerAddress) {\n      if (hasCorrectEvmNetwork) {\n        return createWalletStatus(\n          true,\n          undefined,\n          forceNetworkSwitch,\n          signerAddress\n        );\n      } else {\n        if (provider && correctEvmNetwork && autoSwitch) {\n          forceNetworkSwitch();\n        }\n        return createWalletStatus(\n          false,\n          `Wallet is not connected to testnet. Expected Chain ID: ${correctEvmNetwork}`,\n          forceNetworkSwitch,\n          undefined\n        );\n      }\n    }\n\n    return createWalletStatus(\n      false,\n      \"Wallet not connected\",\n      forceNetworkSwitch,\n      undefined\n    );\n  }, [\n    chainId,\n    autoSwitch,\n    forceNetworkSwitch,\n    hasTerraWallet,\n    hasEthInfo,\n    correctEvmNetwork,\n    hasCorrectEvmNetwork,\n    provider,\n    signerAddress,\n    terraWallet,\n  ]);\n}\n\nexport default useIsWalletReady;\n","import {\n  Collapse,\n  Container,\n  Link,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport {\n  ChainId,\n  CHAIN_ID_TERRA,\n  getSignedVAAWithRetry,\n  isEVMChain,\n} from \"@certusone/wormhole-sdk\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport ButtonWithLoader from \"../components/ButtonWithLoader\";\nimport EthereumSignerKey from \"../components/EthereumSignerKey\";\nimport TokenSelect from \"../components/TokenSelect\";\nimport { useEthereumProvider } from \"../contexts/EthereumProviderContext\";\nimport {\n  ETH_TOKEN_INFO,\n  getEvmChainId,\n  getSupportedSwaps,\n  MATIC_TOKEN_INFO,\n  RELAYER_FEE_UST,\n  TokenInfo,\n  TOKEN_INFOS,\n  WORMHOLE_RPC_HOSTS,\n} from \"../utils/consts\";\nimport { COLORS } from \"../muiTheme\";\nimport { UniswapToUniswapExecutor } from \"../swapper/swapper\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { hexlify, hexStripZeros } from \"ethers/lib/utils\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { useSnackbar } from \"notistack\";\nimport { Alert } from \"@material-ui/lab\";\nimport parseError from \"../utils/parseError\";\nimport Settings from \"../components/Settings\";\nimport getIsTransferCompletedEvmWithRetry from \"../utils/getIsTransferCompletedWithRetry\";\nimport CircleLoader from \"../components/CircleLoader\";\nimport { ArrowForward, CheckCircleOutlineRounded } from \"@material-ui/icons\";\nimport SwapProgress from \"../components/SwapProgress\";\nimport Footer from \"../components/Footer\";\nimport TerraWalletKey from \"../components/TerraWalletKey\";\nimport useIsWalletReady from \"../hooks/useIsWalletReady\";\n\nconst useStyles = makeStyles((theme) => ({\n  bg: {\n    background:\n      \"linear-gradient(160deg, rgba(69,74,117,.1) 0%, rgba(138,146,178,.1) 33%, rgba(69,74,117,.1) 66%, rgba(98,104,143,.1) 100%), linear-gradient(45deg, rgba(153,69,255,.1) 0%, rgba(121,98,231,.1) 20%, rgba(0,209,140,.1) 100%)\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n  },\n  centeredContainer: {\n    textAlign: \"center\",\n    width: \"100%\",\n  },\n  mainPaper: {\n    padding: \"2rem\",\n    backgroundColor: COLORS.nearBlackWithMinorTransparency,\n  },\n  numberField: {\n    flexGrow: 1,\n    \"& > * > .MuiInputBase-input\": {\n      textAlign: \"center\",\n      height: \"100%\",\n      flexGrow: \"1\",\n      fontSize: \"3rem\",\n      fontFamily: \"Roboto Mono, monospace\",\n      caretShape: \"block\",\n      \"&::-webkit-outer-spin-button, &::-webkit-inner-spin-button\": {\n        \"-webkit-appearance\": \"none\",\n        \"-moz-appearance\": \"none\",\n        margin: 0,\n      },\n      \"&[type=number]\": {\n        \"-webkit-appearance\": \"textfield\",\n        \"-moz-appearance\": \"textfield\",\n      },\n    },\n    \"& > * > input::-webkit-inner-spin-button\": {\n      webkitAppearance: \"none\",\n      margin: \"0\",\n    },\n  },\n  gradientButton: {\n    backgroundImage: `linear-gradient(45deg, ${COLORS.blue} 0%, ${COLORS.nearBlack}20 50%,  ${COLORS.blue}30 62%, ${COLORS.nearBlack}50  120%)`,\n    transition: \"0.75s\",\n    backgroundSize: \"200% auto\",\n    boxShadow: \"0 0 20px #222\",\n    \"&:hover\": {\n      backgroundPosition:\n        \"right center\" /* change the direction of the change here */,\n    },\n    width: \"100%\",\n    height: \"3rem\",\n    marginTop: \"1rem\",\n  },\n  disabled: {\n    background: COLORS.gray,\n  },\n  spacer: {\n    height: \"1rem\",\n  },\n  titleBar: {\n    marginTop: \"10rem\",\n    \"& > *\": {\n      margin: \".5rem\",\n      alignSelf: \"flex-end\",\n    },\n  },\n  tokenSelectWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  wormholeIcon: {\n    height: 60,\n    filter: \"contrast(0)\",\n    transition: \"filter 0.5s\",\n    \"&:hover\": {\n      filter: \"contrast(1)\",\n    },\n    verticalAlign: \"middle\",\n    margin: \"1rem\",\n    display: \"inline-block\",\n  },\n  loaderHolder: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  successIcon: {\n    color: COLORS.green,\n    fontSize: \"200px\",\n  },\n  swapPath: {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst switchEvmProviderNetwork = async (\n  provider: Web3Provider,\n  chainId: ChainId\n) => {\n  const evmChainId = getEvmChainId(chainId);\n  if (evmChainId === undefined) {\n    throw new Error(\"Unknown chainId\");\n  }\n  await provider.send(\"wallet_switchEthereumChain\", [\n    { chainId: hexStripZeros(hexlify(evmChainId)) },\n  ]);\n  const network = await provider.getNetwork();\n  if (network.chainId !== evmChainId) {\n    throw new Error(\"Could not switch network\");\n  }\n};\n\nconst ConnectedWalletAddress = ({\n  chainId,\n  prefix,\n}: {\n  chainId: ChainId;\n  prefix: string;\n}) => {\n  const { walletAddress } = useIsWalletReady(chainId, false);\n  if (walletAddress) {\n    const is0x = walletAddress.startsWith(\"0x\");\n    return (\n      <Typography variant=\"subtitle2\">\n        {prefix} {walletAddress?.substring(0, is0x ? 6 : 3)}...\n        {walletAddress?.substring(walletAddress.length - (is0x ? 4 : 3))}\n      </Typography>\n    );\n  }\n  return null;\n};\n\nconst SwapButton = ({\n  source,\n  target,\n  disabled,\n  showLoader,\n  onClick,\n}: {\n  source: TokenInfo;\n  target: TokenInfo;\n  disabled: boolean;\n  showLoader: boolean;\n  onClick: () => void;\n}) => {\n  const { isReady: isSourceWalletReady } = useIsWalletReady(\n    source.chainId,\n    !disabled\n  );\n  const { isReady: isTargetWalletReady } = useIsWalletReady(\n    target.chainId,\n    !isEVMChain(source.chainId)\n  );\n\n  if (!isSourceWalletReady) {\n    return isEVMChain(source.chainId) ? (\n      <EthereumSignerKey />\n    ) : source.chainId === CHAIN_ID_TERRA ? (\n      <TerraWalletKey />\n    ) : null;\n  }\n\n  if (\n    !isTargetWalletReady &&\n    (!isEVMChain(source.chainId) || !isEVMChain(target.chainId))\n  ) {\n    return isEVMChain(target.chainId) ? (\n      <EthereumSignerKey />\n    ) : source.chainId === CHAIN_ID_TERRA ? (\n      <TerraWalletKey />\n    ) : null;\n  }\n\n  return (\n    <ButtonWithLoader\n      disabled={disabled}\n      showLoader={showLoader}\n      onClick={onClick}\n    >\n      Swap\n    </ButtonWithLoader>\n  );\n};\n\nexport default function Home() {\n  const classes = useStyles();\n  const [sourceTokenInfo, setSourceTokenInfo] = useState(MATIC_TOKEN_INFO);\n  const [targetTokenInfo, setTargetTokenInfo] = useState(ETH_TOKEN_INFO);\n  const [amountIn, setAmountIn] = useState(\"\");\n  const [amountInUST, setAmountInUST] = useState(\"\");\n  const [amountOut, setAmountOut] = useState(\"\");\n  const [deadline, setDeadline] = useState(\"30\");\n  const [slippage, setSlippage] = useState(\"1\");\n  const [executor, setExecutor] = useState<UniswapToUniswapExecutor | null>(\n    null\n  );\n  const [isSwapping, setIsSwapping] = useState(false);\n  const [isComputingQuote, setIsComputingQuote] = useState(false);\n  const [hasQuote, setHasQuote] = useState(false);\n  const { provider, signer, signerAddress, disconnect } = useEthereumProvider();\n  const { enqueueSnackbar } = useSnackbar();\n  const [isSourceSwapComplete, setIsSourceSwapComplete] = useState(false);\n  const [isTargetSwapComplete, setIsTargetSwapComplete] = useState(false);\n  const [sourceTxBlockNumber, setSourceTxBlockNumber] = useState<\n    number | undefined\n  >(undefined);\n  const [hasSignedVAA, setHasSignedVAA] = useState(false);\n  const [relayerTimeoutString, setRelayerTimeoutString] = useState(\"\");\n\n  const computeQuote = useCallback(() => {\n    (async () => {\n      setHasQuote(false);\n      setIsComputingQuote(true);\n      setAmountOut(\"\");\n      setAmountInUST(\"\");\n      try {\n        if (\n          parseFloat(amountIn) > 0 &&\n          !isNaN(parseFloat(deadline)) &&\n          !isNaN(parseFloat(slippage))\n        ) {\n          const executor = new UniswapToUniswapExecutor();\n          await executor.initialize(\n            sourceTokenInfo.address,\n            targetTokenInfo.address,\n            true\n          );\n          await executor.computeAndVerifySrcPoolAddress().catch((e) => {\n            throw new Error(\"failed to verify source pool address\");\n          });\n          await executor.computeAndVerifyDstPoolAddress().catch((e) => {\n            throw new Error(\"failed to verify dest pool address\");\n          });\n          executor.setDeadlines((parseFloat(deadline) * 60).toString());\n          executor.setSlippage((parseFloat(slippage) / 100).toString());\n          executor.setRelayerFee(RELAYER_FEE_UST);\n          const quote = await executor.computeQuoteExactIn(amountIn);\n          setExecutor(executor);\n          setAmountOut(parseFloat(quote.minAmountOut).toFixed(8));\n          setAmountInUST(parseFloat(quote.ustAmountIn).toFixed(2));\n          setHasQuote(true);\n        }\n      } catch (e) {\n        console.error(e);\n        enqueueSnackbar(null, {\n          content: <Alert severity=\"error\">{parseError(e)}</Alert>,\n        });\n      }\n      setIsComputingQuote(false);\n    })();\n  }, [\n    sourceTokenInfo,\n    targetTokenInfo,\n    amountIn,\n    deadline,\n    slippage,\n    enqueueSnackbar,\n  ]);\n\n  const debouncedComputeQuote = useDebouncedCallback(computeQuote, 1000);\n\n  useEffect(() => {\n    debouncedComputeQuote();\n  }, [\n    sourceTokenInfo,\n    targetTokenInfo,\n    amountIn,\n    deadline,\n    slippage,\n    debouncedComputeQuote,\n  ]);\n\n  const handleAmountChange = useCallback((event) => {\n    setAmountIn(event.target.value);\n  }, []);\n\n  const handleSlippageChange = useCallback((slippage) => {\n    setSlippage(slippage);\n  }, []);\n\n  const handleDeadlineChange = useCallback((deadline) => {\n    setDeadline(deadline);\n  }, []);\n\n  const handleSourceChange = useCallback(\n    (event) => {\n      const tokenInfo = TOKEN_INFOS.find((x) => x.name === event.target.value);\n      if (tokenInfo) {\n        const supportedSwaps = getSupportedSwaps(tokenInfo);\n        if (supportedSwaps) {\n          setSourceTokenInfo(tokenInfo);\n          if (!supportedSwaps.find((x) => x.name === targetTokenInfo.name)) {\n            setTargetTokenInfo(supportedSwaps[0]);\n          }\n          setAmountIn(\"\");\n          setAmountOut(\"\");\n        }\n      }\n    },\n    [targetTokenInfo]\n  );\n\n  const handleTargetChange = useCallback((event) => {\n    const tokenInfo = TOKEN_INFOS.find((x) => x.name === event.target.value);\n    if (tokenInfo) {\n      setTargetTokenInfo(tokenInfo);\n      setAmountOut(\"\");\n    }\n  }, []);\n\n  const reset = useCallback(() => {\n    setIsSwapping(false);\n    setHasQuote(false);\n    setIsSourceSwapComplete(false);\n    setHasSignedVAA(false);\n    setIsTargetSwapComplete(false);\n    setAmountIn(\"\");\n    setAmountOut(\"\");\n    setSourceTxBlockNumber(undefined);\n    setRelayerTimeoutString(\"\");\n    disconnect();\n  }, [disconnect]);\n\n  const handleSwapClick = useCallback(async () => {\n    if (provider && signer && signerAddress && executor) {\n      try {\n        setIsSwapping(true);\n        setIsSourceSwapComplete(false);\n        setHasSignedVAA(false);\n        setIsTargetSwapComplete(false);\n        setRelayerTimeoutString(\"\");\n        await switchEvmProviderNetwork(provider, sourceTokenInfo.chainId);\n        console.log(signerAddress);\n\n        const sourceReceipt = await executor.evmApproveAndSwap(\n          signer,\n          signerAddress\n        );\n        console.info(\n          \"firstSwapTransactionHash:\",\n          sourceReceipt.transactionHash\n        );\n        setIsSourceSwapComplete(true);\n        setSourceTxBlockNumber(sourceReceipt.blockNumber);\n\n        // Wait for the guardian network to reach consensus and emit the signedVAA\n        const { vaaBytes } = await getSignedVAAWithRetry(\n          WORMHOLE_RPC_HOSTS,\n          executor.srcExecutionParams.wormhole.chainId,\n          executor.vaaSearchParams.emitterAddress,\n          executor.vaaSearchParams.sequence\n        );\n        setHasSignedVAA(true);\n        //  Check if the signedVAA has redeemed by the relayer\n        const isCompleted = await getIsTransferCompletedEvmWithRetry(\n          executor.dstExecutionParams.wormhole.tokenBridgeAddress,\n          // TODO: fix typescript error\n          // @ts-ignore\n          executor.quoter.getDstEvmProvider(),\n          vaaBytes,\n          // retry for two minutes\n          3000,\n          40\n        );\n        if (!isCompleted) {\n          // If the relayer hasn't redeemed the signedVAA, then manually redeem it ourselves\n          setRelayerTimeoutString(\n            \"Timed out waiting for relayer to complete swap. You'll need to complete it yourself.\"\n          );\n          await switchEvmProviderNetwork(provider, targetTokenInfo.chainId);\n          const targetReceipt = await executor.fetchVaaAndSwap(signer);\n          console.info(\n            \"secondSwapTransactionHash:\",\n            targetReceipt.transactionHash\n          );\n        }\n        setIsTargetSwapComplete(true);\n      } catch (e: any) {\n        reset();\n        console.error(e);\n        enqueueSnackbar(null, {\n          content: <Alert severity=\"error\">{parseError(e)}</Alert>,\n        });\n      }\n    }\n  }, [\n    provider,\n    signer,\n    signerAddress,\n    executor,\n    enqueueSnackbar,\n    sourceTokenInfo,\n    targetTokenInfo,\n    reset,\n  ]);\n\n  const readyToSwap = false; //provider && signer && hasQuote;\n  const disableSelect = isSwapping || isComputingQuote;\n\n  return (\n    <div className={classes.bg}>\n      <Container className={classes.centeredContainer} maxWidth=\"sm\">\n        <div className={classes.titleBar}></div>\n        <Typography variant=\"h2\" color=\"error\">\n          Currently down for maintenance, will be back shortly.\n        </Typography>\n        <Typography variant=\"h4\">Wormhole NativeSwap Demo</Typography>\n        <div className={classes.spacer} />\n        <Paper className={classes.mainPaper}>\n          <Collapse in={!isSourceSwapComplete}>\n            <Settings\n              disabled={disableSelect}\n              slippage={slippage}\n              deadline={deadline}\n              onSlippageChange={handleSlippageChange}\n              onDeadlineChange={handleDeadlineChange}\n            />\n            <TokenSelect\n              tokens={TOKEN_INFOS}\n              value={sourceTokenInfo.name}\n              onChange={handleSourceChange}\n              disabled={disableSelect}\n            ></TokenSelect>\n            <Typography variant=\"subtitle1\">Send</Typography>\n            <TextField\n              type=\"number\"\n              value={amountIn}\n              disabled={disableSelect}\n              InputProps={{ disableUnderline: true }}\n              className={classes.numberField}\n              onChange={handleAmountChange}\n              placeholder=\"0.0\"\n            ></TextField>\n            {parseFloat(amountIn) > sourceTokenInfo.maxAmount ? (\n              <Typography\n                variant=\"subtitle2\"\n                color=\"error\"\n              >{`The max input amount is ${sourceTokenInfo.maxAmount} ${sourceTokenInfo.name}`}</Typography>\n            ) : null}\n            <ConnectedWalletAddress\n              chainId={sourceTokenInfo.chainId}\n              prefix=\"From:\"\n            />\n            <div className={classes.spacer} />\n            <TokenSelect\n              tokens={getSupportedSwaps(sourceTokenInfo)}\n              value={targetTokenInfo.name}\n              onChange={handleTargetChange}\n              disabled={disableSelect}\n            ></TokenSelect>\n            <Typography variant=\"subtitle1\">Receive (estimated)</Typography>\n            <TextField\n              type=\"number\"\n              value={amountOut}\n              autoFocus={true}\n              InputProps={{ disableUnderline: true }}\n              className={classes.numberField}\n              inputProps={{ readOnly: true }}\n              placeholder=\"0.0\"\n            ></TextField>\n            <ConnectedWalletAddress\n              chainId={\n                isEVMChain(sourceTokenInfo.chainId) &&\n                isEVMChain(targetTokenInfo.chainId)\n                  ? sourceTokenInfo.chainId\n                  : targetTokenInfo.chainId\n              }\n              prefix=\"To:\"\n            />\n            <div className={classes.spacer} />\n            <Typography variant=\"subtitle2\">{`Slippage tolerance: ${slippage}%`}</Typography>\n            <Typography variant=\"subtitle2\">{`Relayer fee: ${RELAYER_FEE_UST} UST`}</Typography>\n            <SwapButton\n              source={sourceTokenInfo}\n              target={targetTokenInfo}\n              disabled={\n                !readyToSwap ||\n                isSwapping ||\n                parseFloat(amountIn) > sourceTokenInfo.maxAmount\n              }\n              showLoader={isSwapping}\n              onClick={handleSwapClick}\n            />\n          </Collapse>\n          <Collapse in={isSourceSwapComplete && !isTargetSwapComplete}>\n            <div className={classes.loaderHolder}>\n              <CircleLoader />\n              <div className={classes.spacer} />\n              <Typography variant=\"h5\">\n                {`Your ${sourceTokenInfo.name} is being swapped to ${targetTokenInfo.name}`}\n              </Typography>\n            </div>\n          </Collapse>\n          <Collapse in={isTargetSwapComplete}>\n            <div className={classes.loaderHolder}>\n              <CheckCircleOutlineRounded\n                className={classes.successIcon}\n                fontSize={\"inherit\"}\n              />\n              <Typography>Swap completed!</Typography>\n              <ButtonWithLoader onClick={reset}>\n                Swap more tokens!\n              </ButtonWithLoader>\n            </div>\n          </Collapse>\n          <div className={classes.spacer} />\n          {hasQuote && (\n            <Typography variant=\"subtitle1\" className={classes.swapPath}>\n              {`${amountIn} ${sourceTokenInfo.name}`}\n              <ArrowForward fontSize=\"inherit\" style={{ margin: \"10px\" }} />\n              {`${amountInUST} UST `}\n              <ArrowForward fontSize=\"inherit\" style={{ margin: \"10px\" }} />\n              {`${amountOut} ${targetTokenInfo.name}`}\n            </Typography>\n          )}\n          {isSourceSwapComplete &&\n            !isTargetSwapComplete &&\n            !relayerTimeoutString && (\n              <>\n                <SwapProgress\n                  chainId={sourceTokenInfo.chainId}\n                  txBlockNumber={sourceTxBlockNumber}\n                  hasSignedVAA={hasSignedVAA}\n                  isTargetSwapComplete={isTargetSwapComplete}\n                />\n                <div className={classes.spacer} />\n              </>\n            )}\n          {relayerTimeoutString && (\n            <Typography variant=\"subtitle1\">{relayerTimeoutString}</Typography>\n          )}\n          <Typography variant=\"subtitle2\" color=\"error\">\n            WARNING: this is a testnet release only, prices may not reflect\n            reality\n          </Typography>\n        </Paper>\n        <div className={classes.spacer} />\n        <Footer />\n        <Link\n          href=\"https://goerli-faucet.slock.it/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{ margin: \"5px\" }}\n        >\n          Goerli Faucet\n        </Link>\n        <Link\n          href=\"https://faucet.polygon.technology/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{ margin: \"5px\" }}\n        >\n          Mumbai Faucet\n        </Link>\n        <Link\n          href=\"https://faucet.avax-test.network/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{ margin: \"5px\" }}\n        >\n          Fuji Faucet\n        </Link>\n        <Link\n          href=\"https://testnet.binance.org/faucet-smart/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{ margin: \"5px\" }}\n        >\n          BSC Faucet\n        </Link>\n        <Link\n          href=\"https://github.com/certusone/wormhole-nativeswap-example/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{ margin: \"5px\" }}\n        >\n          NativeSwap GitHub\n        </Link>\n      </Container>\n    </div>\n  );\n}\n","import Home from \"./views/Home\";\n\nexport default function App() {\n  return <Home />;\n}\n","import { Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <Typography variant=\"h5\" style={{ textAlign: \"center\", marginTop: 24 }}>\n          \"An unexpected error has occurred. Please refresh the page.\"\n        </Typography>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { SnackbarProvider } from \"notistack\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport { EthereumProviderProvider } from \"./contexts/EthereumProviderContext\";\nimport { TerraWalletProvider } from \"./contexts/TerraWalletContext\";\nimport { theme } from \"./muiTheme\";\n\nReactDOM.render(\n  <ErrorBoundary>\n    <ThemeProvider theme={theme}>\n      <CssBaseline>\n        <EthereumProviderProvider>\n          <TerraWalletProvider>\n            <SnackbarProvider maxSnack={3}>\n              <App />\n            </SnackbarProvider>\n          </TerraWalletProvider>\n        </EthereumProviderProvider>\n      </CssBaseline>\n    </ThemeProvider>\n  </ErrorBoundary>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}