{"version":3,"sources":["components/ButtonWithLoader.tsx","contexts/EthereumProviderContext.tsx","components/ToggleConnectedButton.tsx","components/EthereumSignerKey.tsx","components/TokenSelect.tsx","icons/eth.svg","icons/polygon.svg","utils/consts.ts","muiTheme.js","route/generic.ts","route/evm.ts","route/uniswap-core.ts","route/cross-quote.ts","route/uniswap-v2.ts","route/quickswap.ts","route/uniswap-v3.ts","swapper/util.ts","swapper/swapper.ts","addresses/goerli.ts","addresses/mumbai.ts","utils/parseError.ts","components/Settings.tsx","utils/getIsTransferCompletedWithRetry.ts","components/CircleLoader.tsx","components/SwapProgress.tsx","icons/Discord.svg","icons/Docs.svg","icons/Github.svg","icons/Medium.svg","icons/Telegram.svg","icons/Twitter.svg","icons/wormhole-network.svg","components/Footer.tsx","views/Home.tsx","App.tsx","components/ErrorBoundary.js","index.js"],"names":["useStyles","makeStyles","theme","root","position","button","marginTop","spacing","textTransform","width","loader","bottom","left","marginLeft","marginBottom","error","textAlign","ButtonWithLoader","disabled","onClick","showLoader","children","className","classes","Button","color","variant","CircularProgress","size","Typography","EthereumProviderContext","React","createContext","connect","disconnect","provider","undefined","chainId","signer","signerAddress","providerError","EthereumProviderProvider","useState","setProviderError","setProvider","setChainId","setSigner","setSignerAddress","useCallback","detectEthereumProvider","then","detectedProvider","ethers","providers","Web3Provider","send","getNetwork","network","catch","getSigner","getAddress","address","on","BigNumber","from","toNumber","e","accounts","contextValue","useMemo","Provider","value","useEthereumProvider","useContext","display","margin","maxWidth","ToggleConnectedButton","connected","pk","is0x","startsWith","Tooltip","title","substring","substr","length","EthereumSignerKey","select","alignItems","listItemIcon","minWidth","icon","height","TokenSelect","tokens","onChange","TextField","fullWidth","map","token","name","logo","MenuItem","ListItemIcon","src","alt","ListItemText","createTokenMenuItem","MATIC_TOKEN_INFO","CHAIN_ID_POLYGON","polygonIcon","isNative","maxAmount","WMATIC_TOKEN_INFO","ETH_TOKEN_INFO","CHAIN_ID_ETH","ethIcon","WETH_TOKEN_INFO","TOKEN_INFOS","POLYGON_NETWORK_CHAIN_ID","getEvmChainId","RELAYER_FEE_UST","WORMHOLE_RPC_HOSTS","COLORS","responsiveFontSizes","createTheme","palette","type","background","default","paper","divider","text","primary","main","light","secondary","typography","fontFamily","h1","fontWeight","h2","h4","overrides","MuiCssBaseline","scrollbarWidth","scrollbarColor","backgroundColor","borderRadius","MuiAccordion","rounded","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","MuiAlert","border","MuiButton","MuiLink","MuiPaper","MuiStepper","padding","MuiStep","MuiStepConnector","lineVertical","borderLeftWidth","MuiStepContent","MuiStepLabel","label","fontSize","MuiTab","GenericToken","EvmToken","decimals","tokenAddress","a","makeErc20Contract","this","getDecimals","balanceOf","balanceBeforeDecimals","utils","formatUnits","toString","amount","parseUnits","unitAmount","right","FixedNumber","addUnsafe","round","subUnsafe","o","initialize","Contract","Erc20Abi","UniEvmToken","erc20","uniToken","Token","getContract","getBalanceOf","computeUnitAmount","formatAmount","CurrencyAmount","fromRawAmount","getUniToken","addAmounts","subtractAmounts","makeUniEvmToken","create","QuoteType","UniswapRouterCore","deadline","Math","floor","Date","now","add","PROTOCOL","SingleAmmSwapRouter","factoryAddress","pairContract","pair","tokenIn","tokenOut","Error","computePairAddress","tokenA","tokenB","pairAddress","computePoolAddress","poolContract","IUniswapV2PairABI","factory","Promise","all","token0","getReserves","reserves","reserve0","_reserve0","reserve1","_reserve1","toLowerCase","Pair","amountIn","slippage","createPool","route","Route","currencyAmountIn","computeCurrencyAmount","quote","Trade","TradeType","EXACT_INPUT","minAmountOut","outputAmount","toSignificant","slippageMultiplier","minAmountOutWithSlippage","mulUnsafe","amountOut","currencyAmountOut","EXACT_OUTPUT","maxAmountIn","inputAmount","slippageDivisor","maxAmountInWithSlippage","divUnsafe","QuickswapRouter","pool","poolFee","FeeAmount","MEDIUM","fee","IUniswapV3PoolABI","poolAddress","liquidity","slot0","slot","sqrtPriceX96","tick","bigLiq","JSBI","BigInt","negBigLiq","multiply","tickConstructorArgs","index","nearestUsableTick","TickMath","MIN_TICK","TICK_SPACINGS","liquidityNet","liquidityGross","MAX_TICK","Pool","fromRoute","computeTradeExactIn","trade","computeTradeExactOut","makeRouter","id","UniswapV3Router","getUstAddress","splitSlippageInHalf","totalSlippage","divisor","UniswapToUniswapQuoter","srcProvider","dstProvider","srcNetwork","dstNetwork","srcRouter","dstRouter","srcTokenIn","srcTokenOut","dstTokenIn","dstTokenOut","tokenInAddress","ustOutAddress","router","makeToken","tokenOutAddress","ustInAddress","computeAndVerifyPoolAddress","relayerFeeUst","singleSlippage","fetchQuoteAmountOut","srcMinAmountOut","dstAmountIn","Number","dstAmountInAfterFee","dstMinAmountOut","srcParameters","protocol","getProtocol","getPoolFee","getTradeDeadline","path","dstParameters","params","dst","relayerFee","fetchQuoteAmountIn","dstMaxAmountIn","srcAmountOut","srcAmountOutBeforeFee","srcMaxAmountIn","setDeadline","CROSSCHAINSWAP_GAS_PARAMETERS","gasLimit","maxFeePerGas","maxPriorityFeePerGas","swapExactInFromVaaNative","swapContractWithSigner","signedVaa","recvAndSwapExactNativeIn","tx","wait","swapExactInFromVaaToken","recvAndSwapExactIn","swapExactOutFromVaaNative","recvAndSwapExactNativeOut","swapExactOutFromVaaToken","recvAndSwapExactOut","EXECUTION_PARAMETERS_ETHEREUM","crossChainSwap","wormhole","WORMHOLE_CHAIN_ID_ETHEREUM","coreBridgeAddress","tokenBridgeAddress","EXECUTION_PARAMETERS_POLYGON","WORMHOLE_CHAIN_ID_POLYGON","makeExecutionParameters","approveContractTokenSpend","tokenContract","swapContractAddress","populateTransaction","approve","unsignedTx","gas_limit","getGasPrice","gasPrice","parsedGasPrice","hexlify","parseInt","console","log","getTransactionCount","nonce","sendTransaction","makeCrossChainSwapContract","contractAddress","PROTOCOL_UNISWAP_V2","SWAP_CONTRACT_V2_ABI","makeCrossChainSwapV2Contract","SWAP_CONTRACT_V3_ABI","makeCrossChainSwapV3Contract","addressToBytes32","wormholeChainId","hexString","nativeToHexString","hexToUint8Array","approveAndSwapExactIn","srcWallet","quoteParams","srcExecutionParams","dstExecutionParams","swapContractParams","swapContract","contractWithSigner","swapParams","pathArray","concat","dstWormholeChainId","dstContractAddress","bridgeNonce","gasPlusValue","info","swapExactNativeInAndTransfer","swapExactInAndTransfer","approveAndSwapExactOut","swapExactNativeOutAndTransfer","swapExactOutAndTransfer","swapExactInFromVaa","dstWallet","dstProtocol","swapExactOutFromVaa","makeProvider","url","process","StaticJsonRpcProvider","UniswapToUniswapExecutor","quoter","cachedExactInParams","cachedExactOutParams","quoteType","relayerFeeAmount","transportFactory","vaaSearchParams","vaaBytes","srcReceipt","dstReceipt","makeTokens","setDeadlines","makeSrcTokens","makeDstTokens","srcIn","srcOut","dstIn","dstOut","computeAndVerifySrcPoolAddress","computeAndVerifyDstPoolAddress","areSwapParametersUndefined","computeExactInParameters","ExactIn","computeExactOutParameters","ExactOut","wallet","getSrcProvider","fetchAndSetEmitterAndSequence","receipt","wormholeParams","sequence","parseSequenceFromLogEth","emitterAddress","getEmitterAddressEth","getSignedVAAWithRetry","vaaResponse","fetchSignedVaaFromSwap","getDstProvider","MM_ERR_WITH_INFO_START","parseError","data","message","replace","response","topScrollPaper","topPaperScrollBody","verticalAlign","float","clamp","min","max","isNaN","Settings","onSlippageChange","onDeadlineChange","dialogIsOpen","setDialogIsOpen","dialog","Dialog","open","onClose","scroll","DialogTitle","DialogContent","InputProps","endAdornment","InputAdornment","event","target","parseFloat","disableRipple","endIcon","getIsTransferCompletedEvmWithRetry","signedVAA","retryTimeoutMs","retryAttempts","result","attempts","getIsTransferCompletedEth","resolve","setTimeout","CircleLoader","TransactionProgress","txBlockNumber","step","currentBlock","setCurrentBlock","useEffect","isEVMChain","cancelled","getBlockNumber","newBlock","valueBuffer","blockDiff","LinearProgress","footer","socialIcon","builtWithContainer","justifyContent","opacity","wormholeIcon","filter","transition","marginRight","Footer","IconButton","href","rel","Docs","Discord","Github","Medium","Telegram","Twitter","Wormhole","bg","flexDirection","minHeight","centeredContainer","mainPaper","numberField","flexGrow","caretShape","webkitAppearance","gradientButton","backgroundImage","backgroundSize","boxShadow","backgroundPosition","spacer","titleBar","alignSelf","tokenSelectWrapper","loaderHolder","successIcon","swapPath","switchProviderNetwork","evmChainId","hexStripZeros","Home","sourceTokenInfo","setSourceTokenInfo","targetTokenInfo","setTargetTokenInfo","setAmountIn","amountInUST","setAmountInUST","setAmountOut","setSlippage","executor","setExecutor","isSwapping","setIsSwapping","isComputingQuote","setIsComputingQuote","hasQuote","setHasQuote","enqueueSnackbar","useSnackbar","isFirstSwapComplete","setIsFirstSwapComplete","isSecondSwapComplete","setIsSecondSwapComplete","sourceTxBlockNumber","setSourceTxBlockNumber","hasSignedVAA","setHasSignedVAA","relayerTimeoutString","setRelayerTimeoutString","computeQuote","setRelayerFee","computeQuoteExactIn","toFixed","content","Alert","severity","debouncedComputeQuote","useDebouncedCallback","handleAmountChange","handleSlippageChange","handleDeadlineChange","handleSourceChange","reset","handleSwapClick","approveAndSwap","sourceReceipt","transactionHash","blockNumber","fetchVaaAndSwap","targetReceipt","readyToSwap","Container","Paper","Collapse","in","disableUnderline","placeholder","autoFocus","inputProps","readOnly","CheckCircleOutlineRounded","ArrowForward","style","Link","App","ErrorBoundary","props","state","hasError","errorInfo","Component","ReactDOM","render","ThemeProvider","CssBaseline","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.ca83aaf3.chunk.js","sourcesContent":["import {\n  Button,\n  CircularProgress,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { ReactChild } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n  },\n  button: {\n    marginTop: theme.spacing(2),\n    textTransform: \"none\",\n    width: \"100%\",\n  },\n  loader: {\n    position: \"absolute\",\n    bottom: 0,\n    left: \"50%\",\n    marginLeft: -12,\n    marginBottom: 6,\n  },\n  error: {\n    marginTop: theme.spacing(1),\n    textAlign: \"center\",\n  },\n}));\n\nexport default function ButtonWithLoader({\n  disabled,\n  onClick,\n  showLoader,\n  error,\n  children,\n  className,\n}: {\n  disabled?: boolean;\n  onClick: () => void;\n  showLoader?: boolean;\n  error?: string;\n  children: ReactChild;\n  className?: string;\n}) {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.root}>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          className={className || classes.button}\n          disabled={disabled}\n          onClick={onClick}\n        >\n          {children}\n        </Button>\n        {showLoader ? (\n          <CircularProgress\n            size={24}\n            color=\"inherit\"\n            className={className || classes.loader}\n          />\n        ) : null}\n      </div>\n      {error ? (\n        <Typography color=\"error\" className={classes.error}>\n          {error}\n        </Typography>\n      ) : null}\n    </>\n  );\n}\n","import detectEthereumProvider from \"@metamask/detect-provider\";\nimport { BigNumber, ethers } from \"ethers\";\nimport React, {\n  ReactChildren,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from \"react\";\n\nexport type Provider = ethers.providers.Web3Provider | undefined;\nexport type Signer = ethers.Signer | undefined;\n\ninterface IEthereumProviderContext {\n  connect(): void;\n  disconnect(): void;\n  provider: Provider;\n  chainId: number | undefined;\n  signer: Signer;\n  signerAddress: string | undefined;\n  providerError: string | null;\n}\n\nconst EthereumProviderContext = React.createContext<IEthereumProviderContext>({\n  connect: () => {},\n  disconnect: () => {},\n  provider: undefined,\n  chainId: undefined,\n  signer: undefined,\n  signerAddress: undefined,\n  providerError: null,\n});\nexport const EthereumProviderProvider = ({\n  children,\n}: {\n  children: ReactChildren;\n}) => {\n  const [providerError, setProviderError] = useState<string | null>(null);\n  const [provider, setProvider] = useState<Provider>(undefined);\n  const [chainId, setChainId] = useState<number | undefined>(undefined);\n  const [signer, setSigner] = useState<Signer>(undefined);\n  const [signerAddress, setSignerAddress] = useState<string | undefined>(\n    undefined\n  );\n  const connect = useCallback(() => {\n    setProviderError(null);\n    detectEthereumProvider()\n      .then((detectedProvider) => {\n        if (detectedProvider) {\n          const provider = new ethers.providers.Web3Provider(\n            // @ts-ignore\n            detectedProvider,\n            \"any\"\n          );\n          provider\n            .send(\"eth_requestAccounts\", [])\n            .then(() => {\n              setProviderError(null);\n              setProvider(provider);\n              provider\n                .getNetwork()\n                .then((network) => {\n                  setChainId(network.chainId);\n                })\n                .catch(() => {\n                  setProviderError(\n                    \"An error occurred while getting the network\"\n                  );\n                });\n              const signer = provider.getSigner();\n              setSigner(signer);\n              signer\n                .getAddress()\n                .then((address) => {\n                  setSignerAddress(address);\n                })\n                .catch(() => {\n                  setProviderError(\n                    \"An error occurred while getting the signer address\"\n                  );\n                });\n              // TODO: try using ethers directly\n              // @ts-ignore\n              if (detectedProvider && detectedProvider.on) {\n                // @ts-ignore\n                detectedProvider.on(\"chainChanged\", (chainId) => {\n                  try {\n                    setChainId(BigNumber.from(chainId).toNumber());\n                  } catch (e) {}\n                });\n                // @ts-ignore\n                detectedProvider.on(\"accountsChanged\", (accounts) => {\n                  try {\n                    const signer = provider.getSigner();\n                    setSigner(signer);\n                    signer\n                      .getAddress()\n                      .then((address) => {\n                        setSignerAddress(address);\n                      })\n                      .catch(() => {\n                        setProviderError(\n                          \"An error occurred while getting the signer address\"\n                        );\n                      });\n                  } catch (e) {}\n                });\n              }\n            })\n            .catch(() => {\n              setProviderError(\n                \"An error occurred while requesting eth accounts\"\n              );\n            });\n        } else {\n          setProviderError(\"Please install MetaMask\");\n        }\n      })\n      .catch(() => {\n        setProviderError(\"Please install MetaMask\");\n      });\n  }, []);\n  const disconnect = useCallback(() => {\n    setProviderError(null);\n    setProvider(undefined);\n    setChainId(undefined);\n    setSigner(undefined);\n    setSignerAddress(undefined);\n  }, []);\n  const contextValue = useMemo(\n    () => ({\n      connect,\n      disconnect,\n      provider,\n      chainId,\n      signer,\n      signerAddress,\n      providerError,\n    }),\n    [\n      connect,\n      disconnect,\n      provider,\n      chainId,\n      signer,\n      signerAddress,\n      providerError,\n    ]\n  );\n  return (\n    <EthereumProviderContext.Provider value={contextValue}>\n      {children}\n    </EthereumProviderContext.Provider>\n  );\n};\nexport const useEthereumProvider = () => {\n  return useContext(EthereumProviderContext);\n};\n","import { Button, makeStyles, Tooltip } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    display: \"block\",\n    margin: `${theme.spacing(1)}px auto`,\n    width: \"100%\",\n    maxWidth: 400,\n  },\n}));\n\nconst ToggleConnectedButton = ({\n  connect,\n  disconnect,\n  connected,\n  pk,\n}: {\n  connect(): any;\n  disconnect(): any;\n  connected: boolean;\n  pk: string;\n}) => {\n  const classes = useStyles();\n  const is0x = pk.startsWith(\"0x\");\n  return connected ? (\n    <Tooltip title={pk}>\n      <Button\n        color=\"secondary\"\n        variant=\"contained\"\n        size=\"small\"\n        onClick={disconnect}\n        className={classes.button}\n      >\n        Disconnect {pk.substring(0, is0x ? 6 : 3)}...\n        {pk.substr(pk.length - (is0x ? 4 : 3))}\n      </Button>\n    </Tooltip>\n  ) : (\n    <Button\n      color=\"primary\"\n      variant=\"contained\"\n      size=\"small\"\n      onClick={connect}\n      className={classes.button}\n    >\n      Connect Wallet\n    </Button>\n  );\n};\n\nexport default ToggleConnectedButton;\n","import { Typography } from \"@material-ui/core\";\nimport { useEthereumProvider } from \"../contexts/EthereumProviderContext\";\nimport ToggleConnectedButton from \"./ToggleConnectedButton\";\n\nconst EthereumSignerKey = () => {\n  const { connect, disconnect, signerAddress, providerError } =\n    useEthereumProvider();\n  return (\n    <>\n      <ToggleConnectedButton\n        connect={connect}\n        disconnect={disconnect}\n        connected={!!signerAddress}\n        pk={signerAddress || \"\"}\n      />\n      {providerError ? (\n        <Typography variant=\"body2\" color=\"error\">\n          {providerError}\n        </Typography>\n      ) : null}\n    </>\n  );\n};\n\nexport default EthereumSignerKey;\n","import {\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  MenuItem,\n  TextField,\n} from \"@material-ui/core\";\nimport { TokenInfo } from \"../utils/consts\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    \"& .MuiSelect-root\": {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  },\n  listItemIcon: {\n    minWidth: 40,\n  },\n  icon: {\n    height: 24,\n    maxWidth: 24,\n  },\n}));\n\nconst createTokenMenuItem = ({ name, logo }: TokenInfo, classes: any) => (\n  <MenuItem key={name} value={name}>\n    <ListItemIcon className={classes.listItemIcon}>\n      <img src={logo} alt={name} className={classes.icon} />\n    </ListItemIcon>\n    <ListItemText>{name}</ListItemText>\n  </MenuItem>\n);\n\ninterface TokenSelectProps {\n  tokens: TokenInfo[];\n  value: string;\n  onChange: (event: any) => void;\n  disabled: boolean;\n}\n\nexport default function TokenSelect({\n  tokens,\n  value,\n  onChange,\n  disabled,\n}: TokenSelectProps) {\n  const classes = useStyles();\n\n  return (\n    <TextField\n      value={value}\n      onChange={onChange}\n      select\n      variant=\"outlined\"\n      fullWidth\n      className={classes.select}\n      disabled={disabled}\n    >\n      {tokens.map((token) => createTokenMenuItem(token, classes))}\n    </TextField>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/eth.364436c5.svg\";","export default __webpack_public_path__ + \"static/media/polygon.97ff139c.svg\";","import {\n  ChainId,\n  CHAIN_ID_ETH,\n  CHAIN_ID_POLYGON,\n} from \"@certusone/wormhole-sdk\";\nimport ethIcon from \"../icons/eth.svg\";\nimport polygonIcon from \"../icons/polygon.svg\";\n\nexport interface TokenInfo {\n  name: string;\n  address: string;\n  chainId: ChainId;\n  logo: string;\n  isNative: boolean;\n  maxAmount: number;\n}\n\nexport const MATIC_TOKEN_INFO: TokenInfo = {\n  name: \"MATIC\",\n  address: \"0x9c3c9283d3e44854697cd22d3faa240cfb032889\", // used to compute quote\n  chainId: CHAIN_ID_POLYGON,\n  logo: polygonIcon,\n  isNative: true,\n  maxAmount: 0.1,\n};\n\nexport const WMATIC_TOKEN_INFO: TokenInfo = {\n  name: \"WMATIC\",\n  address: \"0x9c3c9283d3e44854697cd22d3faa240cfb032889\",\n  chainId: CHAIN_ID_POLYGON,\n  logo: polygonIcon,\n  isNative: false,\n  maxAmount: 0.1,\n};\n\nexport const ETH_TOKEN_INFO: TokenInfo = {\n  name: \"ETH\",\n  address: \"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6\", // used to compute quote\n  chainId: CHAIN_ID_ETH,\n  logo: ethIcon,\n  isNative: true,\n  maxAmount: 0.01,\n};\n\nexport const WETH_TOKEN_INFO: TokenInfo = {\n  name: \"WETH\",\n  address: \"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6\",\n  chainId: CHAIN_ID_ETH,\n  logo: ethIcon,\n  isNative: false,\n  maxAmount: 0.01,\n};\n\nexport const TOKEN_INFOS = [\n  MATIC_TOKEN_INFO,\n  WMATIC_TOKEN_INFO,\n  ETH_TOKEN_INFO,\n  WETH_TOKEN_INFO,\n];\n\nexport const ETH_NETWORK_CHAIN_ID = 5;\n\nexport const POLYGON_NETWORK_CHAIN_ID = 80001;\n\nexport const getEvmChainId = (chainId: ChainId) =>\n  chainId === CHAIN_ID_ETH\n    ? ETH_NETWORK_CHAIN_ID\n    : chainId === CHAIN_ID_POLYGON\n    ? POLYGON_NETWORK_CHAIN_ID\n    : undefined;\n\nexport const RELAYER_FEE_UST = \"0.25\";\n\nexport const WORMHOLE_RPC_HOSTS = [\n  \"https://wormhole-v2-testnet-api.certus.one\",\n];\n\nexport const CORE_BRIDGE_ADDRESS_ETHEREUM =\n  \"0x706abc4E45D419950511e474C7B9Ed348A4a716c\";\n\nexport const CORE_BRIDGE_ADDRESS_POLYGON =\n  \"0x0CBE91CF822c73C2315FB05100C2F714765d5c20\";\n\nexport const TOKEN_BRIDGE_ADDRESS_ETHEREUM =\n  \"0xF890982f9310df57d00f659cf4fd87e65adEd8d7\";\n\nexport const TOKEN_BRIDGE_ADDRESS_POLYGON =\n  \"0x377D55a7928c046E18eEbb61977e714d2a76472a\";\n\nexport const QUICKSWAP_FACTORY_ADDRESS =\n  \"0x5757371414417b8C6CAad45bAeF941aBc7d3Ab32\";\n\nexport const UNISWAP_V3_FACTORY_ADDRESS =\n  \"0x1F98431c8aD98523631AE4a59f267346ea31F984\";\n\nexport const APPROVAL_GAS_LIMIT = \"100000\";\n","import { createTheme, responsiveFontSizes } from \"@material-ui/core\";\n\nexport const COLORS = {\n  blue: \"#1975e6\",\n  blueWithTransparency: \"rgba(25, 117, 230, 0.8)\",\n  gray: \"#4e4e54\",\n  green: \"#0ac2af\",\n  greenWithTransparency: \"rgba(10, 194, 175, 0.8)\",\n  lightGreen: \"rgba(51, 242, 223, 1)\",\n  lightBlue: \"#83b9fc\",\n  nearBlack: \"#000008\",\n  nearBlackWithMinorTransparency: \"rgba(0,0,0,.25)\",\n  red: \"#aa0818\",\n  darkRed: \"#810612\",\n};\n\nexport const theme = responsiveFontSizes(\n  createTheme({\n    palette: {\n      type: \"dark\",\n      background: {\n        default: COLORS.nearBlack,\n        paper: COLORS.nearBlack,\n      },\n      divider: COLORS.gray,\n      text: {\n        primary: \"rgba(255,255,255,0.98)\",\n      },\n      primary: {\n        main: COLORS.blueWithTransparency,\n        light: COLORS.lightBlue,\n      },\n      secondary: {\n        main: COLORS.greenWithTransparency,\n        light: COLORS.lightGreen,\n      },\n      error: {\n        main: COLORS.red,\n      },\n    },\n    typography: {\n      fontFamily: \"'Sora', sans-serif\",\n      h1: {\n        fontWeight: \"200\",\n      },\n      h2: {\n        fontWeight: \"200\",\n      },\n      h4: {\n        fontWeight: \"500\",\n      },\n    },\n    overrides: {\n      MuiCssBaseline: {\n        \"@global\": {\n          \"*\": {\n            scrollbarWidth: \"thin\",\n            scrollbarColor: `${COLORS.gray} ${COLORS.nearBlackWithMinorTransparency}`,\n          },\n          \"*::-webkit-scrollbar\": {\n            width: \"8px\",\n            height: \"8px\",\n            backgroundColor: COLORS.nearBlackWithMinorTransparency,\n          },\n          \"*::-webkit-scrollbar-thumb\": {\n            backgroundColor: COLORS.gray,\n            borderRadius: \"4px\",\n          },\n          \"*::-webkit-scrollbar-corner\": {\n            // this hides an annoying white box which appears when both scrollbars are present\n            backgroundColor: \"transparent\",\n          },\n        },\n      },\n      MuiAccordion: {\n        root: {\n          backgroundColor: COLORS.nearBlackWithMinorTransparency,\n          \"&:before\": {\n            display: \"none\",\n          },\n        },\n        rounded: {\n          \"&:first-child\": {\n            borderTopLeftRadius: \"16px\",\n            borderTopRightRadius: \"16px\",\n          },\n          \"&:last-child\": {\n            borderBottomLeftRadius: \"16px\",\n            borderBottomRightRadius: \"16px\",\n          },\n        },\n      },\n      MuiAlert: {\n        root: {\n          borderRadius: \"8px\",\n          border: \"1px solid\",\n        },\n      },\n      MuiButton: {\n        root: {\n          borderRadius: \"5px\",\n          textTransform: \"none\",\n        },\n      },\n      MuiLink: {\n        root: {\n          color: COLORS.lightBlue,\n        },\n      },\n      MuiPaper: {\n        rounded: {\n          borderRadius: \"16px\",\n        },\n      },\n      MuiStepper: {\n        root: {\n          backgroundColor: \"transparent\",\n          padding: 0,\n        },\n      },\n      MuiStep: {\n        root: {\n          backgroundColor: COLORS.nearBlackWithMinorTransparency,\n          borderRadius: \"16px\",\n          padding: 16,\n        },\n      },\n      MuiStepConnector: {\n        lineVertical: {\n          borderLeftWidth: 0,\n        },\n      },\n      MuiStepContent: {\n        root: {\n          borderLeftWidth: 0,\n        },\n      },\n      MuiStepLabel: {\n        label: {\n          fontSize: 16,\n          fontWeight: \"300\",\n          \"&.MuiStepLabel-active\": {\n            fontWeight: \"300\",\n          },\n          \"&.MuiStepLabel-completed\": {\n            fontWeight: \"300\",\n          },\n        },\n      },\n      MuiTab: {\n        root: {\n          fontSize: 18,\n          fontWeight: \"300\",\n          padding: 12,\n          textTransform: \"none\",\n        },\n      },\n    },\n  })\n);\n","export abstract class DexRouter {\n  abstract makeToken(tokenAddress: string): any;\n  abstract quoteLot(tokenA: any, tokenB: any, amount: string): Promise<any>;\n  abstract setSlippage(slippage: string): void;\n}\n\nexport abstract class GenericToken {\n  abstract getAddress(): string;\n\n  abstract getDecimals(): number;\n}\n\n// TODO: wrap SwapRoute and other routes\nexport class GenericRoute {\n  route: any;\n\n  constructor(route: any) {\n    this.route = route;\n  }\n\n  getRoute(): any {\n    return this.route;\n  }\n}\n","import { ethers } from \"ethers\";\n\nimport { GenericToken } from \"./generic\";\n\n// erc20 spec\nimport { abi as Erc20Abi } from \"../abi/erc20.json\";\nimport {\n  TransactionReceipt,\n  TransactionRequest,\n  TransactionResponse,\n} from \"@ethersproject/abstract-provider\";\nimport { APPROVAL_GAS_LIMIT } from \"../utils/consts\";\n\nexport class EvmToken extends GenericToken {\n  token: ethers.Contract;\n  decimals: number;\n\n  async initialize(provider: ethers.providers.Provider, tokenAddress: string) {\n    this.token = await makeErc20Contract(provider, tokenAddress);\n    this.decimals = await this.token.decimals();\n  }\n\n  static async create(\n    provider: ethers.providers.Provider,\n    tokenAddress: string\n  ): Promise<EvmToken> {\n    const o = new EvmToken();\n    await o.initialize(provider, tokenAddress);\n    return o;\n  }\n\n  getAddress(): string {\n    return this.token.address;\n  }\n\n  getDecimals(): number {\n    return this.decimals;\n  }\n\n  getContract(): ethers.Contract {\n    return this.token;\n  }\n\n  async getBalanceOf(signer: ethers.Wallet) {\n    const decimals = this.getDecimals();\n    const balanceBeforeDecimals = await this.token.balanceOf(signer.address);\n    return ethers.utils.formatUnits(balanceBeforeDecimals.toString(), decimals);\n  }\n\n  computeUnitAmount(amount: string): ethers.BigNumber {\n    return ethers.utils.parseUnits(amount, this.getDecimals());\n  }\n\n  formatAmount(unitAmount: ethers.BigNumber): string {\n    return ethers.utils.formatUnits(unitAmount, this.getDecimals());\n  }\n\n  addAmounts(left: string, right: string): string {\n    const sum = ethers.FixedNumber.from(left).addUnsafe(\n      ethers.FixedNumber.from(right)\n    );\n    return sum.round(this.getDecimals()).toString();\n  }\n\n  subtractAmounts(left: string, right: string): string {\n    const sum = ethers.FixedNumber.from(left).subUnsafe(\n      ethers.FixedNumber.from(right)\n    );\n    return sum.round(this.getDecimals()).toString();\n  }\n}\n\nexport async function makeErc20Contract(\n  provider: ethers.providers.Provider,\n  tokenAddress: string\n): Promise<ethers.Contract> {\n  return new ethers.Contract(tokenAddress, Erc20Abi, provider);\n}\n\nexport async function approveContractTokenSpend(\n  provider: ethers.providers.Provider,\n  signer: ethers.Wallet,\n  tokenContract: ethers.Contract,\n  smartContractAddress: string,\n  swapAmount: ethers.BigNumber\n): Promise<TransactionReceipt> {\n  // build transaction for token spending\n  const unsignedTx: TransactionRequest =\n    await tokenContract.populateTransaction.approve(\n      smartContractAddress,\n      swapAmount\n    );\n  const nonce = await provider.getTransactionCount(signer.address, \"latest\");\n\n  const gasPrice = await signer.getGasPrice();\n  const parsedGasPrice = ethers.utils.hexlify(parseInt(gasPrice.toString()));\n\n  unsignedTx.nonce = nonce;\n  unsignedTx.gasLimit = ethers.BigNumber.from(APPROVAL_GAS_LIMIT);\n  unsignedTx.gasPrice = ethers.BigNumber.from(parsedGasPrice);\n\n  // sign and send transaction\n  const tx: TransactionResponse = await signer.sendTransaction(unsignedTx);\n  return tx.wait();\n}\n","import { ethers } from \"ethers\";\nimport { CurrencyAmount, Token } from \"@uniswap/sdk-core\";\n\nimport { EvmToken } from \"./evm\";\n\nexport function computeTradeDeadline(deadline: string): ethers.BigNumber {\n  return ethers.BigNumber.from(Math.floor(Date.now() / 1000)).add(deadline);\n}\n\nexport class UniEvmToken {\n  erc20: EvmToken;\n  uniToken: Token;\n\n  constructor(chainId: number, erc20: EvmToken) {\n    this.erc20 = erc20;\n\n    const address = this.getAddress();\n    const decimals = this.getDecimals();\n\n    this.uniToken = new Token(chainId, address, decimals);\n  }\n\n  getUniToken(): Token {\n    return this.uniToken;\n  }\n\n  getEvmToken(): EvmToken {\n    return this.erc20;\n  }\n\n  getDecimals(): number {\n    return this.erc20.getDecimals();\n  }\n\n  getContract(): ethers.Contract {\n    return this.erc20.getContract();\n  }\n\n  getAddress(): string {\n    return this.erc20.getAddress();\n  }\n\n  async getBalanceOf(signer: ethers.Wallet) {\n    return this.erc20.getBalanceOf(signer);\n  }\n\n  computeUnitAmount(amount: string): ethers.BigNumber {\n    return this.erc20.computeUnitAmount(amount);\n  }\n\n  formatAmount(unitAmount: ethers.BigNumber): string {\n    return this.erc20.formatAmount(unitAmount);\n  }\n\n  computeCurrencyAmount(amount: string): CurrencyAmount<Token> {\n    const unitAmount = this.computeUnitAmount(amount);\n    return CurrencyAmount.fromRawAmount(\n      this.getUniToken(),\n      unitAmount.toString()\n    );\n  }\n\n  addAmounts(left: string, right: string): string {\n    return this.erc20.addAmounts(left, right);\n  }\n\n  subtractAmounts(left: string, right: string): string {\n    return this.erc20.subtractAmounts(left, right);\n  }\n}\n\nexport async function makeUniEvmToken(\n  provider: ethers.providers.Provider,\n  chainId: number,\n  tokenAddress: string\n): Promise<UniEvmToken> {\n  const erc20 = await EvmToken.create(provider, tokenAddress);\n  return new UniEvmToken(chainId, erc20);\n}\n\nexport abstract class UniswapRouterCore {\n  provider: ethers.providers.Provider;\n\n  // params\n  deadline: string = \"\";\n\n  constructor(provider: ethers.providers.Provider) {\n    this.provider = provider;\n  }\n\n  public async makeToken(tokenAddress: string): Promise<UniEvmToken> {\n    const network = await this.provider.getNetwork();\n    return makeUniEvmToken(this.provider, network.chainId, tokenAddress);\n  }\n\n  abstract computePoolAddress(\n    tokenIn: UniEvmToken,\n    tokenOut: UniEvmToken\n  ): string;\n\n  abstract computeAndVerifyPoolAddress(\n    tokenIn: UniEvmToken,\n    tokenOut: UniEvmToken\n  ): Promise<string>;\n\n  abstract fetchQuoteAmountOut(\n    tokenIn: UniEvmToken,\n    tokenOut: UniEvmToken,\n    amountOut: string,\n    slippage: string\n  ): Promise<ethers.BigNumber>;\n\n  abstract fetchQuoteAmountIn(\n    tokenIn: UniEvmToken,\n    tokenOut: UniEvmToken,\n    amountOut: string,\n    slippage: string\n  ): Promise<ethers.BigNumber>;\n\n  abstract getProtocol(): string;\n\n  public getPoolFee(): string {\n    return \"\";\n  }\n\n  public setDeadline(deadline: string): void {\n    this.deadline = deadline;\n  }\n\n  public getTradeDeadline(): ethers.BigNumber {\n    return computeTradeDeadline(this.deadline);\n  }\n}\n","import { ethers } from \"ethers\";\nimport { UniEvmToken } from \"./uniswap-core\";\nimport { QuickswapRouter } from \"./quickswap\";\nimport { SingleAmmSwapRouter as UniswapV3Router } from \"./uniswap-v3\";\nimport {\n  ETH_NETWORK_CHAIN_ID,\n  POLYGON_NETWORK_CHAIN_ID,\n} from \"../utils/consts\";\n\nexport { PROTOCOL as PROTOCOL_UNISWAP_V2 } from \"./uniswap-v2\";\nexport { PROTOCOL as PROTOCOL_UNISWAP_V3 } from \"./uniswap-v3\";\n\nexport enum QuoteType {\n  ExactIn = 1,\n  ExactOut,\n}\n\nfunction makeRouter(provider: ethers.providers.Provider, id: number) {\n  switch (id) {\n    case ETH_NETWORK_CHAIN_ID: {\n      return new UniswapV3Router(provider);\n    }\n    case POLYGON_NETWORK_CHAIN_ID: {\n      return new QuickswapRouter(provider);\n    }\n    default: {\n      throw Error(\"unrecognized chain id\");\n    }\n  }\n}\n\nexport function getUstAddress(id: number): string {\n  switch (id) {\n    case ETH_NETWORK_CHAIN_ID: {\n      return \"0x36Ed51Afc79619b299b238898E72ce482600568a\";\n    }\n    case POLYGON_NETWORK_CHAIN_ID: {\n      return \"0xe3a1c77e952b57b5883f6c906fc706fcc7d4392c\";\n    }\n    default: {\n      throw Error(\"unrecognized chain id\");\n    }\n  }\n}\n\nfunction splitSlippageInHalf(totalSlippage: string): string {\n  const divisor = ethers.FixedNumber.from(\"2\");\n  return ethers.FixedNumber.from(totalSlippage)\n    .divUnsafe(divisor)\n    .round(4)\n    .toString();\n}\n\ninterface RelayerFee {\n  amount: ethers.BigNumber;\n  tokenAddress: string;\n}\n\nexport interface ExactInParameters {\n  protocol: string;\n  amountIn: ethers.BigNumber;\n  minAmountOut: ethers.BigNumber;\n  deadline: ethers.BigNumber;\n  poolFee: string;\n  path: [string, string];\n}\n\nexport interface ExactInCrossParameters {\n  src: ExactInParameters;\n  dst: ExactInParameters;\n  relayerFee: RelayerFee;\n}\n\nexport interface ExactOutParameters {\n  protocol: string;\n  amountOut: ethers.BigNumber;\n  maxAmountIn: ethers.BigNumber;\n  deadline: ethers.BigNumber;\n  poolFee: string;\n  path: [string, string];\n}\n\nexport interface ExactOutCrossParameters {\n  src: ExactOutParameters;\n  dst: ExactOutParameters;\n  relayerFee: RelayerFee;\n}\n\nexport class UniswapToUniswapQuoter {\n  // providers\n  srcProvider: ethers.providers.Provider;\n  dstProvider: ethers.providers.Provider;\n\n  // networks\n  srcNetwork: ethers.providers.Network;\n  dstNetwork: ethers.providers.Network;\n\n  // routers\n  srcRouter: UniswapV3Router | QuickswapRouter;\n  dstRouter: UniswapV3Router | QuickswapRouter;\n\n  // tokens\n  srcTokenIn: UniEvmToken;\n  srcTokenOut: UniEvmToken;\n  dstTokenIn: UniEvmToken;\n  dstTokenOut: UniEvmToken;\n\n  constructor(\n    srcProvider: ethers.providers.Provider,\n    dstProvider: ethers.providers.Provider\n  ) {\n    this.srcProvider = srcProvider;\n    this.dstProvider = dstProvider;\n  }\n\n  async initialize(): Promise<void> {\n    [this.srcNetwork, this.dstNetwork] = await Promise.all([\n      this.srcProvider.getNetwork(),\n      this.dstProvider.getNetwork(),\n    ]);\n\n    this.srcRouter = makeRouter(this.srcProvider, this.srcNetwork.chainId);\n    this.dstRouter = makeRouter(this.dstProvider, this.dstNetwork.chainId);\n    return;\n  }\n\n  sameChain(): boolean {\n    return this.srcNetwork.chainId === this.dstNetwork.chainId;\n  }\n\n  async makeSrcTokens(\n    tokenInAddress: string\n  ): Promise<[UniEvmToken, UniEvmToken]> {\n    const ustOutAddress = getUstAddress(this.srcNetwork.chainId);\n\n    const router = this.srcRouter;\n\n    [this.srcTokenIn, this.srcTokenOut] = await Promise.all([\n      router.makeToken(tokenInAddress),\n      router.makeToken(ustOutAddress),\n    ]);\n    return [this.srcTokenIn, this.srcTokenOut];\n  }\n\n  async makeDstTokens(\n    tokenOutAddress: string\n  ): Promise<[UniEvmToken, UniEvmToken]> {\n    const ustInAddress = getUstAddress(this.dstNetwork.chainId);\n\n    const router = this.dstRouter;\n\n    [this.dstTokenIn, this.dstTokenOut] = await Promise.all([\n      router.makeToken(ustInAddress),\n      router.makeToken(tokenOutAddress),\n    ]);\n    return [this.dstTokenIn, this.dstTokenOut];\n  }\n\n  async computeAndVerifySrcPoolAddress(): Promise<string> {\n    return this.srcRouter.computeAndVerifyPoolAddress(\n      this.srcTokenIn,\n      this.srcTokenOut\n    );\n  }\n\n  async computeAndVerifyDstPoolAddress(): Promise<string> {\n    return this.dstRouter.computeAndVerifyPoolAddress(\n      this.dstTokenIn,\n      this.dstTokenOut\n    );\n  }\n\n  async computeExactInParameters(\n    amountIn: string,\n    slippage: string,\n    relayerFeeUst: string\n  ): Promise<ExactInCrossParameters> {\n    const singleSlippage = splitSlippageInHalf(slippage);\n\n    // src quote\n    const srcRouter = this.srcRouter;\n    const srcTokenIn = this.srcTokenIn;\n    const srcTokenOut = this.srcTokenOut;\n    const srcMinAmountOut = await srcRouter.fetchQuoteAmountOut(\n      srcTokenIn,\n      srcTokenOut,\n      amountIn,\n      singleSlippage\n    );\n\n    // dst quote\n    const dstRouter = this.dstRouter;\n    const dstAmountIn = this.srcTokenOut.formatAmount(srcMinAmountOut);\n    if (Number(dstAmountIn) < Number(relayerFeeUst)) {\n      throw Error(\n        `srcAmountOut <= relayerFeeUst. ${dstAmountIn} vs ${relayerFeeUst}`\n      );\n    }\n\n    const dstTokenIn = this.dstTokenIn;\n    const dstTokenOut = this.dstTokenOut;\n    const dstAmountInAfterFee = dstTokenIn.subtractAmounts(\n      dstAmountIn,\n      relayerFeeUst\n    );\n\n    const dstMinAmountOut = await dstRouter.fetchQuoteAmountOut(\n      dstTokenIn,\n      dstTokenOut,\n      dstAmountInAfterFee,\n      singleSlippage\n    );\n\n    const srcParameters: ExactInParameters = {\n      protocol: srcRouter.getProtocol(),\n      amountIn: srcTokenIn.computeUnitAmount(amountIn),\n      minAmountOut: srcMinAmountOut,\n      poolFee: srcRouter.getPoolFee(),\n      deadline: srcRouter.getTradeDeadline(),\n      path: [srcTokenIn.getAddress(), srcTokenOut.getAddress()],\n    };\n\n    const dstParameters: ExactInParameters = {\n      protocol: dstRouter.getProtocol(),\n      amountIn: dstTokenIn.computeUnitAmount(dstAmountInAfterFee),\n      minAmountOut: dstMinAmountOut,\n      poolFee: dstRouter.getPoolFee(),\n      deadline: dstRouter.getTradeDeadline(),\n      path: [dstTokenIn.getAddress(), dstTokenOut.getAddress()],\n    };\n\n    const params: ExactInCrossParameters = {\n      src: srcParameters,\n      dst: dstParameters,\n      relayerFee: {\n        amount: dstTokenIn.computeUnitAmount(relayerFeeUst),\n        tokenAddress: this.dstTokenIn.getAddress(),\n      },\n    };\n    return params;\n  }\n\n  async computeExactOutParameters(\n    amountOut: string,\n    slippage: string,\n    relayerFeeUst: string\n  ): Promise<ExactOutCrossParameters> {\n    const singleSlippage = splitSlippageInHalf(slippage);\n\n    // dst quote first\n    const dstRouter = this.dstRouter;\n    const dstTokenIn = this.dstTokenIn;\n    const dstTokenOut = this.dstTokenOut;\n    const dstMaxAmountIn = await dstRouter.fetchQuoteAmountIn(\n      dstTokenIn,\n      dstTokenOut,\n      amountOut,\n      singleSlippage\n    );\n\n    // src quote\n    const srcRouter = this.srcRouter;\n    const srcAmountOut = this.dstTokenIn.formatAmount(dstMaxAmountIn);\n    if (Number(srcAmountOut) < Number(relayerFeeUst)) {\n      throw Error(\n        `dstAmountIn <= relayerFeeUst. ${srcAmountOut} vs ${relayerFeeUst}`\n      );\n    }\n\n    const srcTokenIn = this.srcTokenIn;\n    const srcTokenOut = this.srcTokenOut;\n    const srcAmountOutBeforeFee = srcTokenOut.addAmounts(\n      srcAmountOut,\n      relayerFeeUst\n    );\n\n    const srcMaxAmountIn = await srcRouter.fetchQuoteAmountIn(\n      srcTokenIn,\n      srcTokenOut,\n      srcAmountOutBeforeFee,\n      singleSlippage\n    );\n\n    const srcParameters: ExactOutParameters = {\n      protocol: srcRouter.getProtocol(),\n      amountOut: srcTokenOut.computeUnitAmount(srcAmountOutBeforeFee),\n      maxAmountIn: srcMaxAmountIn,\n      poolFee: srcRouter.getPoolFee(),\n      deadline: srcRouter.getTradeDeadline(),\n      path: [srcTokenIn.getAddress(), srcTokenOut.getAddress()],\n    };\n\n    const dstParameters: ExactOutParameters = {\n      protocol: dstRouter.getProtocol(),\n      amountOut: dstTokenOut.computeUnitAmount(amountOut),\n      maxAmountIn: dstMaxAmountIn,\n      poolFee: dstRouter.getPoolFee(),\n      deadline: dstRouter.getTradeDeadline(),\n      path: [dstTokenIn.getAddress(), dstTokenOut.getAddress()],\n    };\n\n    const params: ExactOutCrossParameters = {\n      src: srcParameters,\n      dst: dstParameters,\n      relayerFee: {\n        amount: dstTokenIn.computeUnitAmount(relayerFeeUst),\n        tokenAddress: this.dstTokenIn.getAddress(),\n      },\n    };\n    return params;\n  }\n\n  setDeadlines(deadline: string): void {\n    this.srcRouter.setDeadline(deadline);\n    this.dstRouter.setDeadline(deadline);\n  }\n}\n","import { ethers } from \"ethers\";\nimport { CurrencyAmount, TradeType } from \"@uniswap/sdk-core\";\nimport { abi as IUniswapV2PairABI } from \"@uniswap/v2-core/build/UniswapV2Pair.json\";\nimport { computePairAddress, Pair, Route, Trade } from \"@uniswap/v2-sdk\";\n\nimport { UniEvmToken, UniswapRouterCore } from \"./uniswap-core\";\n\nexport const PROTOCOL = \"UniswapV2\";\n\nexport class SingleAmmSwapRouter extends UniswapRouterCore {\n  factoryAddress: string;\n  pairContract: ethers.Contract;\n  pair: Pair;\n\n  setFactoryAddress(factoryAddress: string) {\n    this.factoryAddress = factoryAddress;\n    return;\n  }\n\n  computePoolAddress(tokenIn: UniEvmToken, tokenOut: UniEvmToken): string {\n    if (this.factoryAddress === undefined) {\n      throw Error(\"factoryAddress is undefined. use setFactoryAddress\");\n    }\n\n    return computePairAddress({\n      factoryAddress: this.factoryAddress,\n      tokenA: tokenIn.getUniToken(),\n      tokenB: tokenOut.getUniToken(),\n    });\n  }\n\n  async computeAndVerifyPoolAddress(\n    tokenIn: UniEvmToken,\n    tokenOut: UniEvmToken\n  ): Promise<string> {\n    const pairAddress = this.computePoolAddress(tokenIn, tokenOut);\n\n    // verify by attempting to call factory()\n    const poolContract = new ethers.Contract(\n      pairAddress,\n      IUniswapV2PairABI,\n      this.provider\n    );\n    await poolContract.factory();\n\n    return pairAddress;\n  }\n\n  async createPool(tokenIn: UniEvmToken, tokenOut: UniEvmToken): Promise<Pair> {\n    const pairAddress = this.computePoolAddress(tokenIn, tokenOut);\n\n    const pairContract = new ethers.Contract(\n      pairAddress,\n      IUniswapV2PairABI,\n      this.provider\n    );\n\n    const [token0, reserves] = await Promise.all([\n      pairContract.token0(),\n      pairContract.getReserves(),\n    ]);\n\n    const reserve0 = reserves._reserve0.toString();\n    const reserve1 = reserves._reserve1.toString();\n\n    if (token0.toLowerCase() === tokenIn.getAddress().toLowerCase()) {\n      return new Pair(\n        CurrencyAmount.fromRawAmount(tokenIn.getUniToken(), reserve0),\n        CurrencyAmount.fromRawAmount(tokenOut.getUniToken(), reserve1)\n      );\n    }\n\n    return new Pair(\n      CurrencyAmount.fromRawAmount(tokenOut.getUniToken(), reserve0),\n      CurrencyAmount.fromRawAmount(tokenIn.getUniToken(), reserve1)\n    );\n  }\n\n  async fetchQuoteAmountOut(\n    tokenIn: UniEvmToken,\n    tokenOut: UniEvmToken,\n    amountIn: string,\n    slippage: string\n  ): Promise<ethers.BigNumber> {\n    // create pool\n    const pair = await this.createPool(tokenIn, tokenOut);\n    // let's get that quote\n\n    const route = new Route(\n      [pair],\n      tokenIn.getUniToken(),\n      tokenOut.getUniToken()\n    );\n    const currencyAmountIn = tokenIn.computeCurrencyAmount(amountIn);\n\n    const quote = new Trade(route, currencyAmountIn, TradeType.EXACT_INPUT);\n\n    const decimals = tokenOut.getDecimals();\n    const minAmountOut = ethers.FixedNumber.from(\n      quote.outputAmount.toSignificant(decimals)\n    );\n\n    // calculate output amount with slippage\n    const slippageMultiplier = ethers.FixedNumber.from(\"1\").subUnsafe(\n      ethers.FixedNumber.from(slippage)\n    );\n    const minAmountOutWithSlippage = minAmountOut\n      .mulUnsafe(slippageMultiplier)\n      .round(decimals);\n\n    return tokenOut.computeUnitAmount(minAmountOutWithSlippage.toString());\n  }\n\n  async fetchQuoteAmountIn(\n    tokenIn: UniEvmToken,\n    tokenOut: UniEvmToken,\n    amountOut: string,\n    slippage: string\n  ): Promise<ethers.BigNumber> {\n    // create pool\n    const pair = await this.createPool(tokenIn, tokenOut);\n    // let's get that quote\n\n    const route = new Route(\n      [pair],\n      tokenIn.getUniToken(),\n      tokenOut.getUniToken()\n    );\n    const currencyAmountOut = tokenOut.computeCurrencyAmount(amountOut);\n\n    const quote = new Trade(route, currencyAmountOut, TradeType.EXACT_OUTPUT);\n\n    const decimals = tokenIn.getDecimals();\n    const maxAmountIn = ethers.FixedNumber.from(\n      quote.inputAmount.toSignificant(decimals)\n    );\n\n    const slippageDivisor = ethers.FixedNumber.from(\"1\").subUnsafe(\n      ethers.FixedNumber.from(slippage)\n    );\n    const maxAmountInWithSlippage = maxAmountIn\n      .divUnsafe(slippageDivisor)\n      .round(decimals);\n\n    return tokenIn.computeUnitAmount(maxAmountInWithSlippage.toString());\n  }\n\n  getProtocol(): string {\n    return PROTOCOL;\n  }\n}\n","import { ethers } from \"ethers\";\nimport { QUICKSWAP_FACTORY_ADDRESS } from \"../utils/consts\";\nimport { SingleAmmSwapRouter } from \"./uniswap-v2\";\n\nexport { PROTOCOL } from \"./uniswap-v2\";\n\nexport class QuickswapRouter extends SingleAmmSwapRouter {\n  constructor(provider: ethers.providers.Provider) {\n    super(provider);\n    super.setFactoryAddress(QUICKSWAP_FACTORY_ADDRESS);\n  }\n}\n","import { ethers } from \"ethers\";\nimport JSBI from \"jsbi\";\nimport { CurrencyAmount, Token, TradeType } from \"@uniswap/sdk-core\";\nimport { abi as IUniswapV3PoolABI } from \"@uniswap/v3-core/artifacts/contracts/interfaces/IUniswapV3Pool.sol/IUniswapV3Pool.json\";\nimport {\n  computePoolAddress,\n  FeeAmount,\n  nearestUsableTick,\n  Pool,\n  Route,\n  TickMath,\n  TICK_SPACINGS,\n  Trade,\n} from \"@uniswap/v3-sdk\";\n\nimport { UniEvmToken, UniswapRouterCore } from \"./uniswap-core\";\nimport { UNISWAP_V3_FACTORY_ADDRESS } from \"../utils/consts\";\n\nexport const PROTOCOL = \"UniswapV3\";\n\nexport class SingleAmmSwapRouter extends UniswapRouterCore {\n  poolContract: ethers.Contract;\n  pool: Pool;\n  poolFee: FeeAmount;\n\n  constructor(provider: ethers.providers.Provider) {\n    super(provider);\n\n    // set fee amount for our example\n    this.poolFee = FeeAmount.MEDIUM;\n  }\n\n  getPoolFee(): string {\n    return this.poolFee.toString();\n  }\n\n  computePoolAddress(tokenIn: UniEvmToken, tokenOut: UniEvmToken): string {\n    return computePoolAddress({\n      factoryAddress: UNISWAP_V3_FACTORY_ADDRESS,\n      fee: this.poolFee,\n      tokenA: tokenIn.getUniToken(),\n      tokenB: tokenOut.getUniToken(),\n    });\n  }\n\n  async computeAndVerifyPoolAddress(\n    tokenIn: UniEvmToken,\n    tokenOut: UniEvmToken\n  ): Promise<string> {\n    const pairAddress = this.computePoolAddress(tokenIn, tokenOut);\n\n    // verify by attempting to call factory()\n    const poolContract = new ethers.Contract(\n      pairAddress,\n      IUniswapV3PoolABI,\n      this.provider\n    );\n    await poolContract.factory();\n\n    return pairAddress;\n  }\n\n  async createPool(tokenIn: UniEvmToken, tokenOut: UniEvmToken): Promise<Pool> {\n    const poolAddress = this.computePoolAddress(tokenIn, tokenOut);\n\n    const poolContract = new ethers.Contract(\n      poolAddress,\n      IUniswapV3PoolABI,\n      this.provider\n    );\n    this.poolContract = poolContract;\n\n    const [liquidity, slot] = await Promise.all([\n      poolContract.liquidity(),\n      poolContract.slot0(),\n    ]);\n\n    // grab necessary data from slot\n    const sqrtPriceX96 = slot[0];\n    const tick = slot[1];\n\n    // create JSBI version of liquidity numbers\n    const bigLiq = JSBI.BigInt(liquidity);\n    const negBigLiq = JSBI.multiply(bigLiq, JSBI.BigInt(-1));\n\n    const tickConstructorArgs = [\n      {\n        index: nearestUsableTick(\n          TickMath.MIN_TICK,\n          TICK_SPACINGS[this.poolFee]\n        ),\n        liquidityNet: bigLiq,\n        liquidityGross: bigLiq,\n      },\n      {\n        index: nearestUsableTick(\n          TickMath.MAX_TICK,\n          TICK_SPACINGS[this.poolFee]\n        ),\n        liquidityNet: negBigLiq,\n        liquidityGross: bigLiq,\n      },\n    ];\n\n    return new Pool(\n      tokenIn.getUniToken(),\n      tokenOut.getUniToken(),\n      this.poolFee,\n      sqrtPriceX96.toString(), //note the description discrepancy - sqrtPriceX96 and sqrtRatioX96 are interchangable values\n      liquidity,\n      tick,\n      tickConstructorArgs\n    );\n  }\n\n  async computeTradeExactIn(\n    tokenIn: UniEvmToken,\n    tokenOut: UniEvmToken,\n    amount: string\n  ): Promise<Trade<Token, Token, TradeType.EXACT_INPUT>> {\n    // create pool\n    const pool = await this.createPool(tokenIn, tokenOut);\n    // let's get that quote\n    const amountIn = tokenIn.computeUnitAmount(amount);\n\n    const route = new Route(\n      [pool],\n      tokenIn.getUniToken(),\n      tokenOut.getUniToken()\n    );\n    return Trade.fromRoute(\n      route,\n      CurrencyAmount.fromRawAmount(tokenIn.getUniToken(), amountIn.toString()),\n      TradeType.EXACT_INPUT\n    );\n  }\n\n  async computeTradeExactOut(\n    tokenIn: UniEvmToken,\n    tokenOut: UniEvmToken,\n    amount: string\n  ): Promise<Trade<Token, Token, TradeType.EXACT_OUTPUT>> {\n    // create pool\n    const pool = await this.createPool(tokenIn, tokenOut);\n    // let's get that quote\n    const amountOut = tokenOut.computeUnitAmount(amount);\n\n    const route = new Route(\n      [pool],\n      tokenIn.getUniToken(),\n      tokenOut.getUniToken()\n    );\n    return Trade.fromRoute(\n      route,\n      CurrencyAmount.fromRawAmount(\n        tokenOut.getUniToken(),\n        amountOut.toString()\n      ),\n      TradeType.EXACT_OUTPUT\n    );\n  }\n\n  async fetchQuoteAmountOut(\n    tokenIn: UniEvmToken,\n    tokenOut: UniEvmToken,\n    amountIn: string,\n    slippage: string\n  ): Promise<ethers.BigNumber> {\n    // get the quote\n    const trade = await this.computeTradeExactIn(tokenIn, tokenOut, amountIn);\n\n    const decimals = tokenOut.getDecimals();\n\n    // calculate output amount with slippage\n    const minAmountOut = ethers.FixedNumber.from(\n      trade.outputAmount.toSignificant(decimals)\n    );\n\n    const slippageMultiplier = ethers.FixedNumber.from(\"1\").subUnsafe(\n      ethers.FixedNumber.from(slippage)\n    );\n    const minAmountOutWithSlippage = minAmountOut\n      .mulUnsafe(slippageMultiplier)\n      .round(decimals);\n\n    return tokenOut.computeUnitAmount(minAmountOutWithSlippage.toString());\n  }\n\n  async fetchQuoteAmountIn(\n    tokenIn: UniEvmToken,\n    tokenOut: UniEvmToken,\n    amountOut: string,\n    slippage: string\n  ): Promise<ethers.BigNumber> {\n    // get the quote\n    const trade = await this.computeTradeExactOut(tokenIn, tokenOut, amountOut);\n\n    const decimals = tokenIn.getDecimals();\n\n    // calculate output amount with slippage\n    const maxAmountIn = ethers.FixedNumber.from(\n      trade.inputAmount.toSignificant(decimals)\n    );\n\n    const slippageDivisor = ethers.FixedNumber.from(\"1\").subUnsafe(\n      ethers.FixedNumber.from(slippage)\n    );\n    const maxAmountInWithSlippage = maxAmountIn\n      .divUnsafe(slippageDivisor)\n      .round(decimals);\n\n    return tokenIn.computeUnitAmount(maxAmountInWithSlippage.toString());\n  }\n\n  getProtocol(): string {\n    return PROTOCOL;\n  }\n}\n","import { ethers } from \"ethers\";\nimport { TransactionReceipt } from \"@ethersproject/abstract-provider\";\n\nexport const CROSSCHAINSWAP_GAS_PARAMETERS = {\n  gasLimit: \"550000\",\n  maxFeePerGas: \"250000000000\",\n  maxPriorityFeePerGas: \"1690000000\",\n};\n\n// exact in\n//\nexport async function swapExactInFromVaaNative(\n  swapContractWithSigner: ethers.Contract,\n  signedVaa: Uint8Array\n): Promise<TransactionReceipt> {\n  const tx = await swapContractWithSigner.recvAndSwapExactNativeIn(\n    signedVaa,\n    CROSSCHAINSWAP_GAS_PARAMETERS\n  );\n  return tx.wait();\n}\n\nexport async function swapExactInFromVaaToken(\n  swapContractWithSigner: ethers.Contract,\n  signedVaa: Uint8Array\n): Promise<TransactionReceipt> {\n  const tx = await swapContractWithSigner.recvAndSwapExactIn(\n    signedVaa,\n    CROSSCHAINSWAP_GAS_PARAMETERS\n  );\n  return tx.wait();\n}\n\n// exact out (TODO: add to util)\n//\nexport async function swapExactOutFromVaaNative(\n  swapContractWithSigner: ethers.Contract,\n  signedVaa: Uint8Array\n): Promise<TransactionReceipt> {\n  const tx = await swapContractWithSigner.recvAndSwapExactNativeOut(\n    signedVaa,\n    CROSSCHAINSWAP_GAS_PARAMETERS\n  );\n  return tx.wait();\n}\n\nexport async function swapExactOutFromVaaToken(\n  swapContractWithSigner: ethers.Contract,\n  signedVaa: Uint8Array\n): Promise<TransactionReceipt> {\n  const tx = await swapContractWithSigner.recvAndSwapExactOut(\n    signedVaa,\n    CROSSCHAINSWAP_GAS_PARAMETERS\n  );\n  return tx.wait();\n}\n","import { ethers } from \"ethers\";\nimport { TransactionReceipt } from \"@ethersproject/abstract-provider\";\nimport {\n  CHAIN_ID_POLYGON as WORMHOLE_CHAIN_ID_POLYGON,\n  CHAIN_ID_ETH as WORMHOLE_CHAIN_ID_ETHEREUM,\n  ChainId,\n  getEmitterAddressEth,\n  hexToUint8Array,\n  nativeToHexString,\n  parseSequenceFromLogEth,\n  getSignedVAAWithRetry,\n} from \"@certusone/wormhole-sdk\";\nimport { grpc } from \"@improbable-eng/grpc-web\";\nimport { UniEvmToken } from \"../route/uniswap-core\";\nimport {\n  PROTOCOL_UNISWAP_V2,\n  // PROTOCOL_UNISWAP_V3,\n  ExactInCrossParameters,\n  ExactOutCrossParameters,\n  QuoteType,\n  UniswapToUniswapQuoter,\n} from \"../route/cross-quote\";\nimport {\n  TOKEN_BRIDGE_ADDRESS_POLYGON,\n  CORE_BRIDGE_ADDRESS_ETHEREUM,\n  CORE_BRIDGE_ADDRESS_POLYGON,\n  TOKEN_BRIDGE_ADDRESS_ETHEREUM,\n  WORMHOLE_RPC_HOSTS,\n  POLYGON_NETWORK_CHAIN_ID,\n  ETH_NETWORK_CHAIN_ID,\n  WETH_TOKEN_INFO,\n  WMATIC_TOKEN_INFO,\n} from \"../utils/consts\";\nimport {\n  CROSSCHAINSWAP_GAS_PARAMETERS,\n  swapExactInFromVaaNative,\n  swapExactInFromVaaToken,\n  swapExactOutFromVaaNative,\n  swapExactOutFromVaaToken,\n} from \"./util\";\nimport { abi as SWAP_CONTRACT_V2_ABI } from \"../abi/contracts/CrossChainSwapV2.json\";\nimport { abi as SWAP_CONTRACT_V3_ABI } from \"../abi/contracts/CrossChainSwapV3.json\";\nimport { SWAP_CONTRACT_ADDRESS as CROSSCHAINSWAP_CONTRACT_ADDRESS_ETHEREUM } from \"../addresses/goerli\";\nimport { SWAP_CONTRACT_ADDRESS as CROSSCHAINSWAP_CONTRACT_ADDRESS_POLYGON } from \"../addresses/mumbai\";\n\ninterface SwapContractParameters {\n  address: string;\n}\n\ninterface WormholeParameters {\n  chainId: ChainId;\n  coreBridgeAddress: string;\n  tokenBridgeAddress: string;\n}\n\ninterface ExecutionParameters {\n  crossChainSwap: SwapContractParameters;\n  wormhole: WormholeParameters;\n}\n\nconst EXECUTION_PARAMETERS_ETHEREUM: ExecutionParameters = {\n  crossChainSwap: {\n    address: CROSSCHAINSWAP_CONTRACT_ADDRESS_ETHEREUM,\n  },\n  wormhole: {\n    chainId: WORMHOLE_CHAIN_ID_ETHEREUM,\n    coreBridgeAddress: CORE_BRIDGE_ADDRESS_ETHEREUM,\n    tokenBridgeAddress: TOKEN_BRIDGE_ADDRESS_ETHEREUM,\n  },\n};\n\nconst EXECUTION_PARAMETERS_POLYGON: ExecutionParameters = {\n  crossChainSwap: {\n    address: CROSSCHAINSWAP_CONTRACT_ADDRESS_POLYGON,\n  },\n  wormhole: {\n    chainId: WORMHOLE_CHAIN_ID_POLYGON,\n    coreBridgeAddress: CORE_BRIDGE_ADDRESS_POLYGON,\n    tokenBridgeAddress: TOKEN_BRIDGE_ADDRESS_POLYGON,\n  },\n};\n\nfunction makeExecutionParameters(id: number): ExecutionParameters {\n  switch (id) {\n    case ETH_NETWORK_CHAIN_ID: {\n      return EXECUTION_PARAMETERS_ETHEREUM;\n    }\n    case POLYGON_NETWORK_CHAIN_ID: {\n      return EXECUTION_PARAMETERS_POLYGON;\n    }\n    default: {\n      throw Error(\"unrecognized chain id\");\n    }\n  }\n}\n\nasync function approveContractTokenSpend(\n  provider: ethers.providers.Provider,\n  signer: ethers.Signer,\n  tokenContract: ethers.Contract,\n  swapContractAddress: string,\n  amount: ethers.BigNumber\n): Promise<TransactionReceipt> {\n  // build transaction for token spending\n  const unsignedTx = await tokenContract.populateTransaction.approve(\n    swapContractAddress,\n    amount\n  );\n\n  const address = await signer.getAddress();\n\n  // gas calcs\n  const gas_limit = \"0x100000\";\n  const gasPrice = await signer.getGasPrice();\n  const parsedGasPrice = ethers.utils.hexlify(parseInt(gasPrice.toString()));\n\n  console.log(\"gettingTranscationCount\", provider);\n\n  unsignedTx.nonce = await provider.getTransactionCount(address, \"latest\");\n  unsignedTx.gasLimit = ethers.BigNumber.from(ethers.utils.hexlify(gas_limit));\n  unsignedTx.gasPrice = ethers.BigNumber.from(parsedGasPrice);\n  console.log(\"done gettingTranscationCount\");\n\n  // sign and send transaction\n  const tx = await signer.sendTransaction(unsignedTx);\n  return tx.wait();\n}\n\nfunction makeCrossChainSwapV3Contract(\n  contractAddress: string,\n  provider: ethers.providers.Provider\n): ethers.Contract {\n  return new ethers.Contract(contractAddress, SWAP_CONTRACT_V3_ABI, provider);\n}\n\nfunction makeCrossChainSwapV2Contract(\n  contractAddress: string,\n  provider: ethers.providers.Provider\n): ethers.Contract {\n  return new ethers.Contract(contractAddress, SWAP_CONTRACT_V2_ABI, provider);\n}\n\nfunction makeCrossChainSwapContract(\n  provider: ethers.providers.Provider,\n  protocol: string,\n  contractAddress: string\n): ethers.Contract {\n  if (protocol === PROTOCOL_UNISWAP_V2) {\n    return makeCrossChainSwapV2Contract(contractAddress, provider);\n  } else {\n    return makeCrossChainSwapV3Contract(contractAddress, provider);\n  }\n}\n\nfunction addressToBytes32(\n  address: string,\n  wormholeChainId: ChainId\n): Uint8Array {\n  const hexString = nativeToHexString(address, wormholeChainId);\n  if (hexString === null) {\n    throw new Error(\"nativeToHexString returned null\");\n  }\n  return hexToUint8Array(hexString);\n}\n\nasync function approveAndSwapExactIn(\n  srcProvider: ethers.providers.Provider,\n  srcWallet: ethers.Signer,\n  srcTokenIn: UniEvmToken,\n  quoteParams: ExactInCrossParameters,\n  srcExecutionParams: ExecutionParameters,\n  dstExecutionParams: ExecutionParameters,\n  isNative: boolean\n): Promise<TransactionReceipt> {\n  const swapContractParams = srcExecutionParams.crossChainSwap;\n\n  const protocol = quoteParams.src.protocol;\n  const swapContract = makeCrossChainSwapContract(\n    srcProvider,\n    protocol,\n    swapContractParams.address\n  );\n  const contractWithSigner = swapContract.connect(srcWallet);\n\n  // approve and swap this amount\n  const amountIn = quoteParams.src.amountIn;\n\n  const address = await srcWallet.getAddress();\n\n  const swapParams = [\n    amountIn,\n    quoteParams.src.minAmountOut,\n    quoteParams.dst.minAmountOut,\n    address,\n    quoteParams.src.deadline,\n    quoteParams.dst.poolFee || quoteParams.src.poolFee,\n  ];\n\n  const pathArray = quoteParams.src.path.concat(quoteParams.dst.path);\n\n  const dstWormholeChainId = dstExecutionParams.wormhole.chainId;\n  const dstContractAddress = addressToBytes32(\n    dstExecutionParams.crossChainSwap.address,\n    dstWormholeChainId\n  );\n  const bridgeNonce = 69;\n\n  // do the swap\n  if (isNative) {\n    const gasPlusValue = {\n      value: amountIn,\n      gasLimit: CROSSCHAINSWAP_GAS_PARAMETERS.gasLimit,\n      maxFeePerGas: CROSSCHAINSWAP_GAS_PARAMETERS.maxFeePerGas,\n      maxPriorityFeePerGas: CROSSCHAINSWAP_GAS_PARAMETERS.maxPriorityFeePerGas,\n    };\n\n    console.info(\"swapExactNativeInAndTransfer\");\n    const tx = await contractWithSigner.swapExactNativeInAndTransfer(\n      swapParams,\n      pathArray,\n      quoteParams.relayerFee.amount,\n      dstWormholeChainId,\n      dstContractAddress,\n      bridgeNonce,\n      gasPlusValue\n    );\n    return tx.wait();\n  } else {\n    console.info(\"approving contract to spend token in\");\n    await approveContractTokenSpend(\n      srcProvider,\n      srcWallet,\n      srcTokenIn.getContract(),\n      swapContract.address,\n      amountIn\n    );\n\n    console.info(\"swapExactInAndTransfer\");\n    const tx = await contractWithSigner.swapExactInAndTransfer(\n      swapParams,\n      pathArray,\n      quoteParams.relayerFee.amount,\n      dstWormholeChainId,\n      dstContractAddress,\n      bridgeNonce,\n      CROSSCHAINSWAP_GAS_PARAMETERS\n    );\n    return tx.wait();\n  }\n}\n\nasync function approveAndSwapExactOut(\n  srcProvider: ethers.providers.Provider,\n  srcWallet: ethers.Signer,\n  srcTokenIn: UniEvmToken,\n  quoteParams: ExactOutCrossParameters,\n  srcExecutionParams: ExecutionParameters,\n  dstExecutionParams: ExecutionParameters,\n  isNative: boolean\n): Promise<TransactionReceipt> {\n  const swapContractParams = srcExecutionParams.crossChainSwap;\n\n  const protocol = quoteParams.src.protocol;\n  const swapContract = makeCrossChainSwapContract(\n    srcProvider,\n    protocol,\n    swapContractParams.address\n  );\n  const contractWithSigner = swapContract.connect(srcWallet);\n\n  // approve and swap this amount\n  const amountOut = quoteParams.src.amountOut;\n  const maxAmountIn = quoteParams.src.maxAmountIn;\n\n  const address = await srcWallet.getAddress();\n\n  const swapParams = [\n    amountOut,\n    maxAmountIn,\n    quoteParams.dst.amountOut,\n    address,\n    quoteParams.src.deadline,\n    quoteParams.dst.poolFee || quoteParams.src.poolFee,\n  ];\n  const pathArray = quoteParams.src.path.concat(quoteParams.dst.path);\n\n  const dstWormholeChainId = dstExecutionParams.wormhole.chainId;\n  const dstContractAddress = addressToBytes32(\n    dstExecutionParams.crossChainSwap.address,\n    dstWormholeChainId\n  );\n  const bridgeNonce = 69;\n\n  // do the swap\n  if (isNative) {\n    const gasPlusValue = {\n      value: maxAmountIn,\n      gasLimit: CROSSCHAINSWAP_GAS_PARAMETERS.gasLimit,\n      maxFeePerGas: CROSSCHAINSWAP_GAS_PARAMETERS.maxFeePerGas,\n      maxPriorityFeePerGas: CROSSCHAINSWAP_GAS_PARAMETERS.maxPriorityFeePerGas,\n    };\n\n    console.info(\"swapExactNativeOutAndTransfer\");\n    const tx = await contractWithSigner.swapExactNativeOutAndTransfer(\n      swapParams,\n      pathArray,\n      quoteParams.relayerFee.amount,\n      dstWormholeChainId,\n      dstContractAddress,\n      bridgeNonce,\n      gasPlusValue\n    );\n    return tx.wait();\n  } else {\n    console.info(\"approving contract to spend token in\");\n    await approveContractTokenSpend(\n      srcProvider,\n      srcWallet,\n      srcTokenIn.getContract(),\n      swapContract.address,\n      maxAmountIn\n    );\n\n    console.info(\"swapExactOutAndTransfer\");\n    const tx = await contractWithSigner.swapExactOutAndTransfer(\n      swapParams,\n      pathArray,\n      quoteParams.relayerFee.amount,\n      dstWormholeChainId,\n      dstContractAddress,\n      bridgeNonce,\n      CROSSCHAINSWAP_GAS_PARAMETERS\n    );\n    return tx.wait();\n  }\n}\n\nasync function swapExactInFromVaa(\n  dstProvider: ethers.providers.Provider,\n  dstWallet: ethers.Signer,\n  dstExecutionParams: ExecutionParameters,\n  dstProtocol: string,\n  signedVaa: Uint8Array,\n  isNative: boolean\n): Promise<TransactionReceipt> {\n  const swapContractParams = dstExecutionParams.crossChainSwap;\n\n  const swapContract = makeCrossChainSwapContract(\n    dstProvider,\n    dstProtocol,\n    swapContractParams.address\n  );\n  const contractWithSigner = swapContract.connect(dstWallet);\n\n  if (isNative) {\n    console.info(\"swapExactInFromVaaNative\");\n    return swapExactInFromVaaNative(contractWithSigner, signedVaa);\n  } else {\n    console.info(\"swapExactInFromVaaToken\");\n    return swapExactInFromVaaToken(contractWithSigner, signedVaa);\n  }\n}\n\nasync function swapExactOutFromVaa(\n  dstProvider: ethers.providers.Provider,\n  dstWallet: ethers.Signer,\n  dstExecutionParams: ExecutionParameters,\n  dstProtocol: string,\n  signedVaa: Uint8Array,\n  isNative: boolean\n): Promise<TransactionReceipt> {\n  const swapContractParams = dstExecutionParams.crossChainSwap;\n\n  const swapContract = makeCrossChainSwapContract(\n    dstProvider,\n    dstProtocol,\n    swapContractParams.address\n  );\n  const contractWithSigner = swapContract.connect(dstWallet);\n\n  if (isNative) {\n    console.info(\"swapExactOutFromVaaNative\");\n    return swapExactOutFromVaaNative(contractWithSigner, signedVaa);\n  } else {\n    console.info(\"swapExactOutFromVaaToken\");\n    return swapExactOutFromVaaToken(contractWithSigner, signedVaa);\n  }\n}\n\ninterface CrossChainSwapTokens {\n  srcIn: UniEvmToken;\n  srcOut: UniEvmToken;\n  dstIn: UniEvmToken;\n  dstOut: UniEvmToken;\n}\n\ninterface VaaSearchParams {\n  sequence: string;\n  emitterAddress: string;\n}\n\nexport function makeProvider(tokenAddress: string) {\n  switch (tokenAddress) {\n    case WETH_TOKEN_INFO.address: {\n      const url = process.env.REACT_APP_GOERLI_PROVIDER;\n      if (!url) {\n        throw new Error(\"Could not find REACT_APP_GOERLI_PROVIDER\");\n      }\n      return new ethers.providers.StaticJsonRpcProvider(url);\n    }\n    case WMATIC_TOKEN_INFO.address: {\n      const url = process.env.REACT_APP_MUMBAI_PROVIDER;\n      if (!url) {\n        throw new Error(\"Could not find REACT_APP_MUMBAI_PROVIDER\");\n      }\n      return new ethers.providers.StaticJsonRpcProvider(url);\n    }\n    default: {\n      throw Error(\"unrecognized token address\");\n    }\n  }\n}\n\nexport class UniswapToUniswapExecutor {\n  // quoting\n  quoter: UniswapToUniswapQuoter;\n  cachedExactInParams: ExactInCrossParameters;\n  cachedExactOutParams: ExactOutCrossParameters;\n  quoteType: QuoteType;\n  tokens: CrossChainSwapTokens;\n\n  // swapping\n  isNative: boolean;\n  slippage: string;\n  relayerFeeAmount: string;\n  srcExecutionParams: ExecutionParameters;\n  dstExecutionParams: ExecutionParameters;\n\n  // vaa handling\n  transportFactory: grpc.TransportFactory;\n  vaaSearchParams: VaaSearchParams;\n  vaaBytes: Uint8Array;\n  srcReceipt: TransactionReceipt;\n  dstReceipt: TransactionReceipt;\n\n  async initialize(\n    tokenInAddress: string,\n    tokenOutAddress: string,\n    isNative: boolean\n  ): Promise<void> {\n    this.isNative = isNative;\n\n    const srcProvider = makeProvider(tokenInAddress);\n    const dstProvider = makeProvider(tokenOutAddress);\n\n    this.quoter = new UniswapToUniswapQuoter(srcProvider, dstProvider);\n    await this.quoter.initialize();\n\n    await this.makeTokens(tokenInAddress, tokenOutAddress);\n\n    // now that we have a chain id for each network, get contract info for each chain\n    this.srcExecutionParams = makeExecutionParameters(\n      this.quoter.srcNetwork.chainId\n    );\n    this.dstExecutionParams = makeExecutionParameters(\n      this.quoter.dstNetwork.chainId\n    );\n  }\n\n  setSlippage(slippage: string): void {\n    this.slippage = slippage;\n  }\n\n  setRelayerFee(amount: string): void {\n    this.relayerFeeAmount = amount;\n  }\n\n  areSwapParametersUndefined(): boolean {\n    return this.slippage === undefined || this.relayerFeeAmount === undefined;\n  }\n\n  setDeadlines(deadline: string): void {\n    this.quoter.setDeadlines(deadline);\n  }\n\n  async makeTokens(\n    tokenInAddress: string,\n    tokenOutAddress: string\n  ): Promise<void> {\n    const quoter = this.quoter;\n\n    const [srcTokenIn, srcTokenOut] = await quoter.makeSrcTokens(\n      tokenInAddress\n    );\n    const [dstTokenIn, dstTokenOut] = await quoter.makeDstTokens(\n      tokenOutAddress\n    );\n\n    this.tokens = {\n      srcIn: srcTokenIn,\n      srcOut: srcTokenOut,\n      dstIn: dstTokenIn,\n      dstOut: dstTokenOut,\n    };\n  }\n\n  getTokens(): CrossChainSwapTokens {\n    return this.tokens;\n  }\n\n  async computeAndVerifySrcPoolAddress(): Promise<string> {\n    return this.quoter.computeAndVerifySrcPoolAddress();\n  }\n\n  async computeAndVerifyDstPoolAddress(): Promise<string> {\n    return this.quoter.computeAndVerifyDstPoolAddress();\n  }\n\n  async computeQuoteExactIn(amountIn: string): Promise<ExactInCrossParameters> {\n    if (this.areSwapParametersUndefined()) {\n      throw Error(\"undefined swap parameters\");\n    }\n\n    this.cachedExactInParams = await this.quoter.computeExactInParameters(\n      amountIn,\n      this.slippage,\n      this.relayerFeeAmount\n    );\n    this.quoteType = QuoteType.ExactIn;\n    return this.cachedExactInParams;\n  }\n\n  async computeQuoteExactOut(\n    amountOut: string\n  ): Promise<ExactOutCrossParameters> {\n    if (this.areSwapParametersUndefined()) {\n      throw Error(\"undefined swap parameters\");\n    }\n\n    this.cachedExactOutParams = await this.quoter.computeExactOutParameters(\n      amountOut,\n      this.slippage,\n      this.relayerFeeAmount\n    );\n    this.quoteType = QuoteType.ExactOut;\n    return this.cachedExactOutParams;\n  }\n\n  getSrcProvider(): ethers.providers.Provider {\n    return this.quoter.srcProvider;\n  }\n\n  getDstProvider(): ethers.providers.Provider {\n    return this.quoter.dstProvider;\n  }\n\n  async approveAndSwapExactIn(\n    wallet: ethers.Signer\n  ): Promise<TransactionReceipt> {\n    return approveAndSwapExactIn(\n      this.getSrcProvider(),\n      wallet,\n      this.tokens.srcIn,\n      this.cachedExactInParams,\n      this.srcExecutionParams,\n      this.dstExecutionParams,\n      this.isNative\n    );\n  }\n\n  async approveAndSwapExactOut(\n    wallet: ethers.Signer\n  ): Promise<TransactionReceipt> {\n    return approveAndSwapExactOut(\n      this.getSrcProvider(),\n      wallet,\n      this.tokens.srcIn,\n      this.cachedExactOutParams,\n      this.srcExecutionParams,\n      this.dstExecutionParams,\n      this.isNative\n    );\n  }\n\n  async approveAndSwap(wallet: ethers.Signer): Promise<TransactionReceipt> {\n    const quoteType = this.quoteType;\n\n    if (quoteType === QuoteType.ExactIn) {\n      this.srcReceipt = await this.approveAndSwapExactIn(wallet);\n    } else if (quoteType === QuoteType.ExactOut) {\n      this.srcReceipt = await this.approveAndSwapExactOut(wallet);\n    } else {\n      throw Error(\"no quote found\");\n    }\n\n    this.fetchAndSetEmitterAndSequence();\n    return this.srcReceipt;\n  }\n\n  fetchAndSetEmitterAndSequence(): void {\n    const receipt = this.srcReceipt;\n    if (receipt === undefined) {\n      throw Error(\"no swap receipt found\");\n    }\n\n    const wormholeParams = this.srcExecutionParams.wormhole;\n\n    this.vaaSearchParams = {\n      sequence: parseSequenceFromLogEth(\n        receipt,\n        wormholeParams.coreBridgeAddress\n      ),\n      emitterAddress: getEmitterAddressEth(wormholeParams.tokenBridgeAddress),\n    };\n  }\n\n  async fetchSignedVaaFromSwap(): Promise<void> {\n    const vaaSearchParams = this.vaaSearchParams;\n    if (vaaSearchParams === undefined) {\n      throw Error(\"no vaa search params found\");\n    }\n    const sequence = vaaSearchParams.sequence;\n    const emitterAddress = vaaSearchParams.emitterAddress;\n    console.info(`sequence: ${sequence}, emitterAddress: ${emitterAddress}`);\n    // wait for VAA to be signed\n    const vaaResponse = await getSignedVAAWithRetry(\n      WORMHOLE_RPC_HOSTS,\n      this.srcExecutionParams.wormhole.chainId,\n      vaaSearchParams.emitterAddress,\n      vaaSearchParams.sequence\n    );\n    // grab vaaBytes\n    this.vaaBytes = vaaResponse.vaaBytes;\n  }\n\n  async fetchVaaAndSwap(wallet: ethers.Signer): Promise<TransactionReceipt> {\n    await this.fetchSignedVaaFromSwap();\n\n    const quoteType = this.quoteType;\n\n    if (quoteType === QuoteType.ExactIn) {\n      this.dstReceipt = await this.swapExactInFromVaa(wallet);\n    } else if (quoteType === QuoteType.ExactOut) {\n      this.dstReceipt = await this.swapExactOutFromVaa(wallet);\n    } else {\n      throw Error(\"no quote found\");\n    }\n\n    return this.dstReceipt;\n  }\n\n  async swapExactInFromVaa(wallet: ethers.Signer): Promise<TransactionReceipt> {\n    return swapExactInFromVaa(\n      this.getDstProvider(),\n      wallet,\n      this.dstExecutionParams,\n      this.cachedExactInParams.dst.protocol,\n      this.vaaBytes,\n      this.isNative\n    );\n  }\n\n  async swapExactOutFromVaa(\n    wallet: ethers.Signer\n  ): Promise<TransactionReceipt> {\n    return swapExactOutFromVaa(\n      this.getDstProvider(),\n      wallet,\n      this.dstExecutionParams,\n      this.cachedExactOutParams.dst.protocol,\n      this.vaaBytes,\n      this.isNative\n    );\n  }\n\n  //getSwapResult(\n  //  walletAddress: string,\n  //  onSwapResult: (result: boolean) => void\n  //) {\n  //  console.log(this.cachedExactInParams.dst.protocol);\n  //  console.log(this.dstExecutionParams.crossChainSwap.address);\n  //  const contract = makeCrossChainSwapContract(\n  //    this.getDstProvider(),\n  //    this.quoteType === QuoteType.ExactIn\n  //      ? this.cachedExactInParams.dst.protocol\n  //      : this.cachedExactOutParams.dst.protocol,\n  //    this.dstExecutionParams.crossChainSwap.address\n  //  );\n  //  const filter = contract.filters.SwapResult(walletAddress);\n  //  contract.once(\n  //    filter,\n  //    (recipient, tokenAddress, caller, amount, success) => {\n  //      onSwapResult(success);\n  //    }\n  //  );\n  //}\n}\n","export const SWAP_CONTRACT_ADDRESS =\n  \"0xDE3a69BFd962Eb16Ae742FdbA42ac48bb3b4E8fD\";\n","export const SWAP_CONTRACT_ADDRESS =\n  \"0xe34Bda733530C5687Bd2aCaB093218edCCA142E4\";\n","const MM_ERR_WITH_INFO_START =\n  \"VM Exception while processing transaction: revert \";\nconst parseError = (e: any) =>\n  e?.data?.message?.startsWith(MM_ERR_WITH_INFO_START)\n    ? e.data.message.replace(MM_ERR_WITH_INFO_START, \"\")\n    : e?.response?.data?.error // terra error\n    ? e.response.data.error\n    : e?.message\n    ? e.message\n    : \"An unknown error occurred\";\nexport default parseError;\n","import {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  InputAdornment,\n  TextField,\n} from \"@material-ui/core\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useState } from \"react\";\n\nconst useStyles = makeStyles({\n  topScrollPaper: {\n    alignItems: \"flex-start\",\n  },\n  topPaperScrollBody: {\n    verticalAlign: \"top\",\n  },\n  button: {\n    float: \"right\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n});\n\nconst clamp = (value: number, min: number, max: number) => {\n  if (isNaN(value)) {\n    return value;\n  }\n  return Math.min(Math.max(min, value), max);\n};\n\nexport default function Settings({\n  disabled,\n  slippage,\n  deadline,\n  onSlippageChange,\n  onDeadlineChange,\n}: {\n  disabled: boolean;\n  slippage: string;\n  deadline: string;\n  onSlippageChange: (slippage: string) => void;\n  onDeadlineChange: (deadline: string) => void;\n}) {\n  const classes = useStyles();\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\n\n  const dialog = (\n    <Dialog\n      open={dialogIsOpen}\n      aria-labelledby=\"simple-dialog-title\"\n      onClose={() => setDialogIsOpen(false)}\n      maxWidth=\"xs\"\n      scroll=\"paper\"\n    >\n      <DialogTitle id=\"simple-dialog-title\">Transaction Settings</DialogTitle>\n      <DialogContent>\n        <TextField\n          variant=\"outlined\"\n          label=\"Slippage tolerance\"\n          value={slippage}\n          fullWidth\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n          }}\n          margin=\"normal\"\n          type=\"number\"\n          onChange={(event) => {\n            onSlippageChange(\n              event.target.value === \"\"\n                ? \"\"\n                : clamp(parseFloat(event.target.value), 0, 100).toString()\n            );\n          }}\n        ></TextField>\n        <TextField\n          variant=\"outlined\"\n          label=\"Transaction deadline\"\n          value={deadline}\n          fullWidth\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">minutes</InputAdornment>\n            ),\n          }}\n          margin=\"normal\"\n          type=\"number\"\n          onChange={(event) => {\n            onDeadlineChange(\n              event.target.value === \"\"\n                ? \"\"\n                : clamp(parseFloat(event.target.value), 1, 100).toString()\n            );\n          }}\n        ></TextField>\n      </DialogContent>\n    </Dialog>\n  );\n\n  return (\n    <div>\n      <Button\n        className={classes.button}\n        onClick={() => {\n          setDialogIsOpen(true);\n        }}\n        disabled={disabled}\n        disableRipple\n        endIcon={<SettingsIcon />}\n      />\n      {dialog}\n    </div>\n  );\n}\n","import { getIsTransferCompletedEth } from \"@certusone/wormhole-sdk\";\nimport { ethers } from \"ethers\";\n\nexport default async function getIsTransferCompletedEvmWithRetry(\n  tokenBridgeAddress: string,\n  provider: ethers.providers.Provider,\n  signedVAA: Uint8Array,\n  retryTimeoutMs: number,\n  retryAttempts: number\n) {\n  let result = false;\n  let attempts = 0;\n  while (attempts < retryAttempts) {\n    try {\n      result = await getIsTransferCompletedEth(\n        tokenBridgeAddress,\n        provider,\n        signedVAA\n      );\n    } catch (e) {\n      console.error(e);\n    }\n    if (result) {\n      break;\n    }\n    await new Promise((resolve) => setTimeout(resolve, retryTimeoutMs));\n    attempts++;\n  }\n  return result;\n}\n","import \"../css/CircleLoader.css\";\n\nexport default function CircleLoader() {\n  return (\n    <div id={\"loaderContainer\"}>\n      <div id={\"circle\"}>\n        <div id={\"inner\"}></div>\n      </div>\n    </div>\n  );\n}\n","import { ChainId, CHAIN_ID_POLYGON, isEVMChain } from \"@certusone/wormhole-sdk\";\nimport { LinearProgress, makeStyles, Typography } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useEthereumProvider } from \"../contexts/EthereumProviderContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    textAlign: \"center\",\n  },\n  message: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\nexport default function TransactionProgress({\n  chainId,\n  txBlockNumber,\n  step,\n}: {\n  chainId: ChainId;\n  txBlockNumber: number | undefined;\n  step: number;\n}) {\n  const classes = useStyles();\n  const { provider } = useEthereumProvider();\n  const [currentBlock, setCurrentBlock] = useState(0);\n  useEffect(() => {\n    if (step !== 1 || !txBlockNumber) return;\n    if (isEVMChain(chainId) && provider) {\n      let cancelled = false;\n      (async () => {\n        while (!cancelled) {\n          await new Promise((resolve) => setTimeout(resolve, 500));\n          try {\n            const newBlock = await provider.getBlockNumber();\n            if (!cancelled) {\n              setCurrentBlock(newBlock);\n            }\n          } catch (e) {\n            console.error(e);\n          }\n        }\n      })();\n      return () => {\n        cancelled = true;\n      };\n    }\n  }, [step, chainId, provider, txBlockNumber]);\n  const blockDiff =\n    txBlockNumber !== undefined && txBlockNumber && currentBlock\n      ? currentBlock - txBlockNumber\n      : 0;\n  const expectedBlocks = 15;\n  let value;\n  let valueBuffer;\n  let message;\n  switch (step) {\n    case 1:\n      value = (blockDiff / expectedBlocks) * 50;\n      valueBuffer = 50;\n      message = `Waiting for ${blockDiff} / ${expectedBlocks} confirmations on ${\n        chainId === CHAIN_ID_POLYGON ? \"Polygon\" : \"Ethereum\"\n      }...`;\n      break;\n    case 2:\n      value = 50;\n      valueBuffer = 100;\n      message = \"Waiting for relayer to complete swap...\";\n      break;\n    case 3:\n      value = 100;\n      valueBuffer = 100;\n      message = \"\";\n      break;\n  }\n  return (\n    <div className={classes.root}>\n      <LinearProgress\n        variant=\"buffer\"\n        value={value}\n        valueBuffer={valueBuffer}\n      />\n      <Typography variant=\"body2\" className={classes.message}>\n        {message}\n      </Typography>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Discord.3cc30da6.svg\";","export default __webpack_public_path__ + \"static/media/Docs.5306a132.svg\";","export default __webpack_public_path__ + \"static/media/Github.cf553f61.svg\";","export default __webpack_public_path__ + \"static/media/Medium.a9e68aca.svg\";","export default __webpack_public_path__ + \"static/media/Telegram.86d97a48.svg\";","export default __webpack_public_path__ + \"static/media/Twitter.06e4f08c.svg\";","export default __webpack_public_path__ + \"static/media/wormhole-network.5bb90ed1.svg\";","import { IconButton, makeStyles, Typography } from \"@material-ui/core\";\nimport Discord from \"../icons/Discord.svg\";\nimport Docs from \"../icons/Docs.svg\";\nimport Github from \"../icons/Github.svg\";\nimport Medium from \"../icons/Medium.svg\";\nimport Telegram from \"../icons/Telegram.svg\";\nimport Twitter from \"../icons/Twitter.svg\";\nimport Wormhole from \"../icons/wormhole-network.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    margin: theme.spacing(2, 0, 2),\n    textAlign: \"center\",\n  },\n  socialIcon: {\n    \"& img\": {\n      height: 24,\n      width: 24,\n    },\n  },\n  builtWithContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    opacity: 0.5,\n    marginTop: theme.spacing(1),\n  },\n  wormholeIcon: {\n    height: 48,\n    width: 48,\n    filter: \"contrast(0)\",\n    transition: \"filter 0.5s\",\n    \"&:hover\": {\n      filter: \"contrast(1)\",\n    },\n    verticalAlign: \"middle\",\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default function Footer() {\n  const classes = useStyles();\n  return (\n    <footer className={classes.footer}>\n      <div>\n        <IconButton\n          href=\"https://docs.wormholenetwork.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={classes.socialIcon}\n        >\n          <img src={Docs} alt=\"Docs\" />\n        </IconButton>\n        <IconButton\n          href=\"https://discord.gg/wormholecrypto\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={classes.socialIcon}\n        >\n          <img src={Discord} alt=\"Discord\" />\n        </IconButton>\n        <IconButton\n          href=\"https://github.com/certusone/wormhole\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={classes.socialIcon}\n        >\n          <img src={Github} alt=\"Github\" />\n        </IconButton>\n        <IconButton\n          href=\"http://wormholecrypto.medium.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={classes.socialIcon}\n        >\n          <img src={Medium} alt=\"Medium\" />\n        </IconButton>\n        <IconButton\n          href=\"https://t.me/wormholecrypto\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={classes.socialIcon}\n        >\n          <img src={Telegram} alt=\"Telegram\" />\n        </IconButton>\n        <IconButton\n          href=\"https://twitter.com/wormholecrypto\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={classes.socialIcon}\n        >\n          <img src={Twitter} alt=\"Twitter\" />\n        </IconButton>\n      </div>\n      <div className={classes.builtWithContainer}>\n        <div>\n          <a\n            href=\"https://wormholenetwork.com/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img\n              src={Wormhole}\n              alt=\"Wormhole\"\n              className={classes.wormholeIcon}\n            />\n          </a>\n        </div>\n        <div>\n          <Typography variant=\"body2\">Open Source</Typography>\n          <Typography variant=\"body2\">Built with &#10084;</Typography>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","import {\n  Collapse,\n  Container,\n  Link,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { ChainId, getSignedVAAWithRetry } from \"@certusone/wormhole-sdk\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport ButtonWithLoader from \"../components/ButtonWithLoader\";\nimport EthereumSignerKey from \"../components/EthereumSignerKey\";\nimport TokenSelect from \"../components/TokenSelect\";\nimport { useEthereumProvider } from \"../contexts/EthereumProviderContext\";\nimport {\n  ETH_TOKEN_INFO,\n  getEvmChainId,\n  MATIC_TOKEN_INFO,\n  RELAYER_FEE_UST,\n  TOKEN_INFOS,\n  WETH_TOKEN_INFO,\n  WMATIC_TOKEN_INFO,\n  WORMHOLE_RPC_HOSTS,\n} from \"../utils/consts\";\nimport { COLORS } from \"../muiTheme\";\nimport { UniswapToUniswapExecutor } from \"../swapper/swapper\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { hexlify, hexStripZeros } from \"ethers/lib/utils\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { useSnackbar } from \"notistack\";\nimport { Alert } from \"@material-ui/lab\";\nimport parseError from \"../utils/parseError\";\nimport Settings from \"../components/Settings\";\nimport getIsTransferCompletedEvmWithRetry from \"../utils/getIsTransferCompletedWithRetry\";\nimport CircleLoader from \"../components/CircleLoader\";\nimport { ArrowForward, CheckCircleOutlineRounded } from \"@material-ui/icons\";\nimport SwapProgress from \"../components/SwapProgress\";\nimport Footer from \"../components/Footer\";\n\nconst useStyles = makeStyles((theme) => ({\n  bg: {\n    background:\n      \"linear-gradient(160deg, rgba(69,74,117,.1) 0%, rgba(138,146,178,.1) 33%, rgba(69,74,117,.1) 66%, rgba(98,104,143,.1) 100%), linear-gradient(45deg, rgba(153,69,255,.1) 0%, rgba(121,98,231,.1) 20%, rgba(0,209,140,.1) 100%)\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n  },\n  centeredContainer: {\n    textAlign: \"center\",\n    width: \"100%\",\n  },\n  mainPaper: {\n    padding: \"2rem\",\n    backgroundColor: COLORS.nearBlackWithMinorTransparency,\n  },\n  numberField: {\n    flexGrow: 1,\n    \"& > * > .MuiInputBase-input\": {\n      textAlign: \"center\",\n      height: \"100%\",\n      flexGrow: \"1\",\n      fontSize: \"3rem\",\n      fontFamily: \"Roboto Mono, monospace\",\n      caretShape: \"block\",\n      \"&::-webkit-outer-spin-button, &::-webkit-inner-spin-button\": {\n        \"-webkit-appearance\": \"none\",\n        \"-moz-appearance\": \"none\",\n        margin: 0,\n      },\n      \"&[type=number]\": {\n        \"-webkit-appearance\": \"textfield\",\n        \"-moz-appearance\": \"textfield\",\n      },\n    },\n    \"& > * > input::-webkit-inner-spin-button\": {\n      webkitAppearance: \"none\",\n      margin: \"0\",\n    },\n  },\n  gradientButton: {\n    backgroundImage: `linear-gradient(45deg, ${COLORS.blue} 0%, ${COLORS.nearBlack}20 50%,  ${COLORS.blue}30 62%, ${COLORS.nearBlack}50  120%)`,\n    transition: \"0.75s\",\n    backgroundSize: \"200% auto\",\n    boxShadow: \"0 0 20px #222\",\n    \"&:hover\": {\n      backgroundPosition:\n        \"right center\" /* change the direction of the change here */,\n    },\n    width: \"100%\",\n    height: \"3rem\",\n    marginTop: \"1rem\",\n  },\n  disabled: {\n    background: COLORS.gray,\n  },\n  spacer: {\n    height: \"1rem\",\n  },\n  titleBar: {\n    marginTop: \"10rem\",\n    \"& > *\": {\n      margin: \".5rem\",\n      alignSelf: \"flex-end\",\n    },\n  },\n  tokenSelectWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  wormholeIcon: {\n    height: 60,\n    filter: \"contrast(0)\",\n    transition: \"filter 0.5s\",\n    \"&:hover\": {\n      filter: \"contrast(1)\",\n    },\n    verticalAlign: \"middle\",\n    margin: \"1rem\",\n    display: \"inline-block\",\n  },\n  loaderHolder: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  successIcon: {\n    color: COLORS.green,\n    fontSize: \"200px\",\n  },\n  swapPath: {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst switchProviderNetwork = async (\n  provider: Web3Provider,\n  chainId: ChainId\n) => {\n  const evmChainId = getEvmChainId(chainId);\n  if (evmChainId === undefined) {\n    throw new Error(\"Unknown chainId\");\n  }\n  await provider.send(\"wallet_switchEthereumChain\", [\n    { chainId: hexStripZeros(hexlify(evmChainId)) },\n  ]);\n  const network = await provider.getNetwork();\n  if (network.chainId !== evmChainId) {\n    throw new Error(\"Could not switch network\");\n  }\n};\n\nexport default function Home() {\n  const classes = useStyles();\n  const [sourceTokenInfo, setSourceTokenInfo] = useState(MATIC_TOKEN_INFO);\n  const [targetTokenInfo, setTargetTokenInfo] = useState(ETH_TOKEN_INFO);\n  const [amountIn, setAmountIn] = useState(\"\");\n  const [amountInUST, setAmountInUST] = useState(\"\");\n  const [amountOut, setAmountOut] = useState(\"\");\n  const [deadline, setDeadline] = useState(\"30\");\n  const [slippage, setSlippage] = useState(\"1\");\n  const [executor, setExecutor] = useState<UniswapToUniswapExecutor | null>(\n    null\n  );\n  const [isSwapping, setIsSwapping] = useState(false);\n  const [isComputingQuote, setIsComputingQuote] = useState(false);\n  const [hasQuote, setHasQuote] = useState(false);\n  const { provider, signer } = useEthereumProvider();\n  const { enqueueSnackbar } = useSnackbar();\n  const [isFirstSwapComplete, setIsFirstSwapComplete] = useState(false);\n  const [isSecondSwapComplete, setIsSecondSwapComplete] = useState(false);\n  const [sourceTxBlockNumber, setSourceTxBlockNumber] = useState<\n    number | undefined\n  >(undefined);\n  const [hasSignedVAA, setHasSignedVAA] = useState(false);\n  const [relayerTimeoutString, setRelayerTimeoutString] = useState(\"\");\n\n  const computeQuote = useCallback(() => {\n    (async () => {\n      setHasQuote(false);\n      setIsComputingQuote(true);\n      setAmountOut(\"\");\n      setAmountInUST(\"\");\n      try {\n        if (\n          parseFloat(amountIn) > 0 &&\n          !isNaN(parseFloat(deadline)) &&\n          !isNaN(parseFloat(slippage))\n        ) {\n          const executor = new UniswapToUniswapExecutor();\n          await executor.initialize(\n            sourceTokenInfo.address,\n            targetTokenInfo.address,\n            sourceTokenInfo.isNative\n          );\n          await executor.computeAndVerifySrcPoolAddress().catch((e) => {\n            throw new Error(\"failed to verify source pool address\");\n          });\n          await executor.computeAndVerifyDstPoolAddress().catch((e) => {\n            throw new Error(\"failed to verify dest pool address\");\n          });\n          executor.setDeadlines((parseFloat(deadline) * 60).toString());\n          executor.setSlippage((parseFloat(slippage) / 100).toString());\n          executor.setRelayerFee(RELAYER_FEE_UST);\n          const quote = await executor.computeQuoteExactIn(amountIn);\n          setExecutor(executor);\n          setAmountOut(\n            parseFloat(\n              executor.tokens.dstOut.formatAmount(quote.dst.minAmountOut)\n            ).toFixed(8)\n          );\n          setAmountInUST(\n            parseFloat(\n              executor.tokens.dstIn.formatAmount(quote.dst.amountIn)\n            ).toFixed(2)\n          );\n          setHasQuote(true);\n        }\n      } catch (e) {\n        console.error(e);\n        enqueueSnackbar(null, {\n          content: <Alert severity=\"error\">{parseError(e)}</Alert>,\n        });\n      }\n      setIsComputingQuote(false);\n    })();\n  }, [\n    sourceTokenInfo,\n    targetTokenInfo,\n    amountIn,\n    deadline,\n    slippage,\n    enqueueSnackbar,\n  ]);\n\n  const debouncedComputeQuote = useDebouncedCallback(computeQuote, 1000);\n\n  useEffect(() => {\n    debouncedComputeQuote();\n  }, [\n    sourceTokenInfo,\n    targetTokenInfo,\n    amountIn,\n    deadline,\n    slippage,\n    debouncedComputeQuote,\n  ]);\n\n  const handleAmountChange = useCallback((event) => {\n    setAmountIn(event.target.value);\n  }, []);\n\n  const handleSlippageChange = useCallback((slippage) => {\n    setSlippage(slippage);\n  }, []);\n\n  const handleDeadlineChange = useCallback((deadline) => {\n    setDeadline(deadline);\n  }, []);\n\n  const handleSourceChange = useCallback((event) => {\n    // NOTE: only native-to-native or wrapped-to-wrapped swaps are currently supported\n    if (event.target.value === WMATIC_TOKEN_INFO.name) {\n      setSourceTokenInfo(WMATIC_TOKEN_INFO);\n      setTargetTokenInfo(WETH_TOKEN_INFO);\n    } else if (event.target.value === WETH_TOKEN_INFO.name) {\n      setSourceTokenInfo(WETH_TOKEN_INFO);\n      setTargetTokenInfo(WMATIC_TOKEN_INFO);\n    } else if (event.target.value === ETH_TOKEN_INFO.name) {\n      setSourceTokenInfo(ETH_TOKEN_INFO);\n      setTargetTokenInfo(MATIC_TOKEN_INFO);\n    } else {\n      setSourceTokenInfo(MATIC_TOKEN_INFO);\n      setTargetTokenInfo(ETH_TOKEN_INFO);\n    }\n    setAmountIn(\"\");\n    setAmountOut(\"\");\n  }, []);\n\n  const reset = useCallback(() => {\n    setIsSwapping(false);\n    setHasQuote(false);\n    setIsFirstSwapComplete(false);\n    setIsSecondSwapComplete(false);\n    setAmountIn(\"\");\n    setAmountOut(\"\");\n    setSourceTxBlockNumber(undefined);\n    setRelayerTimeoutString(\"\");\n  }, []);\n\n  const handleSwapClick = useCallback(async () => {\n    if (provider && signer && executor) {\n      try {\n        setIsSwapping(true);\n        setIsFirstSwapComplete(false);\n        setHasSignedVAA(false);\n        setIsSecondSwapComplete(false);\n        setRelayerTimeoutString(\"\");\n        await switchProviderNetwork(provider, sourceTokenInfo.chainId);\n\n        const sourceReceipt = await executor.approveAndSwap(signer);\n        console.info(\n          \"firstSwapTransactionHash:\",\n          sourceReceipt.transactionHash\n        );\n        setIsFirstSwapComplete(true);\n        setSourceTxBlockNumber(sourceReceipt.blockNumber);\n\n        // Wait for the guardian network to reach consensus and emit the signedVAA\n        const { vaaBytes } = await getSignedVAAWithRetry(\n          WORMHOLE_RPC_HOSTS,\n          executor.srcExecutionParams.wormhole.chainId,\n          executor.vaaSearchParams.emitterAddress,\n          executor.vaaSearchParams.sequence\n        );\n        setHasSignedVAA(true);\n        //  Check if the signedVAA has redeemed by the relayer\n        const isCompleted = await getIsTransferCompletedEvmWithRetry(\n          executor.dstExecutionParams.wormhole.tokenBridgeAddress,\n          executor.quoter.dstProvider,\n          vaaBytes,\n          // retry for two minutes\n          3000,\n          40\n        );\n        if (!isCompleted) {\n          // If the relayer hasn't redeemed the signedVAA, then manually redeem it ourselves\n          setRelayerTimeoutString(\n            \"Timed out waiting for relayer to complete swap. You'll need to complete it yourself.\"\n          );\n          await switchProviderNetwork(provider, targetTokenInfo.chainId);\n          const targetReceipt = await executor.fetchVaaAndSwap(signer);\n          console.info(\n            \"secondSwapTransactionHash:\",\n            targetReceipt.transactionHash\n          );\n        }\n        setIsSecondSwapComplete(true);\n      } catch (e: any) {\n        reset();\n        console.error(e);\n        enqueueSnackbar(null, {\n          content: <Alert severity=\"error\">{parseError(e)}</Alert>,\n        });\n      }\n    }\n  }, [\n    provider,\n    signer,\n    executor,\n    enqueueSnackbar,\n    sourceTokenInfo,\n    targetTokenInfo,\n    reset,\n  ]);\n\n  const readyToSwap = provider && signer && hasQuote;\n\n  return (\n    <div className={classes.bg}>\n      <Container className={classes.centeredContainer} maxWidth=\"sm\">\n        <div className={classes.titleBar}></div>\n        <Typography variant=\"h4\" color=\"textSecondary\">\n          Wormhole NativeSwap Demo\n        </Typography>\n        <div className={classes.spacer} />\n        <Paper className={classes.mainPaper}>\n          <Collapse in={!isFirstSwapComplete}>\n            <Settings\n              disabled={isSwapping || isComputingQuote}\n              slippage={slippage}\n              deadline={deadline}\n              onSlippageChange={handleSlippageChange}\n              onDeadlineChange={handleDeadlineChange}\n            />\n            <TokenSelect\n              tokens={TOKEN_INFOS}\n              value={sourceTokenInfo.name}\n              onChange={handleSourceChange}\n              disabled={isSwapping || isComputingQuote}\n            ></TokenSelect>\n            <Typography variant=\"subtitle1\">Send</Typography>\n            <TextField\n              type=\"number\"\n              value={amountIn}\n              disabled={isSwapping || isComputingQuote}\n              InputProps={{ disableUnderline: true }}\n              className={classes.numberField}\n              onChange={handleAmountChange}\n              placeholder=\"0.0\"\n            ></TextField>\n            {parseFloat(amountIn) > sourceTokenInfo.maxAmount ? (\n              <Typography\n                variant=\"subtitle2\"\n                color=\"error\"\n              >{`The max input amount is ${sourceTokenInfo.maxAmount} ${sourceTokenInfo.name}`}</Typography>\n            ) : null}\n            <div className={classes.spacer} />\n            <TokenSelect\n              tokens={TOKEN_INFOS}\n              value={targetTokenInfo.name}\n              onChange={() => {}}\n              disabled={true}\n            ></TokenSelect>\n            <Typography variant=\"subtitle1\">Receive (estimated)</Typography>\n            <TextField\n              type=\"number\"\n              value={amountOut}\n              autoFocus={true}\n              InputProps={{ disableUnderline: true }}\n              className={classes.numberField}\n              inputProps={{ readOnly: true }}\n              placeholder=\"0.0\"\n            ></TextField>\n            <Typography variant=\"subtitle2\">{`Slippage tolerance: ${slippage}%`}</Typography>\n            <Typography variant=\"subtitle2\">{`Relayer fee: ${RELAYER_FEE_UST} UST`}</Typography>\n            {!isSwapping && <EthereumSignerKey />}\n            <ButtonWithLoader\n              disabled={\n                !readyToSwap ||\n                isSwapping ||\n                parseFloat(amountIn) > sourceTokenInfo.maxAmount\n              }\n              showLoader={isSwapping}\n              onClick={handleSwapClick}\n            >\n              Swap\n            </ButtonWithLoader>\n          </Collapse>\n          <Collapse in={isFirstSwapComplete && !isSecondSwapComplete}>\n            <div className={classes.loaderHolder}>\n              <CircleLoader />\n              <div className={classes.spacer} />\n              <Typography variant=\"h5\">\n                {`Your ${sourceTokenInfo.name} is being swapped to ${targetTokenInfo.name}`}\n              </Typography>\n            </div>\n          </Collapse>\n          <Collapse in={isSecondSwapComplete}>\n            <div className={classes.loaderHolder}>\n              <CheckCircleOutlineRounded\n                className={classes.successIcon}\n                fontSize={\"inherit\"}\n              />\n              <Typography>Swap completed!</Typography>\n              <ButtonWithLoader onClick={() => reset()}>\n                Swap more tokens!\n              </ButtonWithLoader>\n            </div>\n          </Collapse>\n          <div className={classes.spacer} />\n          {hasQuote && (\n            <Typography variant=\"subtitle1\" className={classes.swapPath}>\n              {`${amountIn} ${sourceTokenInfo.name}`}\n              <ArrowForward fontSize=\"inherit\" style={{ margin: \"10px\" }} />\n              {`${amountInUST} UST `}\n              <ArrowForward fontSize=\"inherit\" style={{ margin: \"10px\" }} />\n              {`${amountOut} ${targetTokenInfo.name}`}\n            </Typography>\n          )}\n          {isFirstSwapComplete &&\n            !isSecondSwapComplete &&\n            !relayerTimeoutString && (\n              <SwapProgress\n                chainId={sourceTokenInfo.chainId}\n                txBlockNumber={sourceTxBlockNumber}\n                step={!hasSignedVAA ? 1 : !isSecondSwapComplete ? 2 : 3}\n              />\n            )}\n          {relayerTimeoutString && (\n            <Typography variant=\"subtitle1\">{relayerTimeoutString}</Typography>\n          )}\n          <div className={classes.spacer} />\n          <Typography variant=\"subtitle2\" color=\"error\">\n            WARNING: this is a Testnet release only\n          </Typography>\n        </Paper>\n        <div className={classes.spacer} />\n        <Footer />\n        <Link href=\"https://goerli-faucet.slock.it/\" style={{ margin: \"5px\" }}>\n          Goerli faucet\n        </Link>\n        <Link\n          href=\"https://faucet.polygon.technology/\"\n          style={{ margin: \"5px\" }}\n        >\n          Mumbai faucet\n        </Link>\n        <Link\n          href=\"https://github.com/certusone/wormhole-nativeswap-example/\"\n          style={{ margin: \"5px\" }}\n        >\n          NativeSwap GitHub\n        </Link>\n      </Container>\n    </div>\n  );\n}\n","import Home from \"./views/Home\";\n\nexport default function App() {\n  return <Home />;\n}\n","import { Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <Typography variant=\"h5\" style={{ textAlign: \"center\", marginTop: 24 }}>\n          \"An unexpected error has occurred. Please refresh the page.\"\n        </Typography>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { SnackbarProvider } from \"notistack\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport { EthereumProviderProvider } from \"./contexts/EthereumProviderContext\";\nimport { theme } from \"./muiTheme\";\n\nReactDOM.render(\n  <ErrorBoundary>\n    <ThemeProvider theme={theme}>\n      <CssBaseline>\n        <EthereumProviderProvider>\n          <SnackbarProvider maxSnack={3}>\n            <App />\n          </SnackbarProvider>\n        </EthereumProviderProvider>\n      </CssBaseline>\n    </ThemeProvider>\n  </ErrorBoundary>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}